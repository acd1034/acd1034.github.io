[
  {
    "number": "P0009",
    "title": "MDSPAN",
    "url": "https://wg21.link/P0009",
    "ja": "https://onihusube.hatenablog.com/entry/2022/08/11/193828#P0009R18-MDSPAN",
    "ja_old": "https://onihusube.hatenablog.com/entry/2021/06/13/165215#P0009R11-MDSPAN",
    "tag": ""
  },
  {
    "number": "P0124",
    "title": "Linux-Kernel Memory Model",
    "url": "https://wg21.link/P0124",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P0201",
    "title": "A polymorphic value-type for C++",
    "url": "https://wg21.link/P0201",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P0205",
    "title": "Efficient Seeding of Random Number Engines",
    "url": "https://wg21.link/P0205",
    "ja": "https://onihusube.hatenablog.com/entry/2021/07/12/182757#P0205R1-Efficient-Seeding-of-Random-Number-Engines",
    "ja_old": "https://onihusube.hatenablog.com/entry/2021/07/12/182757#P0205R1-Efficient-Seeding-of-Random-Number-Engines",
    "tag": ""
  },
  {
    "number": "P0211",
    "title": "Allocator-aware library wrappers for dynamic allocation",
    "url": "https://wg21.link/P0211",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P0260",
    "title": "C++ Concurrent Queues",
    "url": "https://wg21.link/P0260",
    "ja": "https://onihusube.hatenablog.com/entry/2023/02/12/210302#P0260R5-C-Concurrent-Queues",
    "ja_old": "https://onihusube.hatenablog.com/entry/2023/02/12/210302#P0260R5-C-Concurrent-Queues",
    "tag": ""
  },
  {
    "number": "P0261",
    "title": "C++ Distributed Counters",
    "url": "https://wg21.link/P0261",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P0288",
    "title": "move_only_function (was any_invocable)",
    "url": "https://wg21.link/P0288",
    "ja": "https://onihusube.hatenablog.com/entry/2021/10/03/193523#P0288R9-move_only_function-was-any_invocable",
    "ja_old": "https://onihusube.hatenablog.com/entry/2020/09/18/222444#P0288R6--any_invocable",
    "tag": ""
  },
  {
    "number": "P0290",
    "title": "apply() for synchronized_value",
    "url": "https://wg21.link/P0290",
    "ja": "https://onihusube.hatenablog.com/entry/2023/03/19/184146#P0290R4-apply-for-synchronized_value",
    "ja_old": "https://onihusube.hatenablog.com/entry/2023/03/19/184146#P0290R3-apply-for-synchronized_value",
    "tag": ""
  },
  {
    "number": "P0323",
    "title": "std::expected",
    "url": "https://wg21.link/P0323",
    "ja": "https://onihusube.hatenablog.com/entry/2022/03/19/224729#P0323R12-stdexpected",
    "ja_old": "https://onihusube.hatenablog.com/entry/2021/05/14/214016#P0323R10-stdexpected",
    "tag": ""
  },
  {
    "number": "P0330",
    "title": "Literal Suffixes for (signed) size_t",
    "url": "https://wg21.link/P0330",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P0342",
    "title": "What does \"current time\" mean?",
    "url": "https://wg21.link/P0342",
    "ja": "https://onihusube.hatenablog.com/entry/2023/02/12/210302#P0342R1-What-does-current-time-mean",
    "ja_old": "https://onihusube.hatenablog.com/entry/2023/02/12/210302#P0342R1-What-does-current-time-mean",
    "tag": ""
  },
  {
    "number": "P0350",
    "title": "Integrating simd with parallel algorithms",
    "url": "https://wg21.link/P0350",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P0401",
    "title": "Providing size feedback in the Allocator interface",
    "url": "https://wg21.link/P0401",
    "ja": "https://onihusube.hatenablog.com/entry/2021/03/12/225547#P0401R6-Providing-size-feedback-in-the-Allocator-interface",
    "ja_old": "https://onihusube.hatenablog.com/entry/2021/01/17/005823#P0401R5-Providing-size-feedback-in-the-Allocator-interface",
    "tag": ""
  },
  {
    "number": "P0429",
    "title": "A Standard flat_map",
    "url": "https://wg21.link/P0429",
    "ja": "https://onihusube.hatenablog.com/entry/2022/07/09/160343#P0429R9-A-Standard-flat_map",
    "ja_old": "https://onihusube.hatenablog.com/entry/2022/05/08/195618#P0429R8-A-Standard-flat_map",
    "tag": ""
  },
  {
    "number": "P0443",
    "title": "A Unified Executors Proposal for C++",
    "url": "https://wg21.link/P0443",
    "ja": "https://onihusube.hatenablog.com/entry/2020/10/09/221025#P0443R14--A-Unified-Executors-Proposal-for-C",
    "ja_old": "https://onihusube.hatenablog.com/entry/2020/10/09/221025#P0443R14--A-Unified-Executors-Proposal-for-C",
    "tag": ""
  },
  {
    "number": "P0447",
    "title": "Introduction of std::hive to the standard library",
    "url": "https://wg21.link/P0447",
    "ja": "https://onihusube.hatenablog.com/entry/2023/03/19/184146#P0447R21-Introduction-of-stdhive-to-the-standard-library",
    "ja_old": "https://onihusube.hatenablog.com/entry/2021/02/11/153333#P0447R12-Introduction-of-stdcolony-to-the-standard-library",
    "tag": ""
  },
  {
    "number": "P0448",
    "title": "A strstream replacement using span as buffer",
    "url": "https://wg21.link/P0448",
    "ja": "https://onihusube.hatenablog.com/entry/2021/03/12/225547#P0448R3-A-strstream-replacement-using-span-as-buffer",
    "ja_old": "https://onihusube.hatenablog.com/entry/2021/03/12/225547#P0448R3-A-strstream-replacement-using-span-as-buffer",
    "tag": ""
  },
  {
    "number": "P0493",
    "title": "Atomic maximum/minimum",
    "url": "https://wg21.link/P0493",
    "ja": "https://onihusube.hatenablog.com/entry/2023/03/19/184146#P0493R4-Atomic-maximumminimum",
    "ja_old": "https://onihusube.hatenablog.com/entry/2020/06/01/001003#P0493R1--Atomic-maximumminimum",
    "tag": ""
  },
  {
    "number": "P0533",
    "title": "constexpr for cmath and cstdlib",
    "url": "https://wg21.link/P0533",
    "ja": "https://onihusube.hatenablog.com/entry/2021/12/11/220126#P0533R9-constexpr-for-cmath-and-cstdlib",
    "ja_old": "https://onihusube.hatenablog.com/entry/2020/05/01/194425#P0533R6--constexpr-for-cmath-and-cstdlib",
    "tag": ""
  },
  {
    "number": "P0539",
    "title": "A Proposal to add wide_int Template Class",
    "url": "https://wg21.link/P0539",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P0543",
    "title": "Saturation arithmetic",
    "url": "https://wg21.link/P0543",
    "ja": "https://onihusube.hatenablog.com/entry/2022/10/09/021557#P0543R2-Saturation-arithmetic",
    "ja_old": "https://onihusube.hatenablog.com/entry/2022/06/11/191943#P0543R1-Saturation-arithmetic",
    "tag": ""
  },
  {
    "number": "P0549",
    "title": "Adjuncts to std::hash",
    "url": "https://wg21.link/P0549",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P0561",
    "title": "An RAII Interface for Deferred Reclamation",
    "url": "https://wg21.link/P0561",
    "ja": "https://onihusube.hatenablog.com/entry/2022/03/19/224729#P0561R6-An-RAII-Interface-for-Deferred-Reclamation",
    "ja_old": "https://onihusube.hatenablog.com/entry/2021/01/17/005823#P0561R5-An-RAII-Interface-for-Deferred-Reclamation",
    "tag": ""
  },
  {
    "number": "P0586",
    "title": "Safe integral comparisons",
    "url": "https://wg21.link/P0586",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P0592",
    "title": "To boldly suggest an overall plan for C++26",
    "url": "https://wg21.link/P0592",
    "ja": "https://onihusube.hatenablog.com/entry/2022/11/13/233529#P0592R5-To-boldly-suggest-an-overall-plan-for-C26",
    "ja_old": "https://onihusube.hatenablog.com/entry/2022/11/13/233529#P0592R5-To-boldly-suggest-an-overall-plan-for-C26",
    "tag": ""
  },
  {
    "number": "P0593",
    "title": "Implicit creation of objects for low-level object manipulation",
    "url": "https://wg21.link/P0593",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P0627",
    "title": "Function to mark unreachable code",
    "url": "https://wg21.link/P0627",
    "ja": "https://onihusube.hatenablog.com/entry/2021/10/03/193523#P0627R5-Function-to-mark-unreachable-code",
    "ja_old": "https://onihusube.hatenablog.com/entry/2021/10/03/193523#P0627R5-Function-to-mark-unreachable-code",
    "tag": ""
  },
  {
    "number": "P0792",
    "title": "function_ref: a non-owning reference to a Callable",
    "url": "https://wg21.link/P0792",
    "ja": "https://onihusube.hatenablog.com/entry/2023/03/19/184146#P0792R14-function_ref-a-non-owning-reference-to-a-Callable",
    "ja_old": "https://onihusube.hatenablog.com/entry/2022/02/19/181101#P0792R6-function_ref-a-non-owning-reference-to-a-Callable",
    "tag": ""
  },
  {
    "number": "P0798",
    "title": "Monadic operations for std::optional",
    "url": "https://wg21.link/P0798",
    "ja": "https://onihusube.hatenablog.com/entry/2021/06/13/165215#P0798R6-Monadic-operations-for-stdoptional",
    "ja_old": "https://onihusube.hatenablog.com/entry/2021/06/13/165215#P0798R6-Monadic-operations-for-stdoptional",
    "tag": ""
  },
  {
    "number": "P0843",
    "title": "static_vector",
    "url": "https://wg21.link/P0843",
    "ja": "https://onihusube.hatenablog.com/entry/2022/09/04/141015#P0843R5-static_vector",
    "ja_old": "https://onihusube.hatenablog.com/entry/2022/09/04/141015#P0843R5-static_vector",
    "tag": ""
  },
  {
    "number": "P0847",
    "title": "Deducing this",
    "url": "https://wg21.link/P0847",
    "ja": "https://onihusube.hatenablog.com/entry/2021/08/14/213339#P0847R7-Deducing-this",
    "ja_old": "https://onihusube.hatenablog.com/entry/2020/11/02/221657#P0847R5-Deducing-this",
    "tag": ""
  },
  {
    "number": "P0849",
    "title": "auto(x): decay-copy in the language",
    "url": "https://wg21.link/P0849",
    "ja": "https://onihusube.hatenablog.com/entry/2021/10/03/193523#P0849R8-autox-decay-copy-in-the-language",
    "ja_old": "https://onihusube.hatenablog.com/entry/2020/11/02/221657#P0849R4-autox-decay-copy-in-the-language",
    "tag": ""
  },
  {
    "number": "P0870",
    "title": "A proposal for a type trait to detect narrowing conversions",
    "url": "https://wg21.link/P0870",
    "ja": "https://onihusube.hatenablog.com/entry/2023/03/19/184146#P0870R5-A-proposal-for-a-type-trait-to-detect-narrowing-conversions",
    "ja_old": "https://onihusube.hatenablog.com/entry/2020/05/01/194425#P0870R2--A-proposal-for-a-type-trait-to-detect-narrowing-conversions",
    "tag": ""
  },
  {
    "number": "P0876",
    "title": "fiber_context - fibers without scheduler",
    "url": "https://wg21.link/P0876",
    "ja": "https://onihusube.hatenablog.com/entry/2023/03/19/184146#P0876R12-fiber_context---fibers-without-scheduler",
    "ja_old": "https://onihusube.hatenablog.com/entry/2022/11/13/233529#P0876R11-fiber_context---fibers-without-scheduler",
    "tag": ""
  },
  {
    "number": "P0881",
    "title": "A Proposal to add stacktrace library",
    "url": "https://wg21.link/P0881",
    "ja": "https://onihusube.hatenablog.com/entry/2020/10/09/221025#P0881R7--A-Proposal-to-add-stacktrace-library",
    "ja_old": "https://onihusube.hatenablog.com/entry/2020/09/18/222444#P0881R6--A-Proposal-to-add-stacktrace-library",
    "tag": ""
  },
  {
    "number": "P0901",
    "title": "Size feedback in operator new",
    "url": "https://wg21.link/P0901",
    "ja": "https://onihusube.hatenablog.com/entry/2022/06/11/191943#P0901R9-Size-feedback-in-operator-new",
    "ja_old": "https://onihusube.hatenablog.com/entry/2021/01/17/005823#P0901R8-Size-feedback-in-operator-new",
    "tag": ""
  },
  {
    "number": "P0928",
    "title": "Mitigating Spectre v1 Attacks in C++",
    "url": "https://wg21.link/P0928",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P0943",
    "title": "Support C atomics in C++",
    "url": "https://wg21.link/P0943",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P0957",
    "title": "Proxy: A Polymorphic Programming Library",
    "url": "https://wg21.link/P0957",
    "ja": "https://onihusube.hatenablog.com/entry/2022/10/09/021557#P0957R9-Proxy-A-Polymorphic-Programming-Library",
    "ja_old": "https://onihusube.hatenablog.com/entry/2022/03/19/224729#P0957R5-Proxy-A-Polymorphic-Programming-Library",
    "tag": ""
  },
  {
    "number": "P0958",
    "title": "Networking TS changes to support proposed Executors TS",
    "url": "https://wg21.link/P0958",
    "ja": "https://onihusube.hatenablog.com/entry/2020/10/09/221025#P0958R2--Networking-TS-changes-to-support-proposed-Executors-TS",
    "ja_old": "https://onihusube.hatenablog.com/entry/2020/10/09/221025#P0958R2--Networking-TS-changes-to-support-proposed-Executors-TS",
    "tag": ""
  },
  {
    "number": "P0987",
    "title": "polymorphic_allocator instead of type-erasure",
    "url": "https://wg21.link/P0987",
    "ja": "https://onihusube.hatenablog.com/entry/2022/11/13/233529#P0987R2-polymorphic_allocator-instead-of-type-erasure",
    "ja_old": "https://onihusube.hatenablog.com/entry/2022/10/09/021557#P0987R1-polymorphic_allocator-instead-of-type-erasure",
    "tag": ""
  },
  {
    "number": "P1000",
    "title": "C++ IS schedule",
    "url": "https://wg21.link/P1000",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P1012",
    "title": "Ternary Right Fold Expression",
    "url": "https://wg21.link/P1012",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P1018",
    "title": "C++ Language Evolution status",
    "url": "https://wg21.link/P1018",
    "ja": "https://onihusube.hatenablog.com/entry/2022/08/11/193828#P1018R17-C-Language-Evolution-status--pandemic-edition--202206202207",
    "ja_old": "https://onihusube.hatenablog.com/entry/2021/03/12/225547#P1018R8-C-Language-Evolution-status--pandemic-edition--202011202101",
    "tag": ""
  },
  {
    "number": "P1021",
    "title": "Filling holes in Class Template Argument Deduction",
    "url": "https://wg21.link/P1021",
    "ja": "https://onihusube.hatenablog.com/entry/2022/06/11/191943#P1021R6-Filling-holes-in-Class-Template-Argument-Deduction",
    "ja_old": "https://onihusube.hatenablog.com/entry/2022/06/11/191943#P1021R6-Filling-holes-in-Class-Template-Argument-Deduction",
    "tag": ""
  },
  {
    "number": "P1028",
    "title": "SG14 status_code and standard error object",
    "url": "https://wg21.link/P1028",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P1029",
    "title": "move = bitcopies",
    "url": "https://wg21.link/P1029",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P1030",
    "title": "std::filesystem::path_view",
    "url": "https://wg21.link/P1030",
    "ja": "https://onihusube.hatenablog.com/entry/2022/10/09/021557#P1030R5-stdfilesystempath_view",
    "ja_old": "https://onihusube.hatenablog.com/entry/2021/01/17/005823#P1030R4-stdfilesystempath_view",
    "tag": ""
  },
  {
    "number": "P1040",
    "title": "std::embed and #depend",
    "url": "https://wg21.link/P1040",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P1046",
    "title": "Automatically Generate More Operators",
    "url": "https://wg21.link/P1046",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P1048",
    "title": "A proposal for a type trait to detect scoped enumerations",
    "url": "https://wg21.link/P1048",
    "ja": "https://onihusube.hatenablog.com/entry/2020/11/02/221657#P1048R1-A-proposal-for-a-type-trait-to-detect-scoped-enumerations",
    "ja_old": "https://onihusube.hatenablog.com/entry/2020/11/02/221657#P1048R1-A-proposal-for-a-type-trait-to-detect-scoped-enumerations",
    "tag": ""
  },
  {
    "number": "P1061",
    "title": "Structured Bindings can introduce a Pack",
    "url": "https://wg21.link/P1061",
    "ja": "https://onihusube.hatenablog.com/entry/2023/03/19/184146#P1061R4-Structured-Bindings-can-introduce-a-Pack",
    "ja_old": "https://onihusube.hatenablog.com/entry/2022/05/08/195618#P1061R2-Structured-Bindings-can-introduce-a-Pack",
    "tag": ""
  },
  {
    "number": "P1068",
    "title": "Vector API for random number generation",
    "url": "https://wg21.link/P1068",
    "ja": "https://onihusube.hatenablog.com/entry/2022/11/13/233529#P1068R6-Vector-API-for-random-number-generation",
    "ja_old": "https://onihusube.hatenablog.com/entry/2020/08/12/014639#P1068R4--Vector-API-for-random-number-generation",
    "tag": ""
  },
  {
    "number": "P1072",
    "title": "basic_string::resize_and_overwrite",
    "url": "https://wg21.link/P1072",
    "ja": "https://onihusube.hatenablog.com/entry/2021/10/03/193523#P1072R10-basic_stringresize_and_overwrite",
    "ja_old": "https://onihusube.hatenablog.com/entry/2021/01/17/005823#P1072R6-basic_stringresize_and_overwrite",
    "tag": ""
  },
  {
    "number": "P1083",
    "title": "Move resource_adaptor from Library TS to the C++ WP",
    "url": "https://wg21.link/P1083",
    "ja": "https://onihusube.hatenablog.com/entry/2022/11/13/233529#P1083R7-Move-resource_adaptor-from-Library-TS-to-the-C-WP",
    "ja_old": "https://onihusube.hatenablog.com/entry/2022/02/19/181101#P1083R4-Move-resource_adaptor-from-Library-TS-to-the-C-WP",
    "tag": ""
  },
  {
    "number": "P1102",
    "title": "Down with ()!",
    "url": "https://wg21.link/P1102",
    "ja": "https://onihusube.hatenablog.com/entry/2021/01/17/005823#P1102R2-Down-with-",
    "ja_old": "https://onihusube.hatenablog.com/entry/2021/01/17/005823#P1102R2-Down-with-",
    "tag": ""
  },
  {
    "number": "P1112",
    "title": "Language support for class layout control",
    "url": "https://wg21.link/P1112",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P1121",
    "title": "Hazard Pointers: Proposed Interface and Wording for Concurrency TS 2",
    "url": "https://wg21.link/P1121",
    "ja": "https://onihusube.hatenablog.com/entry/2021/05/14/214016#P1121R3-Hazard-Pointers-Proposed-Interface-and-Wording-for-Concurrency-TS-2",
    "ja_old": "https://onihusube.hatenablog.com/entry/2021/02/11/153333#P1121R2-Hazard-Pointers-Proposed-Interface-and-Wording-for-Concurrency-TS-2",
    "tag": ""
  },
  {
    "number": "P1122",
    "title": "Proposed Wording for Concurrent Data Structures: Read-Copy-Update (RCU)",
    "url": "https://wg21.link/P1122",
    "ja": "https://onihusube.hatenablog.com/entry/2021/06/13/165215#P1122R4-Proposed-Wording-for-Concurrent-Data-Structures-Read-Copy-Update-RCU",
    "ja_old": "https://onihusube.hatenablog.com/entry/2021/05/14/214016#P1122R3-Proposed-Wording-for-Concurrent-Data-Structures-Read-Copy-Update-RCU",
    "tag": ""
  },
  {
    "number": "P1132",
    "title": "out_ptr - a scalable output pointer abstraction",
    "url": "https://wg21.link/P1132",
    "ja": "https://onihusube.hatenablog.com/entry/2021/07/12/182757#P1132R8-out_ptr---a-scalable-output-pointer-abstraction",
    "ja_old": "https://onihusube.hatenablog.com/entry/2021/05/14/214016#P1132R7-out_ptr---a-scalable-output-pointer-abstraction",
    "tag": ""
  },
  {
    "number": "P1144",
    "title": "std::is_trivially_relocatable",
    "url": "https://wg21.link/P1144",
    "ja": "https://onihusube.hatenablog.com/entry/2022/07/09/160343#P1144R6-Object-relocation-in-terms-of-move-plus-destroy",
    "ja_old": "https://onihusube.hatenablog.com/entry/2022/07/09/160343#P1144R6-Object-relocation-in-terms-of-move-plus-destroy",
    "tag": ""
  },
  {
    "number": "P1147",
    "title": "Printing `volatile` Pointers",
    "url": "https://wg21.link/P1147",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P1169",
    "title": "static operator()",
    "url": "https://wg21.link/P1169",
    "ja": "https://onihusube.hatenablog.com/entry/2022/05/08/195618#P1169R4-static-operator",
    "ja_old": "https://onihusube.hatenablog.com/entry/2021/05/14/214016#P1169R1-static-operator",
    "tag": ""
  },
  {
    "number": "P1184",
    "title": "A Module Mapper",
    "url": "https://wg21.link/P1184",
    "ja": "https://onihusube.hatenablog.com/entry/2020/08/12/014639#P1184R2--A-Module-Mapper",
    "ja_old": "https://onihusube.hatenablog.com/entry/2020/08/12/014639#P1184R2--A-Module-Mapper",
    "tag": ""
  },
  {
    "number": "P1202",
    "title": "Asymmetric Fences",
    "url": "https://wg21.link/P1202",
    "ja": "https://onihusube.hatenablog.com/entry/2022/03/19/224729#P1202R4-Asymmetric-Fences",
    "ja_old": "https://onihusube.hatenablog.com/entry/2021/07/12/182757#P1202R3-Asymmetric-Fences",
    "tag": ""
  },
  {
    "number": "P1206",
    "title": "Conversions from ranges to containers",
    "url": "https://wg21.link/P1206",
    "ja": "https://onihusube.hatenablog.com/entry/2022/02/19/181101#P1206R7-Conversions-from-ranges-to-containers",
    "ja_old": "https://onihusube.hatenablog.com/entry/2020/11/02/221657#P1206R2-rangesto-A-function-to-convert-any-range-to-a-container",
    "tag": ""
  },
  {
    "number": "P1222",
    "title": "A Standard flat_set",
    "url": "https://wg21.link/P1222",
    "ja": "https://onihusube.hatenablog.com/entry/2022/07/09/160343#P1222R4-A-Standard-flat_set",
    "ja_old": "https://onihusube.hatenablog.com/entry/2022/05/08/195618#P1222R3-A-Standard-flat_set",
    "tag": ""
  },
  {
    "number": "P1223",
    "title": "find_last",
    "url": "https://wg21.link/P1223",
    "ja": "https://onihusube.hatenablog.com/entry/2022/07/09/160343#P1223R5-find_last",
    "ja_old": "https://onihusube.hatenablog.com/entry/2022/03/19/224729#P1223R3-find_last",
    "tag": ""
  },
  {
    "number": "P1240",
    "title": "Scalable Reflection",
    "url": "https://wg21.link/P1240",
    "ja": "https://onihusube.hatenablog.com/entry/2022/02/19/181101#P1240R2-Scalable-Reflection",
    "ja_old": "https://onihusube.hatenablog.com/entry/2022/02/19/181101#P1240R2-Scalable-Reflection",
    "tag": ""
  },
  {
    "number": "P1243",
    "title": "Rangify New Algorithms",
    "url": "https://wg21.link/P1243",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P1255",
    "title": "A view of 0 or 1 elements: views::maybe",
    "url": "https://wg21.link/P1255",
    "ja": "https://onihusube.hatenablog.com/entry/2022/09/04/141015#P1255R9-A-view-of-0-or-1-elements-viewsmaybe",
    "ja_old": "https://onihusube.hatenablog.com/entry/2020/05/01/194425#P1255R6--A-view-of-0-or-1-elements-viewsmaybe",
    "tag": ""
  },
  {
    "number": "P1264",
    "title": "Revising the wording of stream input operations",
    "url": "https://wg21.link/P1264",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P1272",
    "title": "Byteswapping for fun&&nuf",
    "url": "https://wg21.link/P1272",
    "ja": "https://onihusube.hatenablog.com/entry/2020/08/12/014639#P1272R3--Byteswapping-for-funnuf",
    "ja_old": "https://onihusube.hatenablog.com/entry/2020/08/12/014639#P1272R3--Byteswapping-for-funnuf",
    "tag": ""
  },
  {
    "number": "P1315",
    "title": "secure_clear",
    "url": "https://wg21.link/P1315",
    "ja": "https://onihusube.hatenablog.com/entry/2021/01/17/005823#P1315R6-secure_clear-update-to-N2599",
    "ja_old": "https://onihusube.hatenablog.com/entry/2020/05/01/194425#P1315R5--secure_clear",
    "tag": ""
  },
  {
    "number": "P1322",
    "title": "Networking TS enhancement to enable custom I/O executors",
    "url": "https://wg21.link/P1322",
    "ja": "https://onihusube.hatenablog.com/entry/2021/03/12/225547#P1322R3-Networking-TS-enhancement-to-enable-custom-IO-executors",
    "ja_old": "https://onihusube.hatenablog.com/entry/2020/10/09/221025#P1322R2--Networking-TS-enhancement-to-enable-custom-IO-executors",
    "tag": ""
  },
  {
    "number": "P1328",
    "title": "Making std::type_info::operator== constexpr",
    "url": "https://wg21.link/P1328",
    "ja": "https://onihusube.hatenablog.com/entry/2021/06/13/165215#P1328R1-Making-stdtype_infooperator-constexpr",
    "ja_old": "https://onihusube.hatenablog.com/entry/2021/06/13/165215#P1328R1-Making-stdtype_infooperator-constexpr",
    "tag": ""
  },
  {
    "number": "P1371",
    "title": "Pattern Matching",
    "url": "https://wg21.link/P1371",
    "ja": "https://onihusube.hatenablog.com/entry/2020/10/09/221025#P1371R3--Pattern-Matching",
    "ja_old": "https://onihusube.hatenablog.com/entry/2020/10/09/221025#P1371R3--Pattern-Matching",
    "tag": ""
  },
  {
    "number": "P1383",
    "title": "More constexpr for cmath and complex",
    "url": "https://wg21.link/P1383",
    "ja": "https://onihusube.hatenablog.com/entry/2023/02/12/210302#P1383R1-More-constexpr-for-cmath-and-complex",
    "ja_old": "https://onihusube.hatenablog.com/entry/2023/02/12/210302#P1383R1-More-constexpr-for-cmath-and-complex",
    "tag": ""
  },
  {
    "number": "P1385",
    "title": "A proposal to add linear algebra support to the C++ standard library",
    "url": "https://wg21.link/P1385",
    "ja": "https://onihusube.hatenablog.com/entry/2022/11/13/233529#P1385R7-A-proposal-to-add-linear-algebra-support-to-the-C-standard-library",
    "ja_old": "https://onihusube.hatenablog.com/entry/2022/11/13/233529#P1385R7-A-proposal-to-add-linear-algebra-support-to-the-C-standard-library",
    "tag": ""
  },
  {
    "number": "P1401",
    "title": "Narrowing contextual conversions to bool",
    "url": "https://wg21.link/P1401",
    "ja": "https://onihusube.hatenablog.com/entry/2021/05/14/214016#P1401R5-Narrowing-contextual-conversions-to-bool",
    "ja_old": "https://onihusube.hatenablog.com/entry/2020/07/05/003248#P1401R3--Narrowing-contextual-conversions-to-bool",
    "tag": ""
  },
  {
    "number": "P1413",
    "title": "Deprecate std::aligned_storage and std::aligned_union",
    "url": "https://wg21.link/P1413",
    "ja": "https://onihusube.hatenablog.com/entry/2021/12/11/220126#P1413R3-Deprecate-stdaligned_storage-and-stdaligned_union",
    "ja_old": "https://onihusube.hatenablog.com/entry/2021/12/11/220126#P1413R3-Deprecate-stdaligned_storage-and-stdaligned_union",
    "tag": ""
  },
  {
    "number": "P1425",
    "title": "Iterators pair constructors for stack and queue",
    "url": "https://wg21.link/P1425",
    "ja": "https://onihusube.hatenablog.com/entry/2021/03/12/225547#P1425R3-Iterators-pair-constructors-for-stack-and-queue",
    "ja_old": "https://onihusube.hatenablog.com/entry/2021/02/11/153333#P1425R2-Iterators-pair-constructors-for-stack-and-queue",
    "tag": ""
  },
  {
    "number": "P1436",
    "title": "Executor properties for affinity-based execution",
    "url": "https://wg21.link/P1436",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P1450",
    "title": "Enriching type modification traits",
    "url": "https://wg21.link/P1450",
    "ja": "https://onihusube.hatenablog.com/entry/2020/07/05/003248#P1450R3--Enriching-type-modification-traits",
    "ja_old": "https://onihusube.hatenablog.com/entry/2020/07/05/003248#P1450R3--Enriching-type-modification-traits",
    "tag": ""
  },
  {
    "number": "P1460",
    "title": "Mandating the Standard Library: Clause 20 - Utilities library",
    "url": "https://wg21.link/P1460",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P1467",
    "title": "Extended floating-point types and standard names",
    "url": "https://wg21.link/P1467",
    "ja": "https://onihusube.hatenablog.com/entry/2022/05/08/195618#P1467R9-Extended-floating-point-types-and-standard-names",
    "ja_old": "https://onihusube.hatenablog.com/entry/2020/07/05/003248#P1467R4--Extended-floating-point-types-and-standard-names",
    "tag": ""
  },
  {
    "number": "P1468",
    "title": "Fixed-layout floating-point type aliases",
    "url": "https://wg21.link/P1468",
    "ja": "https://onihusube.hatenablog.com/entry/2020/07/05/003248#P1468R4--Fixed-layout-floating-point-type-aliases",
    "ja_old": "https://onihusube.hatenablog.com/entry/2020/07/05/003248#P1468R4--Fixed-layout-floating-point-type-aliases",
    "tag": ""
  },
  {
    "number": "P1478",
    "title": "Byte-wise atomic memcpy",
    "url": "https://wg21.link/P1478",
    "ja": "https://onihusube.hatenablog.com/entry/2022/03/19/224729#P1478R7-Byte-wise-atomic-memcpy",
    "ja_old": "https://onihusube.hatenablog.com/entry/2020/08/12/014639#P1478R4--Byte-wise-atomic-memcpy",
    "tag": ""
  },
  {
    "number": "P1494",
    "title": "Partial program correctness",
    "url": "https://wg21.link/P1494",
    "ja": "https://onihusube.hatenablog.com/entry/2021/12/11/220126#P1494R2-Partial-program-correctness",
    "ja_old": "https://onihusube.hatenablog.com/entry/2021/12/11/220126#P1494R2-Partial-program-correctness",
    "tag": ""
  },
  {
    "number": "P1496",
    "title": "Formatting of Negative Zero",
    "url": "https://wg21.link/P1496",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P1518",
    "title": "Stop overconstraining allocators in container deduction guides",
    "url": "https://wg21.link/P1518",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P1525",
    "title": "One-Way execute is a Poor Basis Operation",
    "url": "https://wg21.link/P1525",
    "ja": "https://onihusube.hatenablog.com/entry/2020/11/02/221657#P1525R1-One-Way-execute-is-a-Poor-Basis-Operation",
    "ja_old": "https://onihusube.hatenablog.com/entry/2020/11/02/221657#P1525R1-One-Way-execute-is-a-Poor-Basis-Operation",
    "tag": ""
  },
  {
    "number": "P1605",
    "title": "Member Layout Control",
    "url": "https://wg21.link/P1605",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P1609",
    "title": "C++ Should Support Just-in-Time Compilation",
    "url": "https://wg21.link/P1609",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P1619",
    "title": "Functions for Testing Boundary Conditions on Integer Operations",
    "url": "https://wg21.link/P1619",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P1629",
    "title": "Transcoding the world - Standard Text Encoding",
    "url": "https://wg21.link/P1629",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P1641",
    "title": "Freestanding Library: Rewording the Status Quo",
    "url": "https://wg21.link/P1641",
    "ja": "https://onihusube.hatenablog.com/entry/2020/05/01/194425#P1641R3--Freestanding-Library-Rewording-the-Status-Quo",
    "ja_old": "https://onihusube.hatenablog.com/entry/2020/05/01/194425#P1641R3--Freestanding-Library-Rewording-the-Status-Quo",
    "tag": ""
  },
  {
    "number": "P1642",
    "title": "Freestanding Library: Easy [utilities], [ranges], and [iterators]",
    "url": "https://wg21.link/P1642",
    "ja": "https://onihusube.hatenablog.com/entry/2022/08/11/193828#P1642R11-Freestanding-Library-Easy-utilities-ranges-and-iterators",
    "ja_old": "https://onihusube.hatenablog.com/entry/2020/07/05/003248#P1642R3--Freestanding-Library-Easy-utilities-ranges-and-iterators",
    "tag": ""
  },
  {
    "number": "P1654",
    "title": "ABI breakage - summary of initial comments",
    "url": "https://wg21.link/P1654",
    "ja": "https://onihusube.hatenablog.com/entry/2020/05/01/194425#P1654R1--ABI-breakage---summary-of-initial-comments",
    "ja_old": "https://onihusube.hatenablog.com/entry/2020/05/01/194425#P1654R1--ABI-breakage---summary-of-initial-comments",
    "tag": ""
  },
  {
    "number": "P1656",
    "title": "\"Throws: Nothing\" should be noexcept",
    "url": "https://wg21.link/P1656",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P1659",
    "title": "starts_with and ends_with",
    "url": "https://wg21.link/P1659",
    "ja": "https://onihusube.hatenablog.com/entry/2021/03/12/225547#P1659R3-starts_with-and-ends_with",
    "ja_old": "https://onihusube.hatenablog.com/entry/2020/08/12/014639#P1659R1--starts_with-and-ends_with",
    "tag": ""
  },
  {
    "number": "P1664",
    "title": "reconstructible_range - a concept for putting ranges back together",
    "url": "https://wg21.link/P1664",
    "ja": "https://onihusube.hatenablog.com/entry/2022/03/19/224729#P1664R7-reconstructible_range---a-concept-for-putting-ranges-back-together",
    "ja_old": "https://onihusube.hatenablog.com/entry/2021/05/14/214016#P1664R3-reconstructible_range---a-concept-for-putting-ranges-back-together",
    "tag": ""
  },
  {
    "number": "P1673",
    "title": "A free function linear algebra interface based on the BLAS",
    "url": "https://wg21.link/P1673",
    "ja": "https://onihusube.hatenablog.com/entry/2023/02/12/210302#P1673R11-A-free-function-linear-algebra-interface-based-on-the-BLAS",
    "ja_old": "https://onihusube.hatenablog.com/entry/2021/05/14/214016#P1673R3-A-free-function-linear-algebra-interface-based-on-the-BLAS",
    "tag": ""
  },
  {
    "number": "P1674",
    "title": "Evolving a Standard C++ Linear Algebra Library from the BLAS",
    "url": "https://wg21.link/P1674",
    "ja": "https://onihusube.hatenablog.com/entry/2022/06/11/191943#P1674R2-Evolving-a-Standard-C-Linear-Algebra-Library-from-the-BLAS",
    "ja_old": "https://onihusube.hatenablog.com/entry/2022/05/08/195618#P1674R1-Evolving-a-Standard-C-Linear-Algebra-Library-from-the-BLAS",
    "tag": ""
  },
  {
    "number": "P1675",
    "title": "rethrow_exception must be allowed to copy",
    "url": "https://wg21.link/P1675",
    "ja": "https://onihusube.hatenablog.com/entry/2021/07/12/182757#P1675R2-rethrow_exception-must-be-allowed-to-copy",
    "ja_old": "https://onihusube.hatenablog.com/entry/2021/07/12/182757#P1675R2-rethrow_exception-must-be-allowed-to-copy",
    "tag": ""
  },
  {
    "number": "P1679",
    "title": "String Contains function",
    "url": "https://wg21.link/P1679",
    "ja": "https://onihusube.hatenablog.com/entry/2020/08/12/014639#P1679R3--String-Contains-function",
    "ja_old": "https://onihusube.hatenablog.com/entry/2020/06/01/001003#P1679R2--String-Contains-function",
    "tag": ""
  },
  {
    "number": "P1682",
    "title": "std::to_underlying",
    "url": "https://wg21.link/P1682",
    "ja": "https://onihusube.hatenablog.com/entry/2021/03/12/225547#P1682R3-stdto_underlying",
    "ja_old": "https://onihusube.hatenablog.com/entry/2021/02/11/153333#P1682R2-stdto_underlying",
    "tag": ""
  },
  {
    "number": "P1683",
    "title": "References for Standard Library Vocabulary Types - an optional case study",
    "url": "https://wg21.link/P1683",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P1684",
    "title": "mdarray: An Owning Multidimensional Array Analog of mdspan",
    "url": "https://wg21.link/P1684",
    "ja": "https://onihusube.hatenablog.com/entry/2023/02/12/210302#P1684R4-mdarray-An-Owning-Multidimensional-Array-Analog-of-mdspan",
    "ja_old": "https://onihusube.hatenablog.com/entry/2022/04/02/175835#P1684R1-mdarray-An-Owning-Multidimensional-Array-Analog-of-mdspan",
    "tag": ""
  },
  {
    "number": "P1689",
    "title": "Format for describing dependencies of source files",
    "url": "https://wg21.link/P1689",
    "ja": "https://onihusube.hatenablog.com/entry/2022/07/09/160343#P1689R5-Format-for-describing-dependencies-of-source-files",
    "ja_old": "https://onihusube.hatenablog.com/entry/2021/01/17/005823#P1689R3-Format-for-describing-dependencies-of-source-files",
    "tag": ""
  },
  {
    "number": "P1701",
    "title": "Inline Namespaces: Fragility Bites",
    "url": "https://wg21.link/P1701",
    "ja": "https://onihusube.hatenablog.com/entry/2021/06/13/165215#P1701R2-Inline-Namespaces-Fragility-Bites",
    "ja_old": "https://onihusube.hatenablog.com/entry/2020/10/09/221025#P1701R1--Inline-Namespaces-Fragility-Bites",
    "tag": ""
  },
  {
    "number": "P1706",
    "title": "Programming Language Vulnerabilities for Safety Critical C++",
    "url": "https://wg21.link/P1706",
    "ja": "https://onihusube.hatenablog.com/entry/2021/05/14/214016#P1706R3-Programming-Language-Vulnerabilities-for-Safety-Critical-C",
    "ja_old": "https://onihusube.hatenablog.com/entry/2021/05/14/214016#P1706R3-Programming-Language-Vulnerabilities-for-Safety-Critical-C",
    "tag": ""
  },
  {
    "number": "P1708",
    "title": "Basic Statistics",
    "url": "https://wg21.link/P1708",
    "ja": "https://onihusube.hatenablog.com/entry/2023/03/19/184146#P1708R7-Basic-Statistics",
    "ja_old": "https://onihusube.hatenablog.com/entry/2021/02/11/153333#P1708R3-Simple-Statistical-Functions",
    "tag": ""
  },
  {
    "number": "P1709",
    "title": "Graph Library",
    "url": "https://wg21.link/P1709",
    "ja": "https://onihusube.hatenablog.com/entry/2022/11/13/233529#P1709R3-Graph-Library",
    "ja_old": "https://onihusube.hatenablog.com/entry/2022/11/13/233529#P1709R3-Graph-Library",
    "tag": ""
  },
  {
    "number": "P1715",
    "title": "Loosen restrictions on \"_t\" typedefs and \"_v\" values.",
    "url": "https://wg21.link/P1715",
    "ja": "https://onihusube.hatenablog.com/entry/2023/03/19/184146#P1715R1-Loosen-restrictions-on-t-typedefs-and-v-values",
    "ja_old": "https://onihusube.hatenablog.com/entry/2023/03/19/184146#P1715R1-Loosen-restrictions-on-t-typedefs-and-v-values",
    "tag": ""
  },
  {
    "number": "P1726",
    "title": "Pointer lifetime-end zap (informational/historical)",
    "url": "https://wg21.link/P1726",
    "ja": "https://onihusube.hatenablog.com/entry/2021/08/14/213339#P1726R5-Pointer-lifetime-end-zap-informationalhistorical",
    "ja_old": "https://onihusube.hatenablog.com/entry/2020/08/12/014639#P1726R4--Pointer-lifetime-end-zap",
    "tag": ""
  },
  {
    "number": "P1732",
    "title": "Do not promise support for function syntax of operators",
    "url": "https://wg21.link/P1732",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P1739",
    "title": "Avoid template bloat for safe_ranges in combination with 'subrange-y' view adaptors.",
    "url": "https://wg21.link/P1739",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P1759",
    "title": "Native handles and file streams",
    "url": "https://wg21.link/P1759",
    "ja": "https://onihusube.hatenablog.com/entry/2023/03/19/184146#P1759R5-Native-handles-and-file-streams",
    "ja_old": "https://onihusube.hatenablog.com/entry/2020/11/02/221657#P1759R3-Native-handles-and-file-streams",
    "tag": ""
  },
  {
    "number": "P1774",
    "title": "Portable assumptions",
    "url": "https://wg21.link/P1774",
    "ja": "https://onihusube.hatenablog.com/entry/2022/07/09/160343#P1774R8-Portable-assumptions",
    "ja_old": "https://onihusube.hatenablog.com/entry/2021/12/11/220126#P1774R4-Portable-assumptions",
    "tag": ""
  },
  {
    "number": "P1779",
    "title": "ABI isolation for member functions",
    "url": "https://wg21.link/P1779",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P1787",
    "title": "Declarations and where to find them",
    "url": "https://wg21.link/P1787",
    "ja": "https://onihusube.hatenablog.com/entry/2020/09/18/222444#P1787R5--Declarations-and-where-to-find-them",
    "ja_old": "https://onihusube.hatenablog.com/entry/2020/09/18/222444#P1787R5--Declarations-and-where-to-find-them",
    "tag": ""
  },
  {
    "number": "P1790",
    "title": "Networking TS changes to enable better DynamicBuffer composition",
    "url": "https://wg21.link/P1790",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P1795",
    "title": "System topology discovery for heterogeneous &amp; distributed computing",
    "url": "https://wg21.link/P1795",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P1815",
    "title": "Translation-unit-local entities",
    "url": "https://wg21.link/P1815",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P1818",
    "title": "Narrowing and Widening Conversions",
    "url": "https://wg21.link/P1818",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P1831",
    "title": "deprecating volatile: library",
    "url": "https://wg21.link/P1831",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P1838",
    "title": "Modules User-Facing Lexicon and File Extensions",
    "url": "https://wg21.link/P1838",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P1839",
    "title": "Accessing object representations",
    "url": "https://wg21.link/P1839",
    "ja": "https://onihusube.hatenablog.com/entry/2022/07/09/160343#P1839R5-Accessing-object-representations",
    "ja_old": "https://onihusube.hatenablog.com/entry/2022/03/19/224729#P1839R3-Accessing-Object-Representations",
    "tag": ""
  },
  {
    "number": "P1841",
    "title": "Wording for Individually Specializable Numeric Traits",
    "url": "https://wg21.link/P1841",
    "ja": "https://onihusube.hatenablog.com/entry/2022/03/19/224729#P1841R3-Wording-for-Individually-Specializable-Numeric-Traits",
    "ja_old": "https://onihusube.hatenablog.com/entry/2020/06/01/001003#P1841R1--Wording-for-Individually-Specializable-Numeric-Traits",
    "tag": ""
  },
  {
    "number": "P1847",
    "title": "Make declaration order layout mandated",
    "url": "https://wg21.link/P1847",
    "ja": "https://onihusube.hatenablog.com/entry/2021/05/14/214016#P1847R4-Make-declaration-order-layout-mandated",
    "ja_old": "https://onihusube.hatenablog.com/entry/2021/05/14/214016#P1847R4-Make-declaration-order-layout-mandated",
    "tag": ""
  },
  {
    "number": "P1848",
    "title": "Improve rules of standard layout",
    "url": "https://wg21.link/P1848",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P1854",
    "title": "Making non-encodable string literals ill-formed",
    "url": "https://wg21.link/P1854",
    "ja": "https://onihusube.hatenablog.com/entry/2023/03/19/184146#P1854R4-Making-non-encodable-string-literals-ill-formed",
    "ja_old": "https://onihusube.hatenablog.com/entry/2021/12/11/220126#P1854R2-Conversion-to-literal-encoding-should-not-lead-to-loss-of-meaning",
    "tag": ""
  },
  {
    "number": "P1857",
    "title": "Modules Dependency Discovery",
    "url": "https://wg21.link/P1857",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P1858",
    "title": "Generalized pack declaration and usage",
    "url": "https://wg21.link/P1858",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P1861",
    "title": "Secure Networking in C++",
    "url": "https://wg21.link/P1861",
    "ja": "https://onihusube.hatenablog.com/entry/2020/06/01/001003#P1861R1--Secure-Networking-in-C",
    "ja_old": "https://onihusube.hatenablog.com/entry/2020/06/01/001003#P1861R1--Secure-Networking-in-C",
    "tag": ""
  },
  {
    "number": "P1863",
    "title": "ABI - Now or Never",
    "url": "https://wg21.link/P1863",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P1864",
    "title": "Defining Target Tuplets",
    "url": "https://wg21.link/P1864",
    "ja": "https://onihusube.hatenablog.com/entry/2020/08/12/014639#P1864R0--Defining-Target-Tuplets",
    "ja_old": "https://onihusube.hatenablog.com/entry/2020/08/12/014639#P1864R0--Defining-Target-Tuplets",
    "tag": ""
  },
  {
    "number": "P1868",
    "title": "Unicorn width: clarifying units of width and precision in std::format",
    "url": "https://wg21.link/P1868",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P1875",
    "title": "Transactional Memory Lite Support in C++",
    "url": "https://wg21.link/P1875",
    "ja": "https://onihusube.hatenablog.com/entry/2020/09/18/222444#P1875R1--Transactional-Memory-Lite-Support-in-C",
    "ja_old": "https://onihusube.hatenablog.com/entry/2020/09/18/222444#P1875R1--Transactional-Memory-Lite-Support-in-C",
    "tag": ""
  },
  {
    "number": "P1881",
    "title": "Epochs: a backward-compatible language evolution mechanism",
    "url": "https://wg21.link/P1881",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P1883",
    "title": "file_handle and mapped_file_handle",
    "url": "https://wg21.link/P1883",
    "ja": "https://onihusube.hatenablog.com/entry/2023/02/12/210302#P1883R2-file_handle-and-mapped_file_handle",
    "ja_old": "https://onihusube.hatenablog.com/entry/2023/02/12/210302#P1883R2-file_handle-and-mapped_file_handle",
    "tag": ""
  },
  {
    "number": "P1884",
    "title": "Private Module Partition: An Inconsistent Boundary",
    "url": "https://wg21.link/P1884",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P1885",
    "title": "Naming Text Encodings to Demystify Them",
    "url": "https://wg21.link/P1885",
    "ja": "https://onihusube.hatenablog.com/entry/2022/03/19/224729#P1885R10-Naming-Text-Encodings-to-Demystify-Them",
    "ja_old": "https://onihusube.hatenablog.com/entry/2020/10/09/221025#P1885R3--Naming-Text-Encodings-to-Demystify-Them",
    "tag": ""
  },
  {
    "number": "P1887",
    "title": "Reflection on attributes",
    "url": "https://wg21.link/P1887",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P1889",
    "title": "C++ Numerics Work In Progress",
    "url": "https://wg21.link/P1889",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P1897",
    "title": "Towards C++23 executors: A proposal for an initial set of algorithms",
    "url": "https://wg21.link/P1897",
    "ja": "https://onihusube.hatenablog.com/entry/2020/06/01/001003#P1897R3--Towards-C23-executors-A-proposal-for-an-initial-set-of-algorithms",
    "ja_old": "https://onihusube.hatenablog.com/entry/2020/06/01/001003#P1897R3--Towards-C23-executors-A-proposal-for-an-initial-set-of-algorithms",
    "tag": ""
  },
  {
    "number": "P1898",
    "title": "Forward progress delegation for executors",
    "url": "https://wg21.link/P1898",
    "ja": "https://onihusube.hatenablog.com/entry/2020/06/01/001003#P1898R1--Forward-progress-delegation-for-executors",
    "ja_old": "https://onihusube.hatenablog.com/entry/2020/06/01/001003#P1898R1--Forward-progress-delegation-for-executors",
    "tag": ""
  },
  {
    "number": "P1899",
    "title": "stride_view",
    "url": "https://wg21.link/P1899",
    "ja": "https://onihusube.hatenablog.com/entry/2022/08/11/193828#P1899R3-stride_view",
    "ja_old": "https://onihusube.hatenablog.com/entry/2021/12/11/220126#P1899R1-stride_view",
    "tag": ""
  },
  {
    "number": "P1901",
    "title": "Enabling the Use of weak_ptr as Keys in Unordered Associative Containers",
    "url": "https://wg21.link/P1901",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P1908",
    "title": "Reserving Attribute Names for Future Use",
    "url": "https://wg21.link/P1908",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P1912",
    "title": "Types with array-like object representations",
    "url": "https://wg21.link/P1912",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P1919",
    "title": "Expanding the Rights in SD-8",
    "url": "https://wg21.link/P1919",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P1928",
    "title": "Merge data-parallel types from the Parallelism TS 2",
    "url": "https://wg21.link/P1928",
    "ja": "https://onihusube.hatenablog.com/entry/2023/03/19/184146#P1928R3-Merge-data-parallel-types-from-the-Parallelism-TS-2",
    "ja_old": "https://onihusube.hatenablog.com/entry/2022/11/13/233529#P1928R1-Merge-data-parallel-types-from-the-Parallelism-TS-2",
    "tag": ""
  },
  {
    "number": "P1935",
    "title": "A C++ Approach to Physical Units",
    "url": "https://wg21.link/P1935",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P1937",
    "title": "Fixing inconsistencies between `constexpr` and `consteval` functions",
    "url": "https://wg21.link/P1937",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P1938",
    "title": "if consteval",
    "url": "https://wg21.link/P1938",
    "ja": "https://onihusube.hatenablog.com/entry/2021/05/14/214016#P1938R3-if-consteval",
    "ja_old": "https://onihusube.hatenablog.com/entry/2020/11/02/221657#P1938R2-if-consteval",
    "tag": ""
  },
  {
    "number": "P1944",
    "title": "Add Constexpr Modifiers to Functions in cstring and cwchar Headers",
    "url": "https://wg21.link/P1944",
    "ja": "https://onihusube.hatenablog.com/entry/2020/07/05/003248#P1944R1--Add-Constexpr-Modifiers-to-Functions-in-cstring-and-cwchar-Headers",
    "ja_old": "https://onihusube.hatenablog.com/entry/2020/07/05/003248#P1944R1--Add-Constexpr-Modifiers-to-Functions-in-cstring-and-cwchar-Headers",
    "tag": ""
  },
  {
    "number": "P1945",
    "title": "Making More Objects Contiguous",
    "url": "https://wg21.link/P1945",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P1949",
    "title": "C++ Identifier Syntax using Unicode Standard Annex 31",
    "url": "https://wg21.link/P1949",
    "ja": "https://onihusube.hatenablog.com/entry/2021/05/14/214016#P1949R7-C-Identifier-Syntax-using-Unicode-Standard-Annex-31",
    "ja_old": "https://onihusube.hatenablog.com/entry/2020/05/01/194425#P1949R3--C-Identifier-Syntax-using-Unicode-Standard-Annex-31",
    "tag": ""
  },
  {
    "number": "P1950",
    "title": "An indirect value-type for C++",
    "url": "https://wg21.link/P1950",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P1951",
    "title": "Default Arguments for pair's Forwarding Constructor",
    "url": "https://wg21.link/P1951",
    "ja": "https://onihusube.hatenablog.com/entry/2021/03/12/225547#P1951R1-Default-Arguments-for-pairs-Forwarding-Constructor",
    "ja_old": "https://onihusube.hatenablog.com/entry/2021/03/12/225547#P1951R1-Default-Arguments-for-pairs-Forwarding-Constructor",
    "tag": ""
  },
  {
    "number": "P1955",
    "title": "Top Level Is Constant Evaluated",
    "url": "https://wg21.link/P1955",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P1956",
    "title": "On the naming of low-level bit manipulation functions",
    "url": "https://wg21.link/P1956",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P1957",
    "title": "Converting from T* to bool should be considered narrowing (re: US 212)",
    "url": "https://wg21.link/P1957",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P1958",
    "title": "C++ Concurrent Buffer Queue",
    "url": "https://wg21.link/P1958",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P1964",
    "title": "Wording for boolean-testable",
    "url": "https://wg21.link/P1964",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P1967",
    "title": "#embed - a simple, scannable preprocessor-based resource acquisition method",
    "url": "https://wg21.link/P1967",
    "ja": "https://onihusube.hatenablog.com/entry/2023/02/12/210302#P1967R10-embed---a-simple-scannable-preprocessor-based-resource-acquisition-method",
    "ja_old": "https://onihusube.hatenablog.com/entry/2021/05/14/214016#P1967R3-embed---a-simple-scannable-preprocessor-based-resource-acquisition-method",
    "tag": ""
  },
  {
    "number": "P1970",
    "title": "Consistency for size() functions: add ranges::ssize()",
    "url": "https://wg21.link/P1970",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P1973",
    "title": "Rename _default_init functions (NB Comment DE002)",
    "url": "https://wg21.link/P1973",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P1974",
    "title": "Non-transient constexpr allocation using propconst",
    "url": "https://wg21.link/P1974",
    "ja": "https://onihusube.hatenablog.com/entry/2020/06/01/001003#P1974R0--Non-transient-constexpr-allocation-using-propconst",
    "ja_old": "https://onihusube.hatenablog.com/entry/2020/06/01/001003#P1974R0--Non-transient-constexpr-allocation-using-propconst",
    "tag": ""
  },
  {
    "number": "P1976",
    "title": "Fixed-size 'span' construction from dynamic-size range",
    "url": "https://wg21.link/P1976",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P1985",
    "title": "Universal template parameters",
    "url": "https://wg21.link/P1985",
    "ja": "https://onihusube.hatenablog.com/entry/2022/10/09/021557#P1985R3-Universal-template-parameters",
    "ja_old": "https://onihusube.hatenablog.com/entry/2020/06/01/001003#P1985R1--Universal-template-parameters",
    "tag": ""
  },
  {
    "number": "P1988",
    "title": "Allow Templates in Local Classes",
    "url": "https://wg21.link/P1988",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P1989",
    "title": "Range constructor for std::string_view 2: Constrain Harder",
    "url": "https://wg21.link/P1989",
    "ja": "https://onihusube.hatenablog.com/entry/2021/05/14/214016#P1989R2-Range-constructor-for-stdstring_view-2-Constrain-Harder",
    "ja_old": "https://onihusube.hatenablog.com/entry/2021/02/11/153333#P1989R1-Range-constructor-for-stdstring_view-2-Constrain-Harder",
    "tag": ""
  },
  {
    "number": "P1990",
    "title": "Add operator[] to std::initializer_list",
    "url": "https://wg21.link/P1990",
    "ja": "https://onihusube.hatenablog.com/entry/2020/07/05/003248#P1990R1--Add-operator-to-stdinitializer_list",
    "ja_old": "https://onihusube.hatenablog.com/entry/2020/07/05/003248#P1990R1--Add-operator-to-stdinitializer_list",
    "tag": ""
  },
  {
    "number": "P1993",
    "title": "Restore shared state to bulk_execute",
    "url": "https://wg21.link/P1993",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P1994",
    "title": "elements_view needs its own sentinel",
    "url": "https://wg21.link/P1994",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P1995",
    "title": "Contracts - Use Cases",
    "url": "https://wg21.link/P1995",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P1997",
    "title": "Relaxing Restrictions on Arrays",
    "url": "https://wg21.link/P1997",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P1998",
    "title": "Simple Facility for Lossless Integer Conversion",
    "url": "https://wg21.link/P1998",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P2000",
    "title": "Direction for ISO C++",
    "url": "https://wg21.link/P2000",
    "ja": "https://onihusube.hatenablog.com/entry/2022/11/13/233529#P2000R4-Direction-for-ISO-C",
    "ja_old": "https://onihusube.hatenablog.com/entry/2020/08/12/014639#P2000R2-Direction-for-ISO-C",
    "tag": ""
  },
  {
    "number": "P2002",
    "title": "Defaulted comparison specification cleanups",
    "url": "https://wg21.link/P2002",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P2003",
    "title": "Fixing Internal and External Linkage Entities in Header Units",
    "url": "https://wg21.link/P2003",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P2004",
    "title": "Numbers and their Scopes",
    "url": "https://wg21.link/P2004",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P2005",
    "title": "A Brief 2D Graphics Review",
    "url": "https://wg21.link/P2005",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P2006",
    "title": "Eliminating heap-allocations in sender/receiver with connect()/start() as basis operations",
    "url": "https://wg21.link/P2006",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P2007",
    "title": "`std::from_chars` should work with `std::string_view`",
    "url": "https://wg21.link/P2007",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P2008",
    "title": "Enable variable template template parameters",
    "url": "https://wg21.link/P2008",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P2009",
    "title": "SG16: Unicode meeting summaries 2019-10-09 through 2019-12-11",
    "url": "https://wg21.link/P2009",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P2010",
    "title": "Remove iostream operators from P1889",
    "url": "https://wg21.link/P2010",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P2011",
    "title": "A pipeline-rewrite operator",
    "url": "https://wg21.link/P2011",
    "ja": "https://onihusube.hatenablog.com/entry/2020/05/01/194425#P2011R1--A-pipeline-rewrite-operator",
    "ja_old": "https://onihusube.hatenablog.com/entry/2020/05/01/194425#P2011R1--A-pipeline-rewrite-operator",
    "tag": ""
  },
  {
    "number": "P2012",
    "title": "Fix the range-based for loop, Rev2",
    "url": "https://wg21.link/P2012",
    "ja": "https://onihusube.hatenablog.com/entry/2021/10/03/193523#P2012R1-Fix-the-range-based-for-loop-Rev1",
    "ja_old": "https://onihusube.hatenablog.com/entry/2021/10/03/193523#P2012R1-Fix-the-range-based-for-loop-Rev1",
    "tag": ""
  },
  {
    "number": "P2013",
    "title": "Freestanding Language: Optional ::operator new",
    "url": "https://wg21.link/P2013",
    "ja": "https://onihusube.hatenablog.com/entry/2023/02/12/210302#P2013R5-Freestanding-Language-Optional-operator-new",
    "ja_old": "https://onihusube.hatenablog.com/entry/2020/05/01/194425#P2013R1--Freestanding-Language-Optional-operator-new",
    "tag": ""
  },
  {
    "number": "P2014",
    "title": "Proposed resolution for US061/US062 - aligned allocation of coroutine frames",
    "url": "https://wg21.link/P2014",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P2016",
    "title": "A step parameter for iota",
    "url": "https://wg21.link/P2016",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P2017",
    "title": "Conditionally borrowed ranges",
    "url": "https://wg21.link/P2017",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P2019",
    "title": "Usability improvements for std::thread",
    "url": "https://wg21.link/P2019",
    "ja": "https://onihusube.hatenablog.com/entry/2022/11/13/233529#P2019R2-Usability-improvements-for-stdthread",
    "ja_old": "https://onihusube.hatenablog.com/entry/2022/09/04/141015#P2019R1-Usability-improvements-for-stdthread",
    "tag": ""
  },
  {
    "number": "P2020",
    "title": "Locales, Encodings and Unicode",
    "url": "https://wg21.link/P2020",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P2021",
    "title": "Negative zero strikes again",
    "url": "https://wg21.link/P2021",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P2022",
    "title": "Rangified version of lexicographical_compare_three_way",
    "url": "https://wg21.link/P2022",
    "ja": "https://onihusube.hatenablog.com/entry/2023/03/19/184146#P2022R0-Rangified-version-of-lexicographical_compare_three_way",
    "ja_old": "https://onihusube.hatenablog.com/entry/2023/03/19/184146#P2022R0-Rangified-version-of-lexicographical_compare_three_way",
    "tag": ""
  },
  {
    "number": "P2024",
    "title": "Bloomberg Analysis of Unified Executors",
    "url": "https://wg21.link/P2024",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P2025",
    "title": "Guaranteed copy elision for return variables",
    "url": "https://wg21.link/P2025",
    "ja": "https://onihusube.hatenablog.com/entry/2020/07/05/003248#P2025R1--Guaranteed-copy-elision-for-return-variables",
    "ja_old": "https://onihusube.hatenablog.com/entry/2020/07/05/003248#P2025R1--Guaranteed-copy-elision-for-return-variables",
    "tag": ""
  },
  {
    "number": "P2026",
    "title": "A Constituent Study Group for Safety-Critical Applications",
    "url": "https://wg21.link/P2026",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P2027",
    "title": "Moved-from objects need not be valid",
    "url": "https://wg21.link/P2027",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P2028",
    "title": "What is ABI, and What Should WG21 Do About It?",
    "url": "https://wg21.link/P2028",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P2029",
    "title": "Proposed resolution for core issues 411, 1656, and 2333; escapes in character and string literals",
    "url": "https://wg21.link/P2029",
    "ja": "https://onihusube.hatenablog.com/entry/2020/11/02/221657#P2029R4-Proposed-resolution-for-core-issues-411-1656-and-2333-escapes-in-character-and-string-literals",
    "ja_old": "https://onihusube.hatenablog.com/entry/2020/08/12/014639#P2029R2--Proposed-resolution-for-core-issues-411-1656-and-2333-escapes-in-character-and-string-literals",
    "tag": ""
  },
  {
    "number": "P2030",
    "title": "SG19: Machine Learning 2019/10/10-2020/01/09",
    "url": "https://wg21.link/P2030",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P2031",
    "title": "SG14: Meeting Minutes 2019/10/08-2020/01/07",
    "url": "https://wg21.link/P2031",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P2032",
    "title": "Contracts - What Came Before",
    "url": "https://wg21.link/P2032",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P2033",
    "title": "History of Executor Properties",
    "url": "https://wg21.link/P2033",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P2034",
    "title": "Partially Mutable Lambda Captures",
    "url": "https://wg21.link/P2034",
    "ja": "https://onihusube.hatenablog.com/entry/2020/07/05/003248#P2034R2--Partially-Mutable-Lambda-Captures",
    "ja_old": "https://onihusube.hatenablog.com/entry/2020/05/01/194425#P2034R1--Partially-Mutable-Lambda-Captures",
    "tag": ""
  },
  {
    "number": "P2035",
    "title": "Value Proposition: Allocator-Aware (AA) Software",
    "url": "https://wg21.link/P2035",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P2036",
    "title": "Changing scope for lambda trailing-return-type",
    "url": "https://wg21.link/P2036",
    "ja": "https://onihusube.hatenablog.com/entry/2021/10/03/193523#P2036R3-Changing-scope-for-lambda-trailing-return-type",
    "ja_old": "https://onihusube.hatenablog.com/entry/2021/02/11/153333#P2036R1-Changing-scope-for-lambda-trailing-return-type",
    "tag": ""
  },
  {
    "number": "P2037",
    "title": "String's gratuitous assignment",
    "url": "https://wg21.link/P2037",
    "ja": "https://onihusube.hatenablog.com/entry/2020/07/05/003248#P2037R1--Strings-gratuitous-assignment",
    "ja_old": "https://onihusube.hatenablog.com/entry/2020/07/05/003248#P2037R1--Strings-gratuitous-assignment",
    "tag": ""
  },
  {
    "number": "P2038",
    "title": "Proposed nomenclature for contract-related proposals",
    "url": "https://wg21.link/P2038",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P2039",
    "title": "do_until Loop",
    "url": "https://wg21.link/P2039",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P2040",
    "title": "Reflection-based lazy-evaluation",
    "url": "https://wg21.link/P2040",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P2041",
    "title": "template = delete",
    "url": "https://wg21.link/P2041",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P2042",
    "title": "Alternate names for make_shared_default_init",
    "url": "https://wg21.link/P2042",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P2043",
    "title": "Don't constexpr All The Things",
    "url": "https://wg21.link/P2043",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P2044",
    "title": "Member Templates for Local Classes",
    "url": "https://wg21.link/P2044",
    "ja": "https://onihusube.hatenablog.com/entry/2020/05/01/194425#P2044R2--Member-Templates-for-Local-Classes",
    "ja_old": "https://onihusube.hatenablog.com/entry/2020/05/01/194425#P2044R2--Member-Templates-for-Local-Classes",
    "tag": ""
  },
  {
    "number": "P2045",
    "title": "Missing Mandates for the standard library",
    "url": "https://wg21.link/P2045",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P2046",
    "title": "Rangify New Algorithms",
    "url": "https://wg21.link/P2046",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P2047",
    "title": "An allocator-aware optional type",
    "url": "https://wg21.link/P2047",
    "ja": "https://onihusube.hatenablog.com/entry/2023/03/19/184146#P2047R6-An-allocator-aware-optional-type",
    "ja_old": "https://onihusube.hatenablog.com/entry/2021/03/12/225547#P2047R1-An-allocator-aware-optional-type",
    "tag": ""
  },
  {
    "number": "P2048",
    "title": "Prohibit zero and NULL from being used as null pointer literals",
    "url": "https://wg21.link/P2048",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P2049",
    "title": "Constraint refinement for special-cased functions",
    "url": "https://wg21.link/P2049",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P2050",
    "title": "Tweaks to the design of source code fragments",
    "url": "https://wg21.link/P2050",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P2051",
    "title": "C++ Library Issues to be moved in Prague",
    "url": "https://wg21.link/P2051",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P2052",
    "title": "Making modern C++ i/o a consistent API experience from bottom to top",
    "url": "https://wg21.link/P2052",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P2053",
    "title": "Defensive Checks Versus Input Validation",
    "url": "https://wg21.link/P2053",
    "ja": "https://onihusube.hatenablog.com/entry/2020/09/18/222444#P2053R1--Defensive-Checks-Versus-Input-Validation",
    "ja_old": "https://onihusube.hatenablog.com/entry/2020/09/18/222444#P2053R1--Defensive-Checks-Versus-Input-Validation",
    "tag": ""
  },
  {
    "number": "P2054",
    "title": "Audio I/O Software Use Cases",
    "url": "https://wg21.link/P2054",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P2055",
    "title": "A Relaxed Guide to memory_order_relaxed",
    "url": "https://wg21.link/P2055",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P2057",
    "title": "SG14 SG19 Past, Present and Future status",
    "url": "https://wg21.link/P2057",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P2058",
    "title": "Make std::random_device Less Inscrutable",
    "url": "https://wg21.link/P2058",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P2059",
    "title": "Make Pseudo-random Numbers Portable",
    "url": "https://wg21.link/P2059",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P2060",
    "title": "Make Random Number Engines Seedable",
    "url": "https://wg21.link/P2060",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P2061",
    "title": "Sequential consistency for atomic memcpy",
    "url": "https://wg21.link/P2061",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P2062",
    "title": "The Circle Meta-model",
    "url": "https://wg21.link/P2062",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P2064",
    "title": "Assumptions",
    "url": "https://wg21.link/P2064",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P2065",
    "title": "naming and aliases",
    "url": "https://wg21.link/P2065",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P2066",
    "title": "Suggested draft TS for C++ Extensions for Minimal Transactional Memory",
    "url": "https://wg21.link/P2066",
    "ja": "https://onihusube.hatenablog.com/entry/2021/10/03/193523#P2066R9-Suggested-draft-TS-for-C-Extensions-for-Minimal-Transactional-Memory",
    "ja_old": "https://onihusube.hatenablog.com/entry/2020/06/01/001003#P2066R2--Suggested-draft-TS-for-C-Extensions-for-Transaction-Memory-Light",
    "tag": ""
  },
  {
    "number": "P2067",
    "title": "Allowing trailing commas in ctor-initializer",
    "url": "https://wg21.link/P2067",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P2068",
    "title": "Using ?: to reduce the scope of constexpr-if",
    "url": "https://wg21.link/P2068",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P2069",
    "title": "Stackable, thread local, signal guards",
    "url": "https://wg21.link/P2069",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P2070",
    "title": "A case for optional and object_ptr",
    "url": "https://wg21.link/P2070",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P2071",
    "title": "Named universal character escapes",
    "url": "https://wg21.link/P2071",
    "ja": "https://onihusube.hatenablog.com/entry/2022/05/08/195618#P2071R2-Named-universal-character-escapes",
    "ja_old": "https://onihusube.hatenablog.com/entry/2021/12/11/220126#P2071R1-Named-universal-character-escapes",
    "tag": ""
  },
  {
    "number": "P2072",
    "title": "Differentiable programming for C++",
    "url": "https://wg21.link/P2072",
    "ja": "https://onihusube.hatenablog.com/entry/2021/02/11/153333#P2072R1-Differentiable-programming-for-C",
    "ja_old": "https://onihusube.hatenablog.com/entry/2021/02/11/153333#P2072R1-Differentiable-programming-for-C",
    "tag": ""
  },
  {
    "number": "P2073",
    "title": "Debugging C++ coroutines",
    "url": "https://wg21.link/P2073",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P2074",
    "title": "Asynchronous callstacks & coroutines",
    "url": "https://wg21.link/P2074",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P2075",
    "title": "Philox as an extension of the C++ RNG engines",
    "url": "https://wg21.link/P2075",
    "ja": "https://onihusube.hatenablog.com/entry/2023/02/12/210302#P2075R2-Philox-as-an-extension-of-the-C-RNG-engines",
    "ja_old": "https://onihusube.hatenablog.com/entry/2020/08/12/014639#P2075R1--Philox-as-an-extension-of-the-C-RNG-engines",
    "tag": ""
  },
  {
    "number": "P2076",
    "title": "Previous disagreements on Contracts",
    "url": "https://wg21.link/P2076",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P2077",
    "title": "Heterogeneous erasure overloads for associative containers",
    "url": "https://wg21.link/P2077",
    "ja": "https://onihusube.hatenablog.com/entry/2021/01/17/005823#P2077R2-Heterogeneous-erasure-overloads-for-associative-containers",
    "ja_old": "https://onihusube.hatenablog.com/entry/2020/10/09/221025#P2077R1--Heterogeneous-erasure-overloads-for-associative-containers",
    "tag": ""
  },
  {
    "number": "P2078",
    "title": "Add new traits type std::is_complex",
    "url": "https://wg21.link/P2078",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P2079",
    "title": "System execution context",
    "url": "https://wg21.link/P2079",
    "ja": "https://onihusube.hatenablog.com/entry/2022/08/11/193828#P2079R3-System-execution-context",
    "ja_old": "https://onihusube.hatenablog.com/entry/2020/09/18/222444#P2079R1--Parallel-Executor",
    "tag": ""
  },
  {
    "number": "P2080",
    "title": "Polymorphic allocators: There is no such thing as One True Vocabulary Type",
    "url": "https://wg21.link/P2080",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P2081",
    "title": "Rebase the Library Fundamentals v3 TS on C++20",
    "url": "https://wg21.link/P2081",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P2082",
    "title": "Fixing CTAD for aggregates",
    "url": "https://wg21.link/P2082",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P2085",
    "title": "Consistent defaulted comparisons",
    "url": "https://wg21.link/P2085",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P2087",
    "title": "Reflection Naming: fix reflexpr",
    "url": "https://wg21.link/P2087",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P2088",
    "title": "Reflection Naming: Reification",
    "url": "https://wg21.link/P2088",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P2089",
    "title": "Function parameter constraints are too fragile",
    "url": "https://wg21.link/P2089",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P2091",
    "title": "Issues with Range Access CPOs",
    "url": "https://wg21.link/P2091",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P2092",
    "title": "Disambiguating Nested-Requirements",
    "url": "https://wg21.link/P2092",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P2093",
    "title": "Formatted output",
    "url": "https://wg21.link/P2093",
    "ja": "https://onihusube.hatenablog.com/entry/2022/05/08/195618#P2093R14-Formatted-output",
    "ja_old": "https://onihusube.hatenablog.com/entry/2020/07/05/003248#P2093R0--Formatted-output",
    "tag": ""
  },
  {
    "number": "P2095",
    "title": "Resolve lambda init-capture pack grammar (CWG2378)",
    "url": "https://wg21.link/P2095",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P2096",
    "title": "Generalized wording for partial specializations",
    "url": "https://wg21.link/P2096",
    "ja": "https://onihusube.hatenablog.com/entry/2020/09/18/222444#P2096R2--Generalized-wording-for-partial-specializations",
    "ja_old": "https://onihusube.hatenablog.com/entry/2020/05/01/194425#P2096R1--Generalized-wording-for-partial-specializations",
    "tag": ""
  },
  {
    "number": "P2098",
    "title": "Proposing std::is_specialization_of",
    "url": "https://wg21.link/P2098",
    "ja": "https://onihusube.hatenablog.com/entry/2020/05/01/194425#P2098R1--Proposing-stdis_specialization_of",
    "ja_old": "https://onihusube.hatenablog.com/entry/2020/05/01/194425#P2098R1--Proposing-stdis_specialization_of",
    "tag": ""
  },
  {
    "number": "P2100",
    "title": "Keep unhandled_exception of a promise type mandatory - a response to US062 and FR066",
    "url": "https://wg21.link/P2100",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P2101",
    "title": "\"Models\" subsumes \"satisfies\" (Wording for US298 and US300)",
    "url": "https://wg21.link/P2101",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P2102",
    "title": "Make &quot;implicit expression variations&quot; more explicit (Wording for US185)",
    "url": "https://wg21.link/P2102",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P2103",
    "title": "Core Language Changes for NB Comments at the February, 2020 (Prague) Meeting",
    "url": "https://wg21.link/P2103",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P2104",
    "title": "Resolution for GB046 - Disallow changing concept values",
    "url": "https://wg21.link/P2104",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P2106",
    "title": "Alternative wording for GB315 and GB316",
    "url": "https://wg21.link/P2106",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P2107",
    "title": "Core issue 2436: US064 Copy semantics of coroutine parameters",
    "url": "https://wg21.link/P2107",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P2108",
    "title": "Core Language Working Group \"ready\" issues for the February, 2020 (Prague) meeting",
    "url": "https://wg21.link/P2108",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P2109",
    "title": "US084:  Disallow \"export import foo\" outside of module interface",
    "url": "https://wg21.link/P2109",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P2113",
    "title": "Proposed resolution for 2019 comment CA 112",
    "url": "https://wg21.link/P2113",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P2114",
    "title": "Minimial Contract Use Cases",
    "url": "https://wg21.link/P2114",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P2115",
    "title": "US069: Merging of multiple definitions for unnamed unscoped enumerations",
    "url": "https://wg21.link/P2115",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P2116",
    "title": "Remove tuple-like protocol support from fixed-extent span",
    "url": "https://wg21.link/P2116",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P2117",
    "title": "C++ Standard Library Issues Resolved Directly In Prague",
    "url": "https://wg21.link/P2117",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P2119",
    "title": "Feedback on Simple Statistics functions",
    "url": "https://wg21.link/P2119",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P2120",
    "title": "Simplified structured bindings protocol with pack aliases",
    "url": "https://wg21.link/P2120",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P2123",
    "title": "interfaces: A Facility to Manage ABI/API Evolution",
    "url": "https://wg21.link/P2123",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P2125",
    "title": "The Ecosystem Expense of Vocabulary Types",
    "url": "https://wg21.link/P2125",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P2126",
    "title": "Unleashing the Power of Allocator-Aware (AA) Infrastructure",
    "url": "https://wg21.link/P2126",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P2128",
    "title": "Multidimensional subscript operator",
    "url": "https://wg21.link/P2128",
    "ja": "https://onihusube.hatenablog.com/entry/2021/10/03/193523#P2128R6-Multidimensional-subscript-operator",
    "ja_old": "https://onihusube.hatenablog.com/entry/2020/06/01/001003#P2128R1--Multidimensional-subscript-operator",
    "tag": ""
  },
  {
    "number": "P2130",
    "title": "WG21 2020-02 Prague Record of Discussion",
    "url": "https://wg21.link/P2130",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P2131",
    "title": "Changes between C++17 and C++20",
    "url": "https://wg21.link/P2131",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P2133",
    "title": "The Incubator needs YOU!",
    "url": "https://wg21.link/P2133",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P2134",
    "title": "Kaizen*: keep improving together!",
    "url": "https://wg21.link/P2134",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P2136",
    "title": "invoke_r",
    "url": "https://wg21.link/P2136",
    "ja": "https://onihusube.hatenablog.com/entry/2021/06/13/165215#P2136R3-invoke_r",
    "ja_old": "https://onihusube.hatenablog.com/entry/2020/06/01/001003#P2136R1--invoke_r",
    "tag": ""
  },
  {
    "number": "P2137",
    "title": "Goals and priorities for C++",
    "url": "https://wg21.link/P2137",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P2138",
    "title": "Rules of Design<=>Specification engagement",
    "url": "https://wg21.link/P2138",
    "ja": "https://onihusube.hatenablog.com/entry/2021/06/13/165215#P2138R4-Rules-of-DesignSpecification-engagement",
    "ja_old": "https://onihusube.hatenablog.com/entry/2020/05/01/194425#P2138R1--Rules-of-DesignWording-engagement",
    "tag": ""
  },
  {
    "number": "P2139",
    "title": "Reviewing Deprecated Facilities of C++20 for C++23",
    "url": "https://wg21.link/P2139",
    "ja": "https://onihusube.hatenablog.com/entry/2020/08/12/014639#P2139R2--Reviewing-Deprecated-Facilities-of-C20-for-C23",
    "ja_old": "https://onihusube.hatenablog.com/entry/2020/07/05/003248#P2139R1--Reviewing-Deprecated-Facilities-of-C20-for-C23",
    "tag": ""
  },
  {
    "number": "P2141",
    "title": "Aggregates are named tuples",
    "url": "https://wg21.link/P2141",
    "ja": "https://onihusube.hatenablog.com/entry/2020/07/05/003248#P2141R0--Aggregates-are-named-tuples",
    "ja_old": "https://onihusube.hatenablog.com/entry/2020/07/05/003248#P2141R0--Aggregates-are-named-tuples",
    "tag": ""
  },
  {
    "number": "P2142",
    "title": "Allow '.' operator to work on pointers",
    "url": "https://wg21.link/P2142",
    "ja": "https://onihusube.hatenablog.com/entry/2020/06/01/001003#P2142R1--Allow--operator-to-work-on-pointers",
    "ja_old": "https://onihusube.hatenablog.com/entry/2020/06/01/001003#P2142R1--Allow--operator-to-work-on-pointers",
    "tag": ""
  },
  {
    "number": "P2145",
    "title": "Evolving C++ Remotely",
    "url": "https://wg21.link/P2145",
    "ja": "https://onihusube.hatenablog.com/entry/2020/10/09/221025#P2145R1--Evolving-C-Remotely",
    "ja_old": "https://onihusube.hatenablog.com/entry/2020/06/01/001003#P2145R0--Evolving-C-Remotely",
    "tag": ""
  },
  {
    "number": "P2146",
    "title": "Modern std::byte stream IO for C++",
    "url": "https://wg21.link/P2146",
    "ja": "https://onihusube.hatenablog.com/entry/2020/08/12/014639#P2146R2--Modern-stdbyte-stream-IO-for-C",
    "ja_old": "https://onihusube.hatenablog.com/entry/2020/05/01/194425#P2146R0--Modern-stdbyte-stream-IO-for-C",
    "tag": ""
  },
  {
    "number": "P2148",
    "title": "Library Evolution Design Guidelines",
    "url": "https://wg21.link/P2148",
    "ja": "https://onihusube.hatenablog.com/entry/2020/11/02/221657#P2148R0-Library-Evolution-Design-Guidelines",
    "ja_old": "https://onihusube.hatenablog.com/entry/2020/11/02/221657#P2148R0-Library-Evolution-Design-Guidelines",
    "tag": ""
  },
  {
    "number": "P2149",
    "title": "Remove system_executor",
    "url": "https://wg21.link/P2149",
    "ja": "https://onihusube.hatenablog.com/entry/2020/05/01/194425#P2149R0--Remove-system_executor",
    "ja_old": "https://onihusube.hatenablog.com/entry/2020/05/01/194425#P2149R0--Remove-system_executor",
    "tag": ""
  },
  {
    "number": "P2150",
    "title": "Down with typename in the library!",
    "url": "https://wg21.link/P2150",
    "ja": "https://onihusube.hatenablog.com/entry/2020/05/01/194425#P2150R0--Down-with-typename-in-the-library",
    "ja_old": "https://onihusube.hatenablog.com/entry/2020/05/01/194425#P2150R0--Down-with-typename-in-the-library",
    "tag": ""
  },
  {
    "number": "P2152",
    "title": "Querying the alignment of an object",
    "url": "https://wg21.link/P2152",
    "ja": "https://onihusube.hatenablog.com/entry/2022/01/10/235544#P2152R1-Querying-the-alignment-of-an-object",
    "ja_old": "https://onihusube.hatenablog.com/entry/2020/07/05/003248#P2152R0--Querying-the-alignment-of-an-object",
    "tag": ""
  },
  {
    "number": "P2155",
    "title": "Policy property for describing adjacency",
    "url": "https://wg21.link/P2155",
    "ja": "https://onihusube.hatenablog.com/entry/2020/05/01/194425#P2155R0--Policy-property-for-describing-adjacency",
    "ja_old": "https://onihusube.hatenablog.com/entry/2020/05/01/194425#P2155R0--Policy-property-for-describing-adjacency",
    "tag": ""
  },
  {
    "number": "P2156",
    "title": "Allow Duplicate Attributes",
    "url": "https://wg21.link/P2156",
    "ja": "https://onihusube.hatenablog.com/entry/2020/05/01/194425#P2156R0--Allow-Duplicate-Attributes",
    "ja_old": "https://onihusube.hatenablog.com/entry/2020/05/01/194425#P2156R0--Allow-Duplicate-Attributes",
    "tag": ""
  },
  {
    "number": "P2159",
    "title": "A Big Decimal Type",
    "url": "https://wg21.link/P2159",
    "ja": "https://onihusube.hatenablog.com/entry/2023/03/19/184146#P2159R1-A-Big-Decimal-Type",
    "ja_old": "https://onihusube.hatenablog.com/entry/2020/06/01/001003#P2159R0--An-Unbounded-Decimal-Floating-Point-Type",
    "tag": ""
  },
  {
    "number": "P2160",
    "title": "Locks lock lockables (wording for LWG 2363)",
    "url": "https://wg21.link/P2160",
    "ja": "https://onihusube.hatenablog.com/entry/2020/06/01/001003#P2160R0--Locks-lock-lockables-wording-for-LWG-2363",
    "ja_old": "https://onihusube.hatenablog.com/entry/2020/06/01/001003#P2160R0--Locks-lock-lockables-wording-for-LWG-2363",
    "tag": ""
  },
  {
    "number": "P2161",
    "title": "Remove Default Candidate Executor",
    "url": "https://wg21.link/P2161",
    "ja": "https://onihusube.hatenablog.com/entry/2020/08/12/014639#P2161R2--Remove-Default-Candidate-Executor",
    "ja_old": "https://onihusube.hatenablog.com/entry/2020/06/01/001003#P2161R0--Remove-Default-Candidate-Executor",
    "tag": ""
  },
  {
    "number": "P2162",
    "title": "Inheriting from std::variant (resolving LWG3052)",
    "url": "https://wg21.link/P2162",
    "ja": "https://onihusube.hatenablog.com/entry/2021/03/12/225547#P2162R2-Inheriting-from-stdvariant-resolving-LWG3052",
    "ja_old": "https://onihusube.hatenablog.com/entry/2020/06/01/001003#P2162R0--Inheriting-from-stdvariant-resolving-LWG3052",
    "tag": ""
  },
  {
    "number": "P2163",
    "title": "Native tuples in C++",
    "url": "https://wg21.link/P2163",
    "ja": "https://onihusube.hatenablog.com/entry/2020/06/01/001003#P2163R0--Native-tuples-in-C",
    "ja_old": "https://onihusube.hatenablog.com/entry/2020/06/01/001003#P2163R0--Native-tuples-in-C",
    "tag": ""
  },
  {
    "number": "P2164",
    "title": "views::enumerate",
    "url": "https://wg21.link/P2164",
    "ja": "https://onihusube.hatenablog.com/entry/2023/02/12/210302#P2164R9-viewsenumerate",
    "ja_old": "https://onihusube.hatenablog.com/entry/2020/06/01/001003#P2164R0--viewsenumerate",
    "tag": ""
  },
  {
    "number": "P2165",
    "title": "Compatibility between tuple, pair and tuple-like objects",
    "url": "https://wg21.link/P2165",
    "ja": "https://onihusube.hatenablog.com/entry/2022/08/11/193828#P2165R4-Compatibility-between-tuple-pair-and-tuple-like-objects",
    "ja_old": "https://onihusube.hatenablog.com/entry/2020/06/01/001003#P2165R0--Comparing-pair-and-tuples",
    "tag": ""
  },
  {
    "number": "P2166",
    "title": "A Proposal to Prohibit std::basic_string and std::basic_string_view construction from nullptr",
    "url": "https://wg21.link/P2166",
    "ja": "https://onihusube.hatenablog.com/entry/2020/10/09/221025#P2166R1--A-Proposal-to-Prohibit-stdbasic_string-and-stdbasic_string_view-construction-from-nullptr",
    "ja_old": "https://onihusube.hatenablog.com/entry/2020/07/05/003248#P2166R0--A-Proposal-to-Prohibit-stdbasic_string-and-stdbasic_string_view-construction-from-nullptr",
    "tag": ""
  },
  {
    "number": "P2167",
    "title": "Improved Proposed Wording for LWG 2114 (contextually convertible to bool)",
    "url": "https://wg21.link/P2167",
    "ja": "https://onihusube.hatenablog.com/entry/2022/07/09/160343#P2167R2-Improved-Proposed-Wording-for-LWG-2114-contextually-convertible-to-bool",
    "ja_old": "https://onihusube.hatenablog.com/entry/2020/06/01/001003#P2167R0--Improved-Proposed-Wording-for-LWG-2114",
    "tag": ""
  },
  {
    "number": "P2168",
    "title": "generator: A Synchronous Coroutine Generator Compatible With Ranges",
    "url": "https://wg21.link/P2168",
    "ja": "https://onihusube.hatenablog.com/entry/2021/06/13/165215#P2168R3-generator-A-Synchronous-Coroutine-Generator-Compatible-With-Ranges",
    "ja_old": "https://onihusube.hatenablog.com/entry/2020/06/01/001003#P2168R0--generator-A-Synchronous-Coroutine-Generator-Compatible-With-Ranges",
    "tag": ""
  },
  {
    "number": "P2169",
    "title": "A Nice Placeholder With No Name",
    "url": "https://wg21.link/P2169",
    "ja": "https://onihusube.hatenablog.com/entry/2023/02/12/210302#P2169R3-A-Nice-Placeholder-With-No-Name",
    "ja_old": "https://onihusube.hatenablog.com/entry/2020/06/01/001003#P2169R0--A-Nice-Placeholder-With-No-Name",
    "tag": ""
  },
  {
    "number": "P2170",
    "title": "Feedback on implementing the proposed std::error type",
    "url": "https://wg21.link/P2170",
    "ja": "https://onihusube.hatenablog.com/entry/2020/06/01/001003#P2170R0--Feedback-on-implementing-the-proposed-stderror-type",
    "ja_old": "https://onihusube.hatenablog.com/entry/2020/06/01/001003#P2170R0--Feedback-on-implementing-the-proposed-stderror-type",
    "tag": ""
  },
  {
    "number": "P2171",
    "title": "Rebasing the Networking TS on C++20 (revision 2)",
    "url": "https://wg21.link/P2171",
    "ja": "https://onihusube.hatenablog.com/entry/2020/11/02/221657#P2171R2-Rebasing-the-Networking-TS-on-C20-revision-2",
    "ja_old": "https://onihusube.hatenablog.com/entry/2020/06/01/001003#P2171R0--Rebasing-the-Networking-TS-on-C20",
    "tag": ""
  },
  {
    "number": "P2172",
    "title": "What do we want from a modularized Standard Library?",
    "url": "https://wg21.link/P2172",
    "ja": "https://onihusube.hatenablog.com/entry/2020/06/01/001003#P2172R0--What-do-we-want-from-a-modularized-Standard-Library",
    "ja_old": "https://onihusube.hatenablog.com/entry/2020/06/01/001003#P2172R0--What-do-we-want-from-a-modularized-Standard-Library",
    "tag": ""
  },
  {
    "number": "P2173",
    "title": "Attributes on Lambda-Expressions",
    "url": "https://wg21.link/P2173",
    "ja": "https://onihusube.hatenablog.com/entry/2022/01/10/235544#P2173R1-Attributes-on-Lambda-Expressions",
    "ja_old": "https://onihusube.hatenablog.com/entry/2020/06/01/001003#P2173R0--Attributes-on-Lambda-Expressions",
    "tag": ""
  },
  {
    "number": "P2174",
    "title": "Compound Literals",
    "url": "https://wg21.link/P2174",
    "ja": "https://onihusube.hatenablog.com/entry/2022/05/08/195618#P2174R1-Compound-Literals",
    "ja_old": "https://onihusube.hatenablog.com/entry/2020/06/01/001003#P2174R0--Compound-Literals",
    "tag": ""
  },
  {
    "number": "P2175",
    "title": "Composable cancellation for sender-based async operations",
    "url": "https://wg21.link/P2175",
    "ja": "https://onihusube.hatenablog.com/entry/2021/01/17/005823#P2175R0-Composable-cancellation-for-sender-based-async-operations",
    "ja_old": "https://onihusube.hatenablog.com/entry/2021/01/17/005823#P2175R0-Composable-cancellation-for-sender-based-async-operations",
    "tag": ""
  },
  {
    "number": "P2176",
    "title": "A different take on inexpressible conditions",
    "url": "https://wg21.link/P2176",
    "ja": "https://onihusube.hatenablog.com/entry/2020/07/05/003248#P2176R0--A-different-take-on-inexpressible-conditions",
    "ja_old": "https://onihusube.hatenablog.com/entry/2020/07/05/003248#P2176R0--A-different-take-on-inexpressible-conditions",
    "tag": ""
  },
  {
    "number": "P2178",
    "title": "Misc lexing and string handling improvements",
    "url": "https://wg21.link/P2178",
    "ja": "https://onihusube.hatenablog.com/entry/2020/08/12/014639#P2178R1--Misc-lexing-and-string-handling-improvements",
    "ja_old": "https://onihusube.hatenablog.com/entry/2020/07/05/003248#P2178R0--Misc-lexing-and-string-handling-improvements",
    "tag": ""
  },
  {
    "number": "P2179",
    "title": "SG16: Unicode meeting summaries 2020-01-08 through 2020-05-27",
    "url": "https://wg21.link/P2179",
    "ja": "https://onihusube.hatenablog.com/entry/2020/07/05/003248#P2179R0--SG16-Unicode-meeting-summaries-2020-01-08-through-2020-05-27",
    "ja_old": "https://onihusube.hatenablog.com/entry/2020/07/05/003248#P2179R0--SG16-Unicode-meeting-summaries-2020-01-08-through-2020-05-27",
    "tag": ""
  },
  {
    "number": "P2181",
    "title": "Correcting the Design of Bulk Execution",
    "url": "https://wg21.link/P2181",
    "ja": "https://onihusube.hatenablog.com/entry/2020/07/05/003248#P2181R0--Correcting-the-Design-of-Bulk-Execution",
    "ja_old": "https://onihusube.hatenablog.com/entry/2020/07/05/003248#P2181R0--Correcting-the-Design-of-Bulk-Execution",
    "tag": ""
  },
  {
    "number": "P2182",
    "title": "Contract Support: Defining the Minimum Viable Feature Set",
    "url": "https://wg21.link/P2182",
    "ja": "https://onihusube.hatenablog.com/entry/2020/07/05/003248#P2182R0--Contract-Support-Defining-the-Minimum-Viable-Feature-Set",
    "ja_old": "https://onihusube.hatenablog.com/entry/2020/07/05/003248#P2182R0--Contract-Support-Defining-the-Minimum-Viable-Feature-Set",
    "tag": ""
  },
  {
    "number": "P2183",
    "title": "Executors Review: Properties",
    "url": "https://wg21.link/P2183",
    "ja": "https://onihusube.hatenablog.com/entry/2020/08/12/014639#P2183R0--Executors-Review-Properties",
    "ja_old": "https://onihusube.hatenablog.com/entry/2020/08/12/014639#P2183R0--Executors-Review-Properties",
    "tag": ""
  },
  {
    "number": "P2184",
    "title": "Thriving in a crowded and changing world: C++ 2006-2020",
    "url": "https://wg21.link/P2184",
    "ja": "https://onihusube.hatenablog.com/entry/2020/07/05/003248#P2184R0--Thriving-in-a-crowded-and-changing-world-C-2006-2020",
    "ja_old": "https://onihusube.hatenablog.com/entry/2020/07/05/003248#P2184R0--Thriving-in-a-crowded-and-changing-world-C-2006-2020",
    "tag": ""
  },
  {
    "number": "P2185",
    "title": "Contracts Use Case Categorization",
    "url": "https://wg21.link/P2185",
    "ja": "https://onihusube.hatenablog.com/entry/2020/07/05/003248#P2185R0--Contracts-Use-Case-Categorization",
    "ja_old": "https://onihusube.hatenablog.com/entry/2020/07/05/003248#P2185R0--Contracts-Use-Case-Categorization",
    "tag": ""
  },
  {
    "number": "P2186",
    "title": "Removing Garbage Collection Support",
    "url": "https://wg21.link/P2186",
    "ja": "https://onihusube.hatenablog.com/entry/2021/05/14/214016#P2186R2-Removing-Garbage-Collection-Support",
    "ja_old": "https://onihusube.hatenablog.com/entry/2020/08/12/014639#P2186R0--Removing-Garbage-Collection-Support",
    "tag": ""
  },
  {
    "number": "P2187",
    "title": "std::swap_if, std::predictable",
    "url": "https://wg21.link/P2187",
    "ja": "https://onihusube.hatenablog.com/entry/2020/11/02/221657#P2187R5-stdswap_if-stdpredictable",
    "ja_old": "https://onihusube.hatenablog.com/entry/2020/07/05/003248#P2187R0--stdswap_if-stdpredictable",
    "tag": ""
  },
  {
    "number": "P2188",
    "title": "Zap the Zap: Pointers are sometimes just bags of bits",
    "url": "https://wg21.link/P2188",
    "ja": "https://onihusube.hatenablog.com/entry/2020/08/12/014639#P2188R1--Zap-the-Zap-Pointers-are-sometimes-just-bags-of-bits",
    "ja_old": "https://onihusube.hatenablog.com/entry/2020/07/05/003248#P2188R0--Zap-the-Zap-Pointers-should-just-be-bags-of-bits",
    "tag": ""
  },
  {
    "number": "P2191",
    "title": "Modules: ADL & GMFs do not play together well (anymore)",
    "url": "https://wg21.link/P2191",
    "ja": "https://onihusube.hatenablog.com/entry/2020/08/12/014639#P2191R0--Modules-ADL--GMFs-do-not-play-together-well-anymore",
    "ja_old": "https://onihusube.hatenablog.com/entry/2020/08/12/014639#P2191R0--Modules-ADL--GMFs-do-not-play-together-well-anymore",
    "tag": ""
  },
  {
    "number": "P2192",
    "title": "std::valstat - Returns Handling",
    "url": "https://wg21.link/P2192",
    "ja": "https://onihusube.hatenablog.com/entry/2020/11/02/221657#P2192R3-stdvalstat---Returns-Handling",
    "ja_old": "https://onihusube.hatenablog.com/entry/2020/08/12/014639#P2192R0-stdvalstat---function-return-type",
    "tag": ""
  },
  {
    "number": "P2193",
    "title": "How to structure a teaching topic",
    "url": "https://wg21.link/P2193",
    "ja": "https://onihusube.hatenablog.com/entry/2020/08/12/014639#P2193R1--How-to-structure-a-teaching-topic",
    "ja_old": "https://onihusube.hatenablog.com/entry/2020/08/12/014639#P2193R0--How-to-structure-a-teaching-topic",
    "tag": ""
  },
  {
    "number": "P2194",
    "title": "The character set of the internal representation should be Unicode",
    "url": "https://wg21.link/P2194",
    "ja": "https://onihusube.hatenablog.com/entry/2020/10/09/221025#P2194R0--The-character-set-of-the-internal-representation-should-be-Unicode",
    "ja_old": "https://onihusube.hatenablog.com/entry/2020/10/09/221025#P2194R0--The-character-set-of-the-internal-representation-should-be-Unicode",
    "tag": ""
  },
  {
    "number": "P2195",
    "title": "Electronic Straw Polls",
    "url": "https://wg21.link/P2195",
    "ja": "https://onihusube.hatenablog.com/entry/2021/03/12/225547#P2195R2-Electronic-Straw-Polls",
    "ja_old": "https://onihusube.hatenablog.com/entry/2020/10/09/221025#P2195R0--Electronic-Straw-Polls",
    "tag": ""
  },
  {
    "number": "P2196",
    "title": "A lifetime-extending forwarder",
    "url": "https://wg21.link/P2196",
    "ja": "https://onihusube.hatenablog.com/entry/2020/08/12/014639#P2196R0--A-lifetime-extending-forwarder",
    "ja_old": "https://onihusube.hatenablog.com/entry/2020/08/12/014639#P2196R0--A-lifetime-extending-forwarder",
    "tag": ""
  },
  {
    "number": "P2197",
    "title": "Formatting for std::complex",
    "url": "https://wg21.link/P2197",
    "ja": "https://onihusube.hatenablog.com/entry/2020/09/18/222444#P2197R0--Formatting-for-stdcomplex",
    "ja_old": "https://onihusube.hatenablog.com/entry/2020/09/18/222444#P2197R0--Formatting-for-stdcomplex",
    "tag": ""
  },
  {
    "number": "P2198",
    "title": "Freestanding Feature-Test Macros and Implementation-Defined Extensions",
    "url": "https://wg21.link/P2198",
    "ja": "https://onihusube.hatenablog.com/entry/2023/02/12/210302#P2198R7-Freestanding-Feature-Test-Macros-and-Implementation-Defined-Extensions",
    "ja_old": "https://onihusube.hatenablog.com/entry/2020/08/12/014639#P2198R0-Freestanding-Feature-Test-Macros-and-Implementation-Defined-Extensions",
    "tag": ""
  },
  {
    "number": "P2199",
    "title": "Concepts to differentiate types",
    "url": "https://wg21.link/P2199",
    "ja": "https://onihusube.hatenablog.com/entry/2020/08/12/014639#P2199R0--Concepts-to-differentiate-types",
    "ja_old": "https://onihusube.hatenablog.com/entry/2020/08/12/014639#P2199R0--Concepts-to-differentiate-types",
    "tag": ""
  },
  {
    "number": "P2201",
    "title": "Mixed string literal concatenation",
    "url": "https://wg21.link/P2201",
    "ja": "https://onihusube.hatenablog.com/entry/2021/05/14/214016#P2201R1-Mixed-string-literal-concatenation",
    "ja_old": "https://onihusube.hatenablog.com/entry/2020/08/12/014639#P2201R0--Mixed-string-literal-concatenation",
    "tag": ""
  },
  {
    "number": "P2202",
    "title": "Senders/Receivers group Executors review report",
    "url": "https://wg21.link/P2202",
    "ja": "https://onihusube.hatenablog.com/entry/2020/08/12/014639#P2202R0--SendersReceivers-group-Executors-review-report",
    "ja_old": "https://onihusube.hatenablog.com/entry/2020/08/12/014639#P2202R0--SendersReceivers-group-Executors-review-report",
    "tag": ""
  },
  {
    "number": "P2203",
    "title": "LEWG Executors Customization Point Report",
    "url": "https://wg21.link/P2203",
    "ja": "https://onihusube.hatenablog.com/entry/2020/08/12/014639#P2203R0--LEWG-Executors-Customization-Point-Report",
    "ja_old": "https://onihusube.hatenablog.com/entry/2020/08/12/014639#P2203R0--LEWG-Executors-Customization-Point-Report",
    "tag": ""
  },
  {
    "number": "P2205",
    "title": "Executors Review - Polymorphic Executor",
    "url": "https://wg21.link/P2205",
    "ja": "https://onihusube.hatenablog.com/entry/2020/09/18/222444#P2205R0--Executors-Review---Polymorphic-Executor",
    "ja_old": "https://onihusube.hatenablog.com/entry/2020/09/18/222444#P2205R0--Executors-Review---Polymorphic-Executor",
    "tag": ""
  },
  {
    "number": "P2206",
    "title": "Executors Thread Pool review report",
    "url": "https://wg21.link/P2206",
    "ja": "https://onihusube.hatenablog.com/entry/2020/10/09/221025#P2206R0--Executors-Thread-Pool-review-report",
    "ja_old": "https://onihusube.hatenablog.com/entry/2020/10/09/221025#P2206R0--Executors-Thread-Pool-review-report",
    "tag": ""
  },
  {
    "number": "P2207",
    "title": "Executors review: concepts breakout group report",
    "url": "https://wg21.link/P2207",
    "ja": "https://onihusube.hatenablog.com/entry/2020/09/18/222444#P2207R0--Executors-review-concepts-breakout-group-report",
    "ja_old": "https://onihusube.hatenablog.com/entry/2020/09/18/222444#P2207R0--Executors-review-concepts-breakout-group-report",
    "tag": ""
  },
  {
    "number": "P2209",
    "title": "Bulk Schedule",
    "url": "https://wg21.link/P2209",
    "ja": "https://onihusube.hatenablog.com/entry/2020/09/18/222444#P2209R0--Bulk-Schedule",
    "ja_old": "https://onihusube.hatenablog.com/entry/2020/09/18/222444#P2209R0--Bulk-Schedule",
    "tag": ""
  },
  {
    "number": "P2210",
    "title": "Superior String Splitting",
    "url": "https://wg21.link/P2210",
    "ja": "https://onihusube.hatenablog.com/entry/2021/02/11/153333#P2210R1-Superior-String-Splitting",
    "ja_old": "https://onihusube.hatenablog.com/entry/2020/09/18/222444#P2210R0--Superior-String-Splitting",
    "tag": ""
  },
  {
    "number": "P2211",
    "title": "Exhaustiveness Checking for Pattern Matching",
    "url": "https://wg21.link/P2211",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P2212",
    "title": "Relax Requirements for time_point::clock",
    "url": "https://wg21.link/P2212",
    "ja": "https://onihusube.hatenablog.com/entry/2020/10/09/221025#P2212R1--Relax-Requirements-for-time_pointclock",
    "ja_old": "https://onihusube.hatenablog.com/entry/2020/09/18/222444#P2212R0--Relax-Requirements-for-time_pointclock",
    "tag": ""
  },
  {
    "number": "P2213",
    "title": "Executors Naming",
    "url": "https://wg21.link/P2213",
    "ja": "https://onihusube.hatenablog.com/entry/2021/01/17/005823#P2213R1-Executors-Naming",
    "ja_old": "https://onihusube.hatenablog.com/entry/2020/09/18/222444#P2213R0--Executors-Naming",
    "tag": ""
  },
  {
    "number": "P2214",
    "title": "A Plan for C++23 Ranges",
    "url": "https://wg21.link/P2214",
    "ja": "https://onihusube.hatenablog.com/entry/2022/03/19/224729#P2214R2-A-Plan-for-C23-Ranges",
    "ja_old": "https://onihusube.hatenablog.com/entry/2020/11/02/221657#P2214R0-A-Plan-for-C23-Ranges",
    "tag": ""
  },
  {
    "number": "P2215",
    "title": "\"Undefined behavior\" and the concurrency memory model",
    "url": "https://wg21.link/P2215",
    "ja": "https://onihusube.hatenablog.com/entry/2020/10/09/221025#P2215R1--Undefined-behavior-and-the-concurrency-memory-model",
    "ja_old": "https://onihusube.hatenablog.com/entry/2020/09/18/222444#P2215R0--Undefined-behavior-and-the-concurrency-memory-model",
    "tag": ""
  },
  {
    "number": "P2216",
    "title": "std::format improvements",
    "url": "https://wg21.link/P2216",
    "ja": "https://onihusube.hatenablog.com/entry/2021/03/12/225547#P2216R3-stdformat-improvements",
    "ja_old": "https://onihusube.hatenablog.com/entry/2020/10/09/221025#P2216R0--stdformat-improvements",
    "tag": ""
  },
  {
    "number": "P2217",
    "title": "SG16: Unicode meeting summaries 2020-06-10 through 2020-08-26",
    "url": "https://wg21.link/P2217",
    "ja": "https://onihusube.hatenablog.com/entry/2020/10/09/221025#P2217R0--SG16-Unicode-meeting-summaries-2020-06-10-through-2020-08-26",
    "ja_old": "https://onihusube.hatenablog.com/entry/2020/10/09/221025#P2217R0--SG16-Unicode-meeting-summaries-2020-06-10-through-2020-08-26",
    "tag": ""
  },
  {
    "number": "P2218",
    "title": "More flexible optional::value_or()",
    "url": "https://wg21.link/P2218",
    "ja": "https://onihusube.hatenablog.com/entry/2020/10/09/221025#P2218R0--More-flexible-optionalvalue_or",
    "ja_old": "https://onihusube.hatenablog.com/entry/2020/10/09/221025#P2218R0--More-flexible-optionalvalue_or",
    "tag": ""
  },
  {
    "number": "P2219",
    "title": "P0443 Executors Issues Needing Resolution",
    "url": "https://wg21.link/P2219",
    "ja": "https://onihusube.hatenablog.com/entry/2020/10/09/221025#P2219R0--P0443-Executors-Issues-Needing-Resolution",
    "ja_old": "https://onihusube.hatenablog.com/entry/2020/10/09/221025#P2219R0--P0443-Executors-Issues-Needing-Resolution",
    "tag": ""
  },
  {
    "number": "P2220",
    "title": "redefine properties in P0443",
    "url": "https://wg21.link/P2220",
    "ja": "https://onihusube.hatenablog.com/entry/2020/10/09/221025#P2220R0--redefine-properties-in-P0443",
    "ja_old": "https://onihusube.hatenablog.com/entry/2020/10/09/221025#P2220R0--redefine-properties-in-P0443",
    "tag": ""
  },
  {
    "number": "P2221",
    "title": "define P0443 cpos with tag_invoke",
    "url": "https://wg21.link/P2221",
    "ja": "https://onihusube.hatenablog.com/entry/2020/10/09/221025#P2221R0--define-P0443-cpos-with-tag_invoke",
    "ja_old": "https://onihusube.hatenablog.com/entry/2020/10/09/221025#P2221R0--define-P0443-cpos-with-tag_invoke",
    "tag": ""
  },
  {
    "number": "P2223",
    "title": "Trimming whitespaces before line splicing",
    "url": "https://wg21.link/P2223",
    "ja": "https://onihusube.hatenablog.com/entry/2021/05/14/214016#P2223R2-Trimming-whitespaces-before-line-splicing",
    "ja_old": "https://onihusube.hatenablog.com/entry/2020/10/09/221025#P2223R0--Trimming-whitespaces-before-line-splicing",
    "tag": ""
  },
  {
    "number": "P2224",
    "title": "A Better bulk_schedule",
    "url": "https://wg21.link/P2224",
    "ja": "https://onihusube.hatenablog.com/entry/2020/10/09/221025#P2224R0--A-Better-bulk_schedule",
    "ja_old": "https://onihusube.hatenablog.com/entry/2020/10/09/221025#P2224R0--A-Better-bulk_schedule",
    "tag": ""
  },
  {
    "number": "P2226",
    "title": "A function template to move from an object and reset it to its default constructed state",
    "url": "https://wg21.link/P2226",
    "ja": "https://onihusube.hatenablog.com/entry/2020/11/02/221657#P2226R0-A-function-template-to-move-from-an-object-and-reset-it-to-its-default-constructed-state",
    "ja_old": "https://onihusube.hatenablog.com/entry/2020/11/02/221657#P2226R0-A-function-template-to-move-from-an-object-and-reset-it-to-its-default-constructed-state",
    "tag": ""
  },
  {
    "number": "P2227",
    "title": "Update normative reference to POSIX",
    "url": "https://wg21.link/P2227",
    "ja": "https://onihusube.hatenablog.com/entry/2020/11/02/221657#P2227R0-Update-normative-reference-to-POSIX",
    "ja_old": "https://onihusube.hatenablog.com/entry/2020/11/02/221657#P2227R0-Update-normative-reference-to-POSIX",
    "tag": ""
  },
  {
    "number": "P2228",
    "title": "Slide Deck for P1949 EWG Presentation 20200924",
    "url": "https://wg21.link/P2228",
    "ja": "https://onihusube.hatenablog.com/entry/2020/11/02/221657#P2228R0-Slide-Deck-for-P1949-EWG-Presentation-20200924",
    "ja_old": "https://onihusube.hatenablog.com/entry/2020/11/02/221657#P2228R0-Slide-Deck-for-P1949-EWG-Presentation-20200924",
    "tag": ""
  },
  {
    "number": "P2231",
    "title": "Add further constexpr support for optional/variant",
    "url": "https://wg21.link/P2231",
    "ja": "https://onihusube.hatenablog.com/entry/2021/03/12/225547#P2231R1-Missing-constexpr-in-stdoptional-and-stdvariant",
    "ja_old": "https://onihusube.hatenablog.com/entry/2020/11/02/221657#P2231R0-Add-further-constexpr-support-for-optionalvariant",
    "tag": ""
  },
  {
    "number": "P2232",
    "title": "Zero-Overhead Deterministic Exceptions: Catching Values",
    "url": "https://wg21.link/P2232",
    "ja": "https://onihusube.hatenablog.com/entry/2021/02/11/153333#P2232R0-Zero-Overhead-Deterministic-Exceptions-Catching-Values",
    "ja_old": "https://onihusube.hatenablog.com/entry/2021/02/11/153333#P2232R0-Zero-Overhead-Deterministic-Exceptions-Catching-Values",
    "tag": ""
  },
  {
    "number": "P2233",
    "title": "2020 Fall Library Evolution Polls",
    "url": "https://wg21.link/P2233",
    "ja": "https://onihusube.hatenablog.com/entry/2021/01/17/005823#P2233R3-2020-Fall-Library-Evolution-Polls",
    "ja_old": "https://onihusube.hatenablog.com/entry/2020/11/02/221657#P2233R0-2020-Fall-Library-Evolution-Polls",
    "tag": ""
  },
  {
    "number": "P2234",
    "title": "Consider a UB and IF-NDR Audit",
    "url": "https://wg21.link/P2234",
    "ja": "https://onihusube.hatenablog.com/entry/2021/03/12/225547#P2234R1-Consider-a-UB-and-IF-NDR-Audit",
    "ja_old": "https://onihusube.hatenablog.com/entry/2020/11/02/221657#P2234R0-Consider-a-UB-and-IF-NDR-Audit",
    "tag": ""
  },
  {
    "number": "P2235",
    "title": "Disentangling schedulers and executors",
    "url": "https://wg21.link/P2235",
    "ja": "https://onihusube.hatenablog.com/entry/2020/11/02/221657#P2235R0-Disentangling-schedulers-and-executors",
    "ja_old": "https://onihusube.hatenablog.com/entry/2020/11/02/221657#P2235R0-Disentangling-schedulers-and-executors",
    "tag": ""
  },
  {
    "number": "P2236",
    "title": "C++ Standard Library Issues to be moved in Virtual Plenary, Nov. 2020",
    "url": "https://wg21.link/P2236",
    "ja": "https://onihusube.hatenablog.com/entry/2020/11/02/221657#P2236R0-C-Standard-Library-Issues-to-be-moved-in-Virtual-Plenary-Nov-2020",
    "ja_old": "https://onihusube.hatenablog.com/entry/2020/11/02/221657#P2236R0-C-Standard-Library-Issues-to-be-moved-in-Virtual-Plenary-Nov-2020",
    "tag": ""
  },
  {
    "number": "P2237",
    "title": "Metaprogramming",
    "url": "https://wg21.link/P2237",
    "ja": "https://onihusube.hatenablog.com/entry/2020/11/02/221657#P2237R0-Metaprogramming",
    "ja_old": "https://onihusube.hatenablog.com/entry/2020/11/02/221657#P2237R0-Metaprogramming",
    "tag": ""
  },
  {
    "number": "P2238",
    "title": "Core Language Working Group \"tentatively ready\" issues for the November, 2020 meeting",
    "url": "https://wg21.link/P2238",
    "ja": "https://onihusube.hatenablog.com/entry/2021/01/17/005823#P2238R0-Core-Language-Working-Group-tentatively-ready-issues-for-the-November-2020-meeting",
    "ja_old": "https://onihusube.hatenablog.com/entry/2021/01/17/005823#P2238R0-Core-Language-Working-Group-tentatively-ready-issues-for-the-November-2020-meeting",
    "tag": ""
  },
  {
    "number": "P2242",
    "title": "Non-literal variables (and labels and gotos) in constexpr functions",
    "url": "https://wg21.link/P2242",
    "ja": "https://onihusube.hatenablog.com/entry/2021/08/14/213339#P2242R3-Non-literal-variables-and-labels-and-gotos-in-constexpr-functions",
    "ja_old": "https://onihusube.hatenablog.com/entry/2021/03/12/225547#P2242R1-Non-literal-variables-and-labels-and-gotos-in-constexpr-functions",
    "tag": ""
  },
  {
    "number": "P2244",
    "title": "SG14: Low Latency/Games/Embedded/Finance/Simulation Meeting Minutes",
    "url": "https://wg21.link/P2244",
    "ja": "https://onihusube.hatenablog.com/entry/2021/02/11/153333#P2244R0-SG14-Low-LatencyGamesEmbeddedFinanceSimulation-Meeting-Minutes",
    "ja_old": "https://onihusube.hatenablog.com/entry/2021/02/11/153333#P2244R0-SG14-Low-LatencyGamesEmbeddedFinanceSimulation-Meeting-Minutes",
    "tag": ""
  },
  {
    "number": "P2245",
    "title": "SG19: Machine Learning Meeting Minutes",
    "url": "https://wg21.link/P2245",
    "ja": "https://onihusube.hatenablog.com/entry/2021/02/11/153333#P2245R0-SG19-Machine-Learning-Meeting-Minutes",
    "ja_old": "https://onihusube.hatenablog.com/entry/2021/02/11/153333#P2245R0-SG19-Machine-Learning-Meeting-Minutes",
    "tag": ""
  },
  {
    "number": "P2246",
    "title": "Character encoding of diagnostic text",
    "url": "https://wg21.link/P2246",
    "ja": "https://onihusube.hatenablog.com/entry/2021/02/11/153333#P2246R1-Character-encoding-of-diagnostic-text",
    "ja_old": "https://onihusube.hatenablog.com/entry/2021/02/11/153333#P2246R1-Character-encoding-of-diagnostic-text",
    "tag": ""
  },
  {
    "number": "P2247",
    "title": "2020 Library Evolution Report",
    "url": "https://wg21.link/P2247",
    "ja": "https://onihusube.hatenablog.com/entry/2021/01/17/005823#P2247R1-2020-Library-Evolution-Report",
    "ja_old": "https://onihusube.hatenablog.com/entry/2021/01/17/005823#P2247R1-2020-Library-Evolution-Report",
    "tag": ""
  },
  {
    "number": "P2248",
    "title": "Enabling list-initialization for algorithms",
    "url": "https://wg21.link/P2248",
    "ja": "https://onihusube.hatenablog.com/entry/2022/11/13/233529#P2248R6-Enabling-list-initialization-for-algorithms",
    "ja_old": "https://onihusube.hatenablog.com/entry/2021/01/17/005823#P2248R1-Enabling-list-initialization-for-algorithms",
    "tag": ""
  },
  {
    "number": "P2249",
    "title": "Mixed comparisons for smart pointers",
    "url": "https://wg21.link/P2249",
    "ja": "https://onihusube.hatenablog.com/entry/2022/02/19/181101#P2249R4-Mixed-comparisons-for-smart-pointers",
    "ja_old": "https://onihusube.hatenablog.com/entry/2021/03/12/225547#P2249R0-Mixed-comparisons-for-smart-pointers",
    "tag": ""
  },
  {
    "number": "P2250",
    "title": "Scheduler vs Executor",
    "url": "https://wg21.link/P2250",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P2251",
    "title": "Require span & basic_string_view to be Trivially Copyable",
    "url": "https://wg21.link/P2251",
    "ja": "https://onihusube.hatenablog.com/entry/2021/05/14/214016#P2251R1-Require-span--basic_string_view-to-be-Trivially-Copyable",
    "ja_old": "https://onihusube.hatenablog.com/entry/2021/05/14/214016#P2251R1-Require-span--basic_string_view-to-be-Trivially-Copyable",
    "tag": ""
  },
  {
    "number": "P2253",
    "title": "SG16: Unicode meeting summaries 2020-09-09 through 2020-11-11",
    "url": "https://wg21.link/P2253",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P2254",
    "title": "Executors Beyond Invocables",
    "url": "https://wg21.link/P2254",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P2255",
    "title": "A type trait to detect reference binding to temporary",
    "url": "https://wg21.link/P2255",
    "ja": "https://onihusube.hatenablog.com/entry/2021/05/14/214016#P2255R1-A-type-trait-to-detect-reference-binding-to-temporary",
    "ja_old": "https://onihusube.hatenablog.com/entry/2021/05/14/214016#P2255R1-A-type-trait-to-detect-reference-binding-to-temporary",
    "tag": ""
  },
  {
    "number": "P2257",
    "title": "Blocking is an insufficient description for senders and receivers",
    "url": "https://wg21.link/P2257",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P2259",
    "title": "Repairing input range adaptors and counted_iterator",
    "url": "https://wg21.link/P2259",
    "ja": "https://onihusube.hatenablog.com/entry/2021/02/11/153333#P2259R1-Repairing-input-range-adaptors-and-counted_iterator",
    "ja_old": "https://onihusube.hatenablog.com/entry/2021/02/11/153333#P2259R1-Repairing-input-range-adaptors-and-counted_iterator",
    "tag": ""
  },
  {
    "number": "P2260",
    "title": "WG21 2020-11 Virtual Meeting Record of Discussion",
    "url": "https://wg21.link/P2260",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P2262",
    "title": "2020 Fall Library Evolution Poll Outcomes",
    "url": "https://wg21.link/P2262",
    "ja": "https://onihusube.hatenablog.com/entry/2021/01/17/005823#P2262R0-2020-Fall-Library-Evolution-Poll-Outcomes",
    "ja_old": "https://onihusube.hatenablog.com/entry/2021/01/17/005823#P2262R0-2020-Fall-Library-Evolution-Poll-Outcomes",
    "tag": ""
  },
  {
    "number": "P2263",
    "title": "A call for a WG21 managed chat service",
    "url": "https://wg21.link/P2263",
    "ja": "https://onihusube.hatenablog.com/entry/2022/11/13/233529#P2263R1-A-call-for-a-WG21-managed-chat-service",
    "ja_old": "https://onihusube.hatenablog.com/entry/2021/01/17/005823#P2263R0-A-call-for-a-WG21-managed-chat-service",
    "tag": ""
  },
  {
    "number": "P2264",
    "title": "Make assert() macro user friendly for C and C++",
    "url": "https://wg21.link/P2264",
    "ja": "https://onihusube.hatenablog.com/entry/2022/09/04/141015#P2264R4-Make-assert-macro-user-friendly-for-C-and-C",
    "ja_old": "https://onihusube.hatenablog.com/entry/2021/01/17/005823#P2264R0-Make-assert-macro-user-friendly-for-C-and-C",
    "tag": ""
  },
  {
    "number": "P2265",
    "title": "Renaming any_invocable",
    "url": "https://wg21.link/P2265",
    "ja": "https://onihusube.hatenablog.com/entry/2021/05/14/214016#P2265R1-Renaming-any_invocable",
    "ja_old": "https://onihusube.hatenablog.com/entry/2021/01/17/005823#P2265R0-Renaming-any_invocable",
    "tag": ""
  },
  {
    "number": "P2266",
    "title": "Simpler implicit move",
    "url": "https://wg21.link/P2266",
    "ja": "https://onihusube.hatenablog.com/entry/2022/05/08/195618#P2266R3-Simpler-implicit-move",
    "ja_old": "https://onihusube.hatenablog.com/entry/2021/02/11/153333#P2266R0-Simpler-implicit-move",
    "tag": ""
  },
  {
    "number": "P2268",
    "title": "Freestanding Roadmap",
    "url": "https://wg21.link/P2268",
    "ja": "https://onihusube.hatenablog.com/entry/2021/01/17/005823#P2268R0-Freestanding-Roadmap",
    "ja_old": "https://onihusube.hatenablog.com/entry/2021/01/17/005823#P2268R0-Freestanding-Roadmap",
    "tag": ""
  },
  {
    "number": "P2272",
    "title": "Safety & Security Review Board",
    "url": "https://wg21.link/P2272",
    "ja": "https://onihusube.hatenablog.com/entry/2021/01/17/005823#P2272R0-Safety--Security-Review-Board",
    "ja_old": "https://onihusube.hatenablog.com/entry/2021/01/17/005823#P2272R0-Safety--Security-Review-Board",
    "tag": ""
  },
  {
    "number": "P2273",
    "title": "Making std::unique_ptr constexpr",
    "url": "https://wg21.link/P2273",
    "ja": "https://onihusube.hatenablog.com/entry/2021/12/11/220126#P2273R3-Making-stdunique_ptr-constexpr",
    "ja_old": "https://onihusube.hatenablog.com/entry/2021/01/17/005823#P2273R0-Making-stdunique_ptr-constexpr",
    "tag": ""
  },
  {
    "number": "P2274",
    "title": "C and C++ Compatibility Study Group",
    "url": "https://wg21.link/P2274",
    "ja": "https://onihusube.hatenablog.com/entry/2021/01/17/005823#P2274R0-C-and-C-Compatibility-Study-Group",
    "ja_old": "https://onihusube.hatenablog.com/entry/2021/01/17/005823#P2274R0-C-and-C-Compatibility-Study-Group",
    "tag": ""
  },
  {
    "number": "P2276",
    "title": "Fix cbegin",
    "url": "https://wg21.link/P2276",
    "ja": "https://onihusube.hatenablog.com/entry/2021/10/03/193523#P2276R1-Fix-cbegin",
    "ja_old": "https://onihusube.hatenablog.com/entry/2021/02/11/153333#P2276R0-Fix-stdcbegin-stdrangescbegin-and-cbegin-for-span-fix-of-wrong-fix-of-lwg3320",
    "tag": ""
  },
  {
    "number": "P2277",
    "title": "Packs outside of Templates",
    "url": "https://wg21.link/P2277",
    "ja": "https://onihusube.hatenablog.com/entry/2021/02/11/153333#P2277R0-Packs-outside-of-Templates",
    "ja_old": "https://onihusube.hatenablog.com/entry/2021/02/11/153333#P2277R0-Packs-outside-of-Templates",
    "tag": ""
  },
  {
    "number": "P2278",
    "title": "cbegin should always return a constant iterator",
    "url": "https://wg21.link/P2278",
    "ja": "https://onihusube.hatenablog.com/entry/2022/07/09/160343#P2278R4-cbegin-should-always-return-a-constant-iterator",
    "ja_old": "https://onihusube.hatenablog.com/entry/2021/02/11/153333#P2278R0-cbegin-should-always-return-a-constant-iterator",
    "tag": ""
  },
  {
    "number": "P2279",
    "title": "We need a language mechanism for customization points",
    "url": "https://wg21.link/P2279",
    "ja": "https://onihusube.hatenablog.com/entry/2021/02/11/153333#P2279R0-We-need-a-language-mechanism-for-customization-points",
    "ja_old": "https://onihusube.hatenablog.com/entry/2021/02/11/153333#P2279R0-We-need-a-language-mechanism-for-customization-points",
    "tag": ""
  },
  {
    "number": "P2280",
    "title": "Using unknown references in constant expressions",
    "url": "https://wg21.link/P2280",
    "ja": "https://onihusube.hatenablog.com/entry/2022/05/08/195618#P2280R4-Using-unknown-references-in-constant-expressions",
    "ja_old": "https://onihusube.hatenablog.com/entry/2021/02/11/153333#P2280R0-Using-unknown-references-in-constant-expressions",
    "tag": ""
  },
  {
    "number": "P2281",
    "title": "Clarifying range adaptor objects",
    "url": "https://wg21.link/P2281",
    "ja": "https://onihusube.hatenablog.com/entry/2021/03/12/225547#P2281R1-Clarifying-range-adaptor-objects",
    "ja_old": "https://onihusube.hatenablog.com/entry/2021/02/11/153333#P2281R0-Clarifying-range-adaptor-objects",
    "tag": ""
  },
  {
    "number": "P2283",
    "title": "constexpr for specialized memory algorithms",
    "url": "https://wg21.link/P2283",
    "ja": "https://onihusube.hatenablog.com/entry/2022/01/10/235544#P2283R2-constexpr-for-specialized-memory-algorithms",
    "ja_old": "https://onihusube.hatenablog.com/entry/2021/02/11/153333#P2283R0-constexpr-for-specialized-memory-algorithms",
    "tag": ""
  },
  {
    "number": "P2285",
    "title": "Are default function arguments in the immediate context?",
    "url": "https://wg21.link/P2285",
    "ja": "https://onihusube.hatenablog.com/entry/2021/02/11/153333#P2285R0-Are-default-function-arguments-in-the-immediate-context",
    "ja_old": "https://onihusube.hatenablog.com/entry/2021/02/11/153333#P2285R0-Are-default-function-arguments-in-the-immediate-context",
    "tag": ""
  },
  {
    "number": "P2286",
    "title": "Formatting Ranges",
    "url": "https://wg21.link/P2286",
    "ja": "https://onihusube.hatenablog.com/entry/2022/06/11/191943#P2286R8-Formatting-Ranges",
    "ja_old": "https://onihusube.hatenablog.com/entry/2021/02/11/153333#P2286R0-Formatting-Ranges",
    "tag": ""
  },
  {
    "number": "P2287",
    "title": "Designated-initializers for base classes",
    "url": "https://wg21.link/P2287",
    "ja": "https://onihusube.hatenablog.com/entry/2021/03/12/225547#P2287R1-Designated-initializers-for-base-classes",
    "ja_old": "https://onihusube.hatenablog.com/entry/2021/02/11/153333#P2287R0-Designated-initializers-for-base-classes",
    "tag": ""
  },
  {
    "number": "P2289",
    "title": "2021 Winter Library Evolution Polls",
    "url": "https://wg21.link/P2289",
    "ja": "https://onihusube.hatenablog.com/entry/2021/03/12/225547#P2289R0-2021-Winter-Library-Evolution-Polls",
    "ja_old": "https://onihusube.hatenablog.com/entry/2021/03/12/225547#P2289R0-2021-Winter-Library-Evolution-Polls",
    "tag": ""
  },
  {
    "number": "P2290",
    "title": "Delimited escape sequences",
    "url": "https://wg21.link/P2290",
    "ja": "https://onihusube.hatenablog.com/entry/2022/04/02/175835#P2290R3-Delimited-escape-sequences",
    "ja_old": "https://onihusube.hatenablog.com/entry/2021/03/12/225547#P2290R0-Delimited-escape-sequences",
    "tag": ""
  },
  {
    "number": "P2291",
    "title": "Add Constexpr Modifiers to Functions to_chars and from_chars for Integral Types in  Header",
    "url": "https://wg21.link/P2291",
    "ja": "https://onihusube.hatenablog.com/entry/2021/09/03/230045#P2291R2-Add-Constexpr-Modifiers-to-Functions-to_chars-and-from_chars-for-Integral-Types-in-Header",
    "ja_old": "https://onihusube.hatenablog.com/entry/2021/03/12/225547#P2291R0-Add-Constexpr-Modifiers-to-Functions-to_chars-and-from_chars-for-Integral-Types-in-Header",
    "tag": ""
  },
  {
    "number": "P2295",
    "title": "Support for UTF-8 as a portable source file encoding",
    "url": "https://wg21.link/P2295",
    "ja": "https://onihusube.hatenablog.com/entry/2022/08/11/193828#P2295R6-Support-for-UTF-8-as-a-portable-source-file-encoding",
    "ja_old": "https://onihusube.hatenablog.com/entry/2021/03/12/225547#P2295R0-Correct-UTF-8-handling-during-phase-1-of-translation",
    "tag": ""
  },
  {
    "number": "P2297",
    "title": "Wording improvements for encodings and character sets",
    "url": "https://wg21.link/P2297",
    "ja": "https://onihusube.hatenablog.com/entry/2021/03/12/225547#P2297R0-Wording-improvements-for-encodings-and-character-sets",
    "ja_old": "https://onihusube.hatenablog.com/entry/2021/03/12/225547#P2297R0-Wording-improvements-for-encodings-and-character-sets",
    "tag": ""
  },
  {
    "number": "P2299",
    "title": "`mdspan`s of All Dynamic Extents",
    "url": "https://wg21.link/P2299",
    "ja": "https://onihusube.hatenablog.com/entry/2021/07/12/182757#P2299R3-mdspans-of-All-Dynamic-Extents",
    "ja_old": "https://onihusube.hatenablog.com/entry/2021/06/13/165215#P2299R1-mdspan-and-CTAD",
    "tag": ""
  },
  {
    "number": "P2300",
    "title": "`std::execution`",
    "url": "https://wg21.link/P2300",
    "ja": "https://onihusube.hatenablog.com/entry/2023/03/19/184146#P2300R6-stdexecution",
    "ja_old": "https://onihusube.hatenablog.com/entry/2021/07/12/182757#P2300R0-stdexecution",
    "tag": ""
  },
  {
    "number": "P2301",
    "title": "Add a pmr alias for std::stacktrace",
    "url": "https://wg21.link/P2301",
    "ja": "https://onihusube.hatenablog.com/entry/2021/07/12/182757#P2301R1-Add-a-pmr-alias-for-stdstacktrace",
    "ja_old": "https://onihusube.hatenablog.com/entry/2021/03/12/225547#P2301R0-Add-a-pmr-alias-for-stdstacktrace",
    "tag": ""
  },
  {
    "number": "P2302",
    "title": "std::ranges::contains",
    "url": "https://wg21.link/P2302",
    "ja": "https://onihusube.hatenablog.com/entry/2022/05/08/195618#P2302R4-stdrangescontains",
    "ja_old": "https://onihusube.hatenablog.com/entry/2021/03/12/225547#P2302R0-Prefer-stdrangescontains-over-stdbasic_string_viewcontains",
    "tag": ""
  },
  {
    "number": "P2303",
    "title": "Basic lambdas for C",
    "url": "https://wg21.link/P2303",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P2304",
    "title": "Improve type generic programming",
    "url": "https://wg21.link/P2304",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P2305",
    "title": "Type inference for object definitions",
    "url": "https://wg21.link/P2305",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P2306",
    "title": "Type-generic lambdas",
    "url": "https://wg21.link/P2306",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P2307",
    "title": "Lvalue closures",
    "url": "https://wg21.link/P2307",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P2308",
    "title": "Template parameter initialization",
    "url": "https://wg21.link/P2308",
    "ja": "https://onihusube.hatenablog.com/entry/2023/03/19/184146#P2308R0-Template-parameter-initialization",
    "ja_old": "https://onihusube.hatenablog.com/entry/2023/03/19/184146#P2308R0-Template-parameter-initialization",
    "tag": ""
  },
  {
    "number": "P2309",
    "title": "A common C/C++ core specification",
    "url": "https://wg21.link/P2309",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P2310",
    "title": "Revise spelling of keywords",
    "url": "https://wg21.link/P2310",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P2311",
    "title": "Make false and true first-class language features",
    "url": "https://wg21.link/P2311",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P2312",
    "title": "Introduce the nullptr constant",
    "url": "https://wg21.link/P2312",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P2313",
    "title": "Core Language Working Group \"tentatively ready\" issues for the February, 2021 meeting",
    "url": "https://wg21.link/P2313",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P2314",
    "title": "Character sets and encodings",
    "url": "https://wg21.link/P2314",
    "ja": "https://onihusube.hatenablog.com/entry/2021/10/03/193523#P2314R3-Character-sets-and-encodings",
    "ja_old": "https://onihusube.hatenablog.com/entry/2021/03/12/225547#P2314R0-Character-sets-and-encodings",
    "tag": ""
  },
  {
    "number": "P2315",
    "title": "C++ Standard Library Issues to be moved in Virtual Plenary, Feb. 2021",
    "url": "https://wg21.link/P2315",
    "ja": "https://onihusube.hatenablog.com/entry/2021/03/12/225547#P2315R0-C-Standard-Library-Issues-to-be-moved-in-Virtual-Plenary-Feb-2021",
    "ja_old": "https://onihusube.hatenablog.com/entry/2021/03/12/225547#P2315R0-C-Standard-Library-Issues-to-be-moved-in-Virtual-Plenary-Feb-2021",
    "tag": ""
  },
  {
    "number": "P2316",
    "title": "Consistent character literal encoding",
    "url": "https://wg21.link/P2316",
    "ja": "https://onihusube.hatenablog.com/entry/2021/10/03/193523#P2316R2-Consistent-character-literal-encoding",
    "ja_old": "https://onihusube.hatenablog.com/entry/2021/03/12/225547#P2316R0-Consistent-character-literal-encoding",
    "tag": ""
  },
  {
    "number": "P2317",
    "title": "C++ - An Invisible foundation of everything",
    "url": "https://wg21.link/P2317",
    "ja": "https://onihusube.hatenablog.com/entry/2021/03/12/225547#P2317R0-C---An-Invisible-foundation-of-everything",
    "ja_old": "https://onihusube.hatenablog.com/entry/2021/03/12/225547#P2317R0-C---An-Invisible-foundation-of-everything",
    "tag": ""
  },
  {
    "number": "P2318",
    "title": "A Provenance-aware Memory Object Model for C",
    "url": "https://wg21.link/P2318",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P2320",
    "title": "The Syntax of Static Reflection",
    "url": "https://wg21.link/P2320",
    "ja": "https://onihusube.hatenablog.com/entry/2021/03/12/225547#P2320R0-The-Syntax-of-Static-Reflection",
    "ja_old": "https://onihusube.hatenablog.com/entry/2021/03/12/225547#P2320R0-The-Syntax-of-Static-Reflection",
    "tag": ""
  },
  {
    "number": "P2321",
    "title": "zip",
    "url": "https://wg21.link/P2321",
    "ja": "https://onihusube.hatenablog.com/entry/2021/07/12/182757#P2321R2-zip",
    "ja_old": "https://onihusube.hatenablog.com/entry/2021/03/12/225547#P2321R0-zip",
    "tag": ""
  },
  {
    "number": "P2322",
    "title": "ranges::fold",
    "url": "https://wg21.link/P2322",
    "ja": "https://onihusube.hatenablog.com/entry/2022/05/08/195618#P2322R6-rangesfold",
    "ja_old": "https://onihusube.hatenablog.com/entry/2021/03/12/225547#P2322R0-rangesfold",
    "tag": ""
  },
  {
    "number": "P2323",
    "title": "maybe_unused attribute for labels",
    "url": "https://wg21.link/P2323",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P2324",
    "title": "Labels at the end of compound statements (C compatibility)",
    "url": "https://wg21.link/P2324",
    "ja": "https://onihusube.hatenablog.com/entry/2022/02/19/181101#P2324R2-Labels-at-the-end-of-compound-statements-C-compatibility",
    "ja_old": "https://onihusube.hatenablog.com/entry/2021/03/12/225547#P2324R0-Labels-at-the-end-of-compound-statements-C-compatibility",
    "tag": ""
  },
  {
    "number": "P2325",
    "title": "Views should not be required to be default constructible",
    "url": "https://wg21.link/P2325",
    "ja": "https://onihusube.hatenablog.com/entry/2021/06/13/165215#P2325R3-Views-should-not-be-required-to-be-default-constructible",
    "ja_old": "https://onihusube.hatenablog.com/entry/2021/03/12/225547#P2325R0-Views-should-not-be-required-to-be-default-constructible",
    "tag": ""
  },
  {
    "number": "P2327",
    "title": "De-deprecating volatile compound operations",
    "url": "https://wg21.link/P2327",
    "ja": "https://onihusube.hatenablog.com/entry/2021/05/14/214016#P2327R0-De-deprecating-volatile-compound-assignment",
    "ja_old": "https://onihusube.hatenablog.com/entry/2021/05/14/214016#P2327R0-De-deprecating-volatile-compound-assignment",
    "tag": ""
  },
  {
    "number": "P2328",
    "title": "join_view should join all views of ranges",
    "url": "https://wg21.link/P2328",
    "ja": "https://onihusube.hatenablog.com/entry/2021/06/13/165215#P2328R1-join_view-should-join-all-views-of-ranges",
    "ja_old": "https://onihusube.hatenablog.com/entry/2021/06/13/165215#P2328R1-join_view-should-join-all-views-of-ranges",
    "tag": ""
  },
  {
    "number": "P2329",
    "title": "Move, Copy, and Locality at Scale",
    "url": "https://wg21.link/P2329",
    "ja": "https://onihusube.hatenablog.com/entry/2022/01/10/235544#P2329R0-Move-Copy-and-Locality-at-Scale",
    "ja_old": "https://onihusube.hatenablog.com/entry/2022/01/10/235544#P2329R0-Move-Copy-and-Locality-at-Scale",
    "tag": ""
  },
  {
    "number": "P2330",
    "title": "WG21 2021-02 Virtual Meeting Record of Discussion",
    "url": "https://wg21.link/P2330",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P2331",
    "title": "Unsequenced functions",
    "url": "https://wg21.link/P2331",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P2332",
    "title": "Establishing std::hive as replacement name for the proposed std::colony container",
    "url": "https://wg21.link/P2332",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P2333",
    "title": "2021 Winter Library Evolution Poll Outcomes",
    "url": "https://wg21.link/P2333",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P2334",
    "title": "Add support for preprocessing directives elifdef and elifndef",
    "url": "https://wg21.link/P2334",
    "ja": "https://onihusube.hatenablog.com/entry/2021/06/13/165215#P2334R1-Add-support-for-preprocessing-directives-elifdef-and-elifndef",
    "ja_old": "https://onihusube.hatenablog.com/entry/2021/06/13/165215#P2334R1-Add-support-for-preprocessing-directives-elifdef-and-elifndef",
    "tag": ""
  },
  {
    "number": "P2337",
    "title": "Less constexpr for <cmath>",
    "url": "https://wg21.link/P2337",
    "ja": "https://onihusube.hatenablog.com/entry/2021/05/14/214016#P2337R0-Less-constexpr-for-cmath",
    "ja_old": "https://onihusube.hatenablog.com/entry/2021/05/14/214016#P2337R0-Less-constexpr-for-cmath",
    "tag": ""
  },
  {
    "number": "P2338",
    "title": "Freestanding Library: Character primitives and the C library",
    "url": "https://wg21.link/P2338",
    "ja": "https://onihusube.hatenablog.com/entry/2023/03/19/184146#P2338R4-Freestanding-Library-Character-primitives-and-the-C-library",
    "ja_old": "https://onihusube.hatenablog.com/entry/2021/08/14/213339#P2338R1-Freestanding-Library-Character-primitives-and-the-C-library",
    "tag": ""
  },
  {
    "number": "P2339",
    "title": "Contract violation handlers",
    "url": "https://wg21.link/P2339",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P2340",
    "title": "Clarifying the status of the \"C headers\"",
    "url": "https://wg21.link/P2340",
    "ja": "https://onihusube.hatenablog.com/entry/2021/07/12/182757#P2340R1-Clarifying-the-status-of-the-C-headers",
    "ja_old": "https://onihusube.hatenablog.com/entry/2021/07/12/182757#P2340R1-Clarifying-the-status-of-the-C-headers",
    "tag": ""
  },
  {
    "number": "P2342",
    "title": "For a Few Punctuators More",
    "url": "https://wg21.link/P2342",
    "ja": "https://onihusube.hatenablog.com/entry/2021/05/14/214016#P2342R0-For-a-Few-Punctuators-More",
    "ja_old": "https://onihusube.hatenablog.com/entry/2021/05/14/214016#P2342R0-For-a-Few-Punctuators-More",
    "tag": ""
  },
  {
    "number": "P2345",
    "title": "Relaxing Requirements of Moved-From Objects",
    "url": "https://wg21.link/P2345",
    "ja": "https://onihusube.hatenablog.com/entry/2021/05/14/214016#P2345R0-Relaxing-Requirements-of-Moved-From-Objects",
    "ja_old": "https://onihusube.hatenablog.com/entry/2021/05/14/214016#P2345R0-Relaxing-Requirements-of-Moved-From-Objects",
    "tag": ""
  },
  {
    "number": "P2347",
    "title": "Argument type deduction for non-trailing parameter packs",
    "url": "https://wg21.link/P2347",
    "ja": "https://onihusube.hatenablog.com/entry/2021/08/14/213339#P2347R1-Argument-type-deduction-for-non-trailing-parameter-packs",
    "ja_old": "https://onihusube.hatenablog.com/entry/2021/07/12/182757#P2347R0-Argument-type-deduction-for-non-trailing-parameter-packs",
    "tag": ""
  },
  {
    "number": "P2348",
    "title": "Whitespaces Wording Revamp",
    "url": "https://wg21.link/P2348",
    "ja": "https://onihusube.hatenablog.com/entry/2022/10/09/021557#P2348R3-Whitespaces-Wording-Revamp",
    "ja_old": "https://onihusube.hatenablog.com/entry/2021/05/14/214016#P2348R0-Whitespaces-Wording-Revamp",
    "tag": ""
  },
  {
    "number": "P2350",
    "title": "constexpr class",
    "url": "https://wg21.link/P2350",
    "ja": "https://onihusube.hatenablog.com/entry/2021/08/14/213339#P2350R1-constexpr-class",
    "ja_old": "https://onihusube.hatenablog.com/entry/2021/05/14/214016#P2350R0-constexpr-class",
    "tag": ""
  },
  {
    "number": "P2351",
    "title": "Mark all library static cast wrappers as [[nodiscard]]",
    "url": "https://wg21.link/P2351",
    "ja": "https://onihusube.hatenablog.com/entry/2021/06/13/165215#P2351R0-Mark-all-library-static-cast-wrappers-as-nodiscard",
    "ja_old": "https://onihusube.hatenablog.com/entry/2021/06/13/165215#P2351R0-Mark-all-library-static-cast-wrappers-as-nodiscard",
    "tag": ""
  },
  {
    "number": "P2352",
    "title": "SG16: Unicode meeting summaries 2020-12-09 through 2021-03-24",
    "url": "https://wg21.link/P2352",
    "ja": "https://onihusube.hatenablog.com/entry/2021/05/14/214016#P2352R0-SG16-Unicode-meeting-summaries-2020-12-09-through-2021-03-24",
    "ja_old": "https://onihusube.hatenablog.com/entry/2021/05/14/214016#P2352R0-SG16-Unicode-meeting-summaries-2020-12-09-through-2021-03-24",
    "tag": ""
  },
  {
    "number": "P2353",
    "title": "Metaprograms and fragments are needed in comma-separated contexts",
    "url": "https://wg21.link/P2353",
    "ja": "https://onihusube.hatenablog.com/entry/2021/05/14/214016#P2353R0-Metaprograms-and-fragments-are-needed-in-comma-separated-contexts",
    "ja_old": "https://onihusube.hatenablog.com/entry/2021/05/14/214016#P2353R0-Metaprograms-and-fragments-are-needed-in-comma-separated-contexts",
    "tag": ""
  },
  {
    "number": "P2355",
    "title": "Postfix fold expressions",
    "url": "https://wg21.link/P2355",
    "ja": "https://onihusube.hatenablog.com/entry/2023/03/19/184146#P2355R1-Postfix-fold-expressions",
    "ja_old": "https://onihusube.hatenablog.com/entry/2021/05/14/214016#P2355R0-Postfix-fold-expressions",
    "tag": ""
  },
  {
    "number": "P2356",
    "title": "Implementing Factory builder on top of P2320",
    "url": "https://wg21.link/P2356",
    "ja": "https://onihusube.hatenablog.com/entry/2021/05/14/214016#P2356R0-Implementing-Factory-builder-on-top-of-P2320",
    "ja_old": "https://onihusube.hatenablog.com/entry/2021/05/14/214016#P2356R0-Implementing-Factory-builder-on-top-of-P2320",
    "tag": ""
  },
  {
    "number": "P2358",
    "title": "Defining Contracts",
    "url": "https://wg21.link/P2358",
    "ja": "https://onihusube.hatenablog.com/entry/2021/05/14/214016#P2358R0-Defining-Contracts",
    "ja_old": "https://onihusube.hatenablog.com/entry/2021/05/14/214016#P2358R0-Defining-Contracts",
    "tag": ""
  },
  {
    "number": "P2360",
    "title": "Extend init-statement to allow alias-declaration",
    "url": "https://wg21.link/P2360",
    "ja": "https://onihusube.hatenablog.com/entry/2021/05/14/214016#P2360R0-Extend-init-statement-to-allow-alias-declaration",
    "ja_old": "https://onihusube.hatenablog.com/entry/2021/05/14/214016#P2360R0-Extend-init-statement-to-allow-alias-declaration",
    "tag": ""
  },
  {
    "number": "P2361",
    "title": "Unevaluated strings",
    "url": "https://wg21.link/P2361",
    "ja": "https://onihusube.hatenablog.com/entry/2023/03/19/184146#P2361R6-Unevaluated-strings",
    "ja_old": "https://onihusube.hatenablog.com/entry/2021/05/14/214016#P2361R0-Unevaluated-string-literals",
    "tag": ""
  },
  {
    "number": "P2362",
    "title": "Remove non-encodable wide character literals and multicharacter wide character literals",
    "url": "https://wg21.link/P2362",
    "ja": "https://onihusube.hatenablog.com/entry/2021/10/03/193523#P2362R3-Remove-non-encodable-wide-character-literals-and-multicharacter-wide-character-literals",
    "ja_old": "https://onihusube.hatenablog.com/entry/2021/05/14/214016#P2362R0-Make-obfuscating-wide-character-literals-ill-formed",
    "tag": ""
  },
  {
    "number": "P2363",
    "title": "Extending associative containers with the remaining heterogeneous overloads",
    "url": "https://wg21.link/P2363",
    "ja": "https://onihusube.hatenablog.com/entry/2023/03/19/184146#P2363R5-Extending-associative-containers-with-the-remaining-heterogeneous-overloads",
    "ja_old": "https://onihusube.hatenablog.com/entry/2021/05/14/214016#P2363R0-Extending-associative-containers-with-the-remaining-heterogeneous-overloads",
    "tag": ""
  },
  {
    "number": "P2367",
    "title": "Remove misuses of list-initialization from Clause 24",
    "url": "https://wg21.link/P2367",
    "ja": "https://onihusube.hatenablog.com/entry/2021/06/13/165215#P2367R0-Remove-misuses-of-list-initialization-from-Clause-24",
    "ja_old": "https://onihusube.hatenablog.com/entry/2021/06/13/165215#P2367R0-Remove-misuses-of-list-initialization-from-Clause-24",
    "tag": ""
  },
  {
    "number": "P2368",
    "title": "2021 Spring Library Evolution Polls",
    "url": "https://wg21.link/P2368",
    "ja": "https://onihusube.hatenablog.com/entry/2021/07/12/182757#P2368R1-2021-Spring-Library-Evolution-Polls",
    "ja_old": "https://onihusube.hatenablog.com/entry/2021/06/13/165215#P2368R0-2020-Winter-Library-Evolution-Polls",
    "tag": ""
  },
  {
    "number": "P2370",
    "title": "Stacktrace from exception",
    "url": "https://wg21.link/P2370",
    "ja": "https://onihusube.hatenablog.com/entry/2022/02/19/181101#P2370R2-Stacktrace-from-exception",
    "ja_old": "https://onihusube.hatenablog.com/entry/2021/07/12/182757#P2370R0-Stacktrace-from-exception",
    "tag": ""
  },
  {
    "number": "P2372",
    "title": "Fixing locale handling in chrono formatters",
    "url": "https://wg21.link/P2372",
    "ja": "https://onihusube.hatenablog.com/entry/2021/10/03/193523#P2372R3-Fixing-locale-handling-in-chrono-formatters",
    "ja_old": "https://onihusube.hatenablog.com/entry/2021/06/13/165215#P2372R0-Fixing-locale-handling-in-chrono-formatters",
    "tag": ""
  },
  {
    "number": "P2374",
    "title": "views::cartesian_product",
    "url": "https://wg21.link/P2374",
    "ja": "https://onihusube.hatenablog.com/entry/2022/08/11/193828#P2374R4-viewscartesian_product",
    "ja_old": "https://onihusube.hatenablog.com/entry/2021/06/13/165215#P2374R0-viewscartesian_product",
    "tag": ""
  },
  {
    "number": "P2375",
    "title": "Generalisation of nth_element to a range of nths",
    "url": "https://wg21.link/P2375",
    "ja": "https://onihusube.hatenablog.com/entry/2022/02/19/181101#P2375R1-Generalisation-of-nth_element-to-a-range-of-nths",
    "ja_old": "https://onihusube.hatenablog.com/entry/2021/06/13/165215#P2375R0-Generalisation-of-nth_element-to-a-range-of-nths",
    "tag": ""
  },
  {
    "number": "P2376",
    "title": "Comments on Simple Statistical Functions (p1708r4): Contracts, Exceptions and Special cases",
    "url": "https://wg21.link/P2376",
    "ja": "https://onihusube.hatenablog.com/entry/2021/06/13/165215#P2376R0-Comments-on-Simple-Statistical-Functions-p1708r4-Contracts-Exceptions-and-Special-cases",
    "ja_old": "https://onihusube.hatenablog.com/entry/2021/06/13/165215#P2376R0-Comments-on-Simple-Statistical-Functions-p1708r4-Contracts-Exceptions-and-Special-cases",
    "tag": ""
  },
  {
    "number": "P2377",
    "title": "[[nodiscard]] in the Standard Library: Clause 23 Iterators library",
    "url": "https://wg21.link/P2377",
    "ja": "https://onihusube.hatenablog.com/entry/2021/06/13/165215#P2377R0-nodiscard-in-the-Standard-Library-Clause-23-Iterators-library",
    "ja_old": "https://onihusube.hatenablog.com/entry/2021/06/13/165215#P2377R0-nodiscard-in-the-Standard-Library-Clause-23-Iterators-library",
    "tag": ""
  },
  {
    "number": "P2378",
    "title": "Properly define blocks as part of the grammar",
    "url": "https://wg21.link/P2378",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P2380",
    "title": "reference_wrapper Associations",
    "url": "https://wg21.link/P2380",
    "ja": "https://onihusube.hatenablog.com/entry/2021/07/12/182757#P2380R1-reference_wrapper-Associations",
    "ja_old": "https://onihusube.hatenablog.com/entry/2021/06/13/165215#P2380R0-reference_wrapper-Associations",
    "tag": ""
  },
  {
    "number": "P2381",
    "title": "Pattern Matching with Exception Handling",
    "url": "https://wg21.link/P2381",
    "ja": "https://onihusube.hatenablog.com/entry/2021/06/13/165215#P2381R0-Pattern-Matching-with-Exception-Handling",
    "ja_old": "https://onihusube.hatenablog.com/entry/2021/06/13/165215#P2381R0-Pattern-Matching-with-Exception-Handling",
    "tag": ""
  },
  {
    "number": "P2382",
    "title": "Presentation Slides for P2123R0",
    "url": "https://wg21.link/P2382",
    "ja": "https://onihusube.hatenablog.com/entry/2021/06/13/165215#P2382R0-Presentation-Slides-for-P2123R0",
    "ja_old": "https://onihusube.hatenablog.com/entry/2021/06/13/165215#P2382R0-Presentation-Slides-for-P2123R0",
    "tag": ""
  },
  {
    "number": "P2384",
    "title": "2021 Spring Library Evolution Poll Outcomes",
    "url": "https://wg21.link/P2384",
    "ja": "https://onihusube.hatenablog.com/entry/2021/07/12/182757#P2384R0-2021-Spring-Library-Evolution-Poll-Outcomes",
    "ja_old": "https://onihusube.hatenablog.com/entry/2021/07/12/182757#P2384R0-2021-Spring-Library-Evolution-Poll-Outcomes",
    "tag": ""
  },
  {
    "number": "P2385",
    "title": "C++ Standard Library Issues to be moved in Virtual Plenary, June 2021",
    "url": "https://wg21.link/P2385",
    "ja": "https://onihusube.hatenablog.com/entry/2021/07/12/182757#P2385R0-C-Standard-Library-Issues-to-be-moved-in-Virtual-Plenary-June-2021",
    "ja_old": "https://onihusube.hatenablog.com/entry/2021/07/12/182757#P2385R0-C-Standard-Library-Issues-to-be-moved-in-Virtual-Plenary-June-2021",
    "tag": ""
  },
  {
    "number": "P2386",
    "title": "Core Language Working Group \"ready\" Issues for the June, 2021 meeting",
    "url": "https://wg21.link/P2386",
    "ja": "https://onihusube.hatenablog.com/entry/2021/07/12/182757#P2386R0-Core-Language-Working-Group-ready-Issues-for-the-June-2021-meeting",
    "ja_old": "https://onihusube.hatenablog.com/entry/2021/07/12/182757#P2386R0-Core-Language-Working-Group-ready-Issues-for-the-June-2021-meeting",
    "tag": ""
  },
  {
    "number": "P2387",
    "title": "Pipe support for user-defined range adaptors",
    "url": "https://wg21.link/P2387",
    "ja": "https://onihusube.hatenablog.com/entry/2022/01/10/235544#P2387R3-Pipe-support-for-user-defined-range-adaptors",
    "ja_old": "https://onihusube.hatenablog.com/entry/2021/07/12/182757#P2387R0-Pipe-support-for-user-defined-range-adaptors",
    "tag": ""
  },
  {
    "number": "P2388",
    "title": "Minimum Contract Support: either No_eval or Eval_and_abort",
    "url": "https://wg21.link/P2388",
    "ja": "https://onihusube.hatenablog.com/entry/2021/12/11/220126#P2388R4-Minimum-Contract-Support-either-No_eval-or-Eval_and_abort",
    "ja_old": "https://onihusube.hatenablog.com/entry/2021/07/12/182757#P2388R0-Abort-only-contract-support",
    "tag": ""
  },
  {
    "number": "P2390",
    "title": "Add annotations for unreachable control flow",
    "url": "https://wg21.link/P2390",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P2391",
    "title": "C23 Update Report",
    "url": "https://wg21.link/P2391",
    "ja": "https://onihusube.hatenablog.com/entry/2021/07/12/182757#P2391R0-C23-Update-Report",
    "ja_old": "https://onihusube.hatenablog.com/entry/2021/07/12/182757#P2391R0-C23-Update-Report",
    "tag": ""
  },
  {
    "number": "P2392",
    "title": "Pattern matching using is and as",
    "url": "https://wg21.link/P2392",
    "ja": "https://onihusube.hatenablog.com/entry/2022/11/13/233529#P2392R2-Pattern-matching-using-is-and-as",
    "ja_old": "https://onihusube.hatenablog.com/entry/2021/07/12/182757#P2392R0-Pattern-matching-using-is-and-as",
    "tag": ""
  },
  {
    "number": "P2393",
    "title": "Cleaning up integer-class types",
    "url": "https://wg21.link/P2393",
    "ja": "https://onihusube.hatenablog.com/entry/2021/09/03/230045#P2393R1-Cleaning-up-integer-class-types",
    "ja_old": "https://onihusube.hatenablog.com/entry/2021/07/12/182757#P2393R0-Cleaning-up-integer-class-types",
    "tag": ""
  },
  {
    "number": "P2395",
    "title": "WG21 2021-06 Virtual Meeting Record of Discussion",
    "url": "https://wg21.link/P2395",
    "ja": "https://onihusube.hatenablog.com/entry/2021/07/12/182757#P2395R0-WG21-2021-06-Virtual-Meeting-Record-of-Discussion",
    "ja_old": "https://onihusube.hatenablog.com/entry/2021/07/12/182757#P2395R0-WG21-2021-06-Virtual-Meeting-Record-of-Discussion",
    "tag": ""
  },
  {
    "number": "P2396",
    "title": "Concurrency TS 2 fixes",
    "url": "https://wg21.link/P2396",
    "ja": "https://onihusube.hatenablog.com/entry/2021/07/12/182757#P2396R0-Concurrency-TS-2-fixes",
    "ja_old": "https://onihusube.hatenablog.com/entry/2021/07/12/182757#P2396R0-Concurrency-TS-2-fixes",
    "tag": ""
  },
  {
    "number": "P2397",
    "title": "SG16: Unicode meeting summaries 2021-04-14 through 2021-05-26",
    "url": "https://wg21.link/P2397",
    "ja": "https://onihusube.hatenablog.com/entry/2021/07/12/182757#P2397R0-SG16-Unicode-meeting-summaries-2021-04-14-through-2021-05-26",
    "ja_old": "https://onihusube.hatenablog.com/entry/2021/07/12/182757#P2397R0-SG16-Unicode-meeting-summaries-2021-04-14-through-2021-05-26",
    "tag": ""
  },
  {
    "number": "P2400",
    "title": "Library Evolution Report: 2021-09-28 to 2022-01-25",
    "url": "https://wg21.link/P2400",
    "ja": "https://onihusube.hatenablog.com/entry/2022/05/08/195618#P2400R3-Library-Evolution-Report-2021-09-28-to-2022-01-25",
    "ja_old": "https://onihusube.hatenablog.com/entry/2021/07/12/182757#P2400R1-Library-Evolution-Report-2021-02-23-to-2021-05-25",
    "tag": ""
  },
  {
    "number": "P2401",
    "title": "Add a conditional noexcept specification to std::exchange",
    "url": "https://wg21.link/P2401",
    "ja": "https://onihusube.hatenablog.com/entry/2021/08/14/213339#P2401R0-Add-a-conditional-noexcept-specification-to-stdexchange",
    "ja_old": "https://onihusube.hatenablog.com/entry/2021/08/14/213339#P2401R0-Add-a-conditional-noexcept-specification-to-stdexchange",
    "tag": ""
  },
  {
    "number": "P2402",
    "title": "A free function linear algebra interface based on the BLAS (slides)",
    "url": "https://wg21.link/P2402",
    "ja": "https://onihusube.hatenablog.com/entry/2021/08/14/213339#P2402R0-A-free-function-linear-algebra-interface-based-on-the-BLAS-slides",
    "ja_old": "https://onihusube.hatenablog.com/entry/2021/08/14/213339#P2402R0-A-free-function-linear-algebra-interface-based-on-the-BLAS-slides",
    "tag": ""
  },
  {
    "number": "P2403",
    "title": "Presentation on P2300 - std::execution",
    "url": "https://wg21.link/P2403",
    "ja": "https://onihusube.hatenablog.com/entry/2021/08/14/213339#P2403R0-Presentation-on-P2300---stdexecution",
    "ja_old": "https://onihusube.hatenablog.com/entry/2021/08/14/213339#P2403R0-Presentation-on-P2300---stdexecution",
    "tag": ""
  },
  {
    "number": "P2404",
    "title": "Move-only types for equality_comparable_with, totally_ordered_with, and three_way_comparable_with",
    "url": "https://wg21.link/P2404",
    "ja": "https://onihusube.hatenablog.com/entry/2022/08/11/193828#P2404R3-Move-only-types-for-equality_comparable_with-totally_ordered_with-and-three_way_comparable_with",
    "ja_old": "https://onihusube.hatenablog.com/entry/2021/08/14/213339#P2404R0-Relaxing-equality_comparable_withs-and-three_way_comparable_withs-common-reference-requirements-to",
    "tag": ""
  },
  {
    "number": "P2405",
    "title": "nullopt_t and nullptr_t should both have operator and operator==",
    "url": "https://wg21.link/P2405",
    "ja": "https://onihusube.hatenablog.com/entry/2021/08/14/213339#P2405R0-nullopt_t-and-nullptr_t-should-both-have-operator-and-operator",
    "ja_old": "https://onihusube.hatenablog.com/entry/2021/08/14/213339#P2405R0-nullopt_t-and-nullptr_t-should-both-have-operator-and-operator",
    "tag": ""
  },
  {
    "number": "P2406",
    "title": "Add lazy_counted_iterator",
    "url": "https://wg21.link/P2406",
    "ja": "https://onihusube.hatenablog.com/entry/2023/03/19/184146#P2406R5-Add-lazy_counted_iterator",
    "ja_old": "https://onihusube.hatenablog.com/entry/2021/08/14/213339#P2406R0-Fix-counted_iterator-interaction-with-input-iterators",
    "tag": ""
  },
  {
    "number": "P2407",
    "title": "Freestanding Library: Partial Classes",
    "url": "https://wg21.link/P2407",
    "ja": "https://onihusube.hatenablog.com/entry/2023/02/12/210302#P2407R2-Freestanding-Library-Partial-Classes",
    "ja_old": "https://onihusube.hatenablog.com/entry/2021/08/14/213339#P2407R0-Freestanding-Library-Partial-Classes",
    "tag": ""
  },
  {
    "number": "P2408",
    "title": "Ranges iterators as inputs to non-Ranges algorithms",
    "url": "https://wg21.link/P2408",
    "ja": "https://onihusube.hatenablog.com/entry/2022/05/08/195618#P2408R5-Ranges-iterators-as-inputs-to-non-Ranges-algorithms",
    "ja_old": "https://onihusube.hatenablog.com/entry/2021/08/14/213339#P2408R0-Ranges-views-as-inputs-to-non-Ranges-algorithms",
    "tag": ""
  },
  {
    "number": "P2409",
    "title": "Requirements for Usage of C++ Modules at Bloomberg",
    "url": "https://wg21.link/P2409",
    "ja": "https://onihusube.hatenablog.com/entry/2021/08/14/213339#P2409R0-Requirements-for-Usage-of-C-Modules-at-Bloomberg",
    "ja_old": "https://onihusube.hatenablog.com/entry/2021/08/14/213339#P2409R0-Requirements-for-Usage-of-C-Modules-at-Bloomberg",
    "tag": ""
  },
  {
    "number": "P2410",
    "title": "Type-and-resource safety in modern C++",
    "url": "https://wg21.link/P2410",
    "ja": "https://onihusube.hatenablog.com/entry/2021/08/14/213339#P2410R0-Type-and-resource-safety-in-modern-C",
    "ja_old": "https://onihusube.hatenablog.com/entry/2021/08/14/213339#P2410R0-Type-and-resource-safety-in-modern-C",
    "tag": ""
  },
  {
    "number": "P2411",
    "title": "Thoughts on pattern matching",
    "url": "https://wg21.link/P2411",
    "ja": "https://onihusube.hatenablog.com/entry/2021/08/14/213339#P2411R0-Thoughts-on-pattern-matching",
    "ja_old": "https://onihusube.hatenablog.com/entry/2021/08/14/213339#P2411R0-Thoughts-on-pattern-matching",
    "tag": ""
  },
  {
    "number": "P2412",
    "title": "Minimal module support for the standard library",
    "url": "https://wg21.link/P2412",
    "ja": "https://onihusube.hatenablog.com/entry/2021/08/14/213339#P2412R0-Minimal-module-support-for-the-standard-library",
    "ja_old": "https://onihusube.hatenablog.com/entry/2021/08/14/213339#P2412R0-Minimal-module-support-for-the-standard-library",
    "tag": ""
  },
  {
    "number": "P2413",
    "title": "Remove unsafe conversions of unique_ptr",
    "url": "https://wg21.link/P2413",
    "ja": "https://onihusube.hatenablog.com/entry/2021/08/14/213339#P2413R0-Remove-unsafe-conversions-of-unique_ptr",
    "ja_old": "https://onihusube.hatenablog.com/entry/2021/08/14/213339#P2413R0-Remove-unsafe-conversions-of-unique_ptr",
    "tag": ""
  },
  {
    "number": "P2414",
    "title": "Pointer lifetime-end zap proposed solutions",
    "url": "https://wg21.link/P2414",
    "ja": "https://onihusube.hatenablog.com/entry/2021/09/03/230045#P2414R1-Pointer-lifetime-end-zap-proposed-solutions",
    "ja_old": "https://onihusube.hatenablog.com/entry/2021/08/14/213339#P2414R0-Pointer-lifetime-end-zap-proposed-solutions",
    "tag": ""
  },
  {
    "number": "P2415",
    "title": "What is a view?",
    "url": "https://wg21.link/P2415",
    "ja": "https://onihusube.hatenablog.com/entry/2021/09/03/230045#P2415R1-What-is-a-view",
    "ja_old": "https://onihusube.hatenablog.com/entry/2021/08/14/213339#P2415R0-What-is-a-view",
    "tag": ""
  },
  {
    "number": "P2416",
    "title": "Presentation of requirements in the standard library",
    "url": "https://wg21.link/P2416",
    "ja": "https://onihusube.hatenablog.com/entry/2022/03/19/224729#P2416R2-Presentation-of-requirements-in-the-standard-library",
    "ja_old": "https://onihusube.hatenablog.com/entry/2021/08/14/213339#P2416R0-Presentation-of-requirements-in-the-standard-library",
    "tag": ""
  },
  {
    "number": "P2417",
    "title": "A more constexpr bitset",
    "url": "https://wg21.link/P2417",
    "ja": "https://onihusube.hatenablog.com/entry/2022/08/11/193828#P2417R2-A-more-constexpr-bitset",
    "ja_old": "https://onihusube.hatenablog.com/entry/2021/08/14/213339#P2417R0-A-more-constexpr-bitset",
    "tag": ""
  },
  {
    "number": "P2418",
    "title": "Add support for std::generator-like types to std::format",
    "url": "https://wg21.link/P2418",
    "ja": "https://onihusube.hatenablog.com/entry/2021/10/03/193523#P2418R1-Add-support-for-stdgenerator-like-types-to-stdformat",
    "ja_old": "https://onihusube.hatenablog.com/entry/2021/09/03/230045#P2418R0-Add-support-for-stdgenerator-like-types-to-stdformat",
    "tag": ""
  },
  {
    "number": "P2419",
    "title": "Clarify handling of encodings in localized formatting of chrono types",
    "url": "https://wg21.link/P2419",
    "ja": "https://onihusube.hatenablog.com/entry/2022/08/11/193828#P2419R2-Clarify-handling-of-encodings-in-localized-formatting-of-chrono-types",
    "ja_old": "https://onihusube.hatenablog.com/entry/2021/09/03/230045#P2419R0-Clarify-handling-of-encodings-in-localized-formatting-of-chrono-types",
    "tag": ""
  },
  {
    "number": "P2420",
    "title": "2021 Summer Library Evolution Polls",
    "url": "https://wg21.link/P2420",
    "ja": "https://onihusube.hatenablog.com/entry/2021/09/03/230045#P2420R0-2021-Summer-Library-Evolution-Polls",
    "ja_old": "https://onihusube.hatenablog.com/entry/2021/09/03/230045#P2420R0-2021-Summer-Library-Evolution-Polls",
    "tag": ""
  },
  {
    "number": "P2423",
    "title": "C Floating Point Study Group Liaison Report",
    "url": "https://wg21.link/P2423",
    "ja": "https://onihusube.hatenablog.com/entry/2021/09/03/230045#P2423R0-C-Floating-Point-Study-Group-Liaison-Report",
    "ja_old": "https://onihusube.hatenablog.com/entry/2021/09/03/230045#P2423R0-C-Floating-Point-Study-Group-Liaison-Report",
    "tag": ""
  },
  {
    "number": "P2424",
    "title": "Abbreviated Parameters",
    "url": "https://wg21.link/P2424",
    "ja": "https://onihusube.hatenablog.com/entry/2022/02/19/181101#P2424R0-Abbreviated-Parameters",
    "ja_old": "https://onihusube.hatenablog.com/entry/2022/02/19/181101#P2424R0-Abbreviated-Parameters",
    "tag": ""
  },
  {
    "number": "P2425",
    "title": "Expression Function Body",
    "url": "https://wg21.link/P2425",
    "ja": "https://onihusube.hatenablog.com/entry/2021/09/03/230045#P2425R0-Expression-Function-Body",
    "ja_old": "https://onihusube.hatenablog.com/entry/2021/09/03/230045#P2425R0-Expression-Function-Body",
    "tag": ""
  },
  {
    "number": "P2428",
    "title": "Slides: BSI issues with P2300",
    "url": "https://wg21.link/P2428",
    "ja": "https://onihusube.hatenablog.com/entry/2021/09/03/230045#P2428R0-Slides-BSI-issues-with-P2300",
    "ja_old": "https://onihusube.hatenablog.com/entry/2021/09/03/230045#P2428R0-Slides-BSI-issues-with-P2300",
    "tag": ""
  },
  {
    "number": "P2429",
    "title": "Concepts Error Messages for Humans",
    "url": "https://wg21.link/P2429",
    "ja": "https://onihusube.hatenablog.com/entry/2022/06/11/191943#P2429R0-Concepts-Error-Messages-for-Humans",
    "ja_old": "https://onihusube.hatenablog.com/entry/2022/06/11/191943#P2429R0-Concepts-Error-Messages-for-Humans",
    "tag": ""
  },
  {
    "number": "P2430",
    "title": "Slides: Partial success scenarios with P2300",
    "url": "https://wg21.link/P2430",
    "ja": "https://onihusube.hatenablog.com/entry/2021/10/03/193523#P2430R0-Slides-Partial-success-scenarios-with-P2300",
    "ja_old": "https://onihusube.hatenablog.com/entry/2021/10/03/193523#P2430R0-Slides-Partial-success-scenarios-with-P2300",
    "tag": ""
  },
  {
    "number": "P2431",
    "title": "Presentation: Plans for P2300 Revision 2",
    "url": "https://wg21.link/P2431",
    "ja": "https://onihusube.hatenablog.com/entry/2021/10/03/193523#P2431R0-Presentation-Plans-for-P2300-Revision-2",
    "ja_old": "https://onihusube.hatenablog.com/entry/2021/10/03/193523#P2431R0-Presentation-Plans-for-P2300-Revision-2",
    "tag": ""
  },
  {
    "number": "P2432",
    "title": "Fix istream_view, Rev 1",
    "url": "https://wg21.link/P2432",
    "ja": "https://onihusube.hatenablog.com/entry/2021/10/03/193523#P2432R0-Fixing-istream_view",
    "ja_old": "https://onihusube.hatenablog.com/entry/2021/10/03/193523#P2432R0-Fixing-istream_view",
    "tag": ""
  },
  {
    "number": "P2434",
    "title": "Nondeterministic pointer provenance",
    "url": "https://wg21.link/P2434",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P2435",
    "title": "2021 Summer Library Evolution Poll Outcomes",
    "url": "https://wg21.link/P2435",
    "ja": "https://onihusube.hatenablog.com/entry/2021/10/03/193523#P2435R0-2021-Summer-Library-Evolution-Poll-Outcomes",
    "ja_old": "https://onihusube.hatenablog.com/entry/2021/10/03/193523#P2435R0-2021-Summer-Library-Evolution-Poll-Outcomes",
    "tag": ""
  },
  {
    "number": "P2436",
    "title": "2021 September Library Evolution Polls",
    "url": "https://wg21.link/P2436",
    "ja": "https://onihusube.hatenablog.com/entry/2021/10/03/193523#P2436R0-2021-September-Library-Evolution-Polls",
    "ja_old": "https://onihusube.hatenablog.com/entry/2021/10/03/193523#P2436R0-2021-September-Library-Evolution-Polls",
    "tag": ""
  },
  {
    "number": "P2437",
    "title": "Support for #warning",
    "url": "https://wg21.link/P2437",
    "ja": "https://onihusube.hatenablog.com/entry/2022/02/19/181101#P2437R1-Support-for-warning",
    "ja_old": "https://onihusube.hatenablog.com/entry/2021/10/03/193523#P2437R0-Support-for-warning",
    "tag": ""
  },
  {
    "number": "P2438",
    "title": "std::string::substr() &&",
    "url": "https://wg21.link/P2438",
    "ja": "https://onihusube.hatenablog.com/entry/2022/03/19/224729#P2438R2-stdstringsubstr-",
    "ja_old": "https://onihusube.hatenablog.com/entry/2021/10/03/193523#P2438R0-stdstringsubstr-",
    "tag": ""
  },
  {
    "number": "P2439",
    "title": "Slides for P2415R1, what is a view?",
    "url": "https://wg21.link/P2439",
    "ja": "https://onihusube.hatenablog.com/entry/2021/10/03/193523#P2439R0-Slides-for-P2415R1-what-is-a-view",
    "ja_old": "https://onihusube.hatenablog.com/entry/2021/10/03/193523#P2439R0-Slides-for-P2415R1-what-is-a-view",
    "tag": ""
  },
  {
    "number": "P2440",
    "title": "ranges::iota, ranges::shift_left, and ranges::shift_right",
    "url": "https://wg21.link/P2440",
    "ja": "https://onihusube.hatenablog.com/entry/2022/01/10/235544#P2440R1-rangesiota-rangesshift_left-and-rangesshift_right",
    "ja_old": "https://onihusube.hatenablog.com/entry/2021/10/03/193523#P2440R0-rangesiota-rangesshift_left-and-rangesshift_right",
    "tag": ""
  },
  {
    "number": "P2441",
    "title": "views::join_with",
    "url": "https://wg21.link/P2441",
    "ja": "https://onihusube.hatenablog.com/entry/2022/03/19/224729#P2441R2-viewsjoin_with",
    "ja_old": "https://onihusube.hatenablog.com/entry/2021/10/03/193523#P2441R0-viewsjoin_with",
    "tag": ""
  },
  {
    "number": "P2442",
    "title": "Windowing range adaptors: views::chunk and views::slide",
    "url": "https://wg21.link/P2442",
    "ja": "https://onihusube.hatenablog.com/entry/2022/01/10/235544#P2442R1-Windowing-range-adaptors-viewschunk-and-viewsslide",
    "ja_old": "https://onihusube.hatenablog.com/entry/2021/10/03/193523#P2442R0-Windowing-range-adaptors-viewschunk-and-viewsslide",
    "tag": ""
  },
  {
    "number": "P2443",
    "title": "views::chunk_by",
    "url": "https://wg21.link/P2443",
    "ja": "https://onihusube.hatenablog.com/entry/2021/12/11/220126#P2443R1-viewschunk_by",
    "ja_old": "https://onihusube.hatenablog.com/entry/2021/10/03/193523#P2443R0-viewschunk_by",
    "tag": ""
  },
  {
    "number": "P2444",
    "title": "The Asio asynchronous model",
    "url": "https://wg21.link/P2444",
    "ja": "https://onihusube.hatenablog.com/entry/2021/10/03/193523#P2444R0-The-Asio-asynchronous-model",
    "ja_old": "https://onihusube.hatenablog.com/entry/2021/10/03/193523#P2444R0-The-Asio-asynchronous-model",
    "tag": ""
  },
  {
    "number": "P2445",
    "title": "forward_like",
    "url": "https://wg21.link/P2445",
    "ja": "https://onihusube.hatenablog.com/entry/2022/06/11/191943#P2445R1-forward_like",
    "ja_old": "https://onihusube.hatenablog.com/entry/2022/06/11/191943#P2445R1-forward_like",
    "tag": ""
  },
  {
    "number": "P2446",
    "title": "views::as_rvalue",
    "url": "https://wg21.link/P2446",
    "ja": "https://onihusube.hatenablog.com/entry/2022/03/19/224729#P2446R2-viewsas_rvalue",
    "ja_old": "https://onihusube.hatenablog.com/entry/2021/10/03/193523#P2446R0-viewsmove",
    "tag": ""
  },
  {
    "number": "P2447",
    "title": "std::span over an initializer list",
    "url": "https://wg21.link/P2447",
    "ja": "https://onihusube.hatenablog.com/entry/2022/02/19/181101#P2447R2-stdspan-and-the-missing-constructor",
    "ja_old": "https://onihusube.hatenablog.com/entry/2022/01/10/235544#P2447R1-stdspan-and-the-missing-constructor",
    "tag": ""
  },
  {
    "number": "P2448",
    "title": "Relaxing some constexpr restrictions",
    "url": "https://wg21.link/P2448",
    "ja": "https://onihusube.hatenablog.com/entry/2022/03/19/224729#P2448R2-Relaxing-some-constexpr-restrictions",
    "ja_old": "https://onihusube.hatenablog.com/entry/2022/02/19/181101#P2448R1-Relaxing-some-constexpr-restrictions",
    "tag": ""
  },
  {
    "number": "P2450",
    "title": "C++ Standard Library Issues to be moved in Virtual Plenary, Oct. 2021",
    "url": "https://wg21.link/P2450",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P2451",
    "title": "2021 September Library Evolution Poll Outcomes",
    "url": "https://wg21.link/P2451",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P2452",
    "title": "2021 October Library Evolution and Concurrency Polls on Networking and Executors",
    "url": "https://wg21.link/P2452",
    "ja": "https://onihusube.hatenablog.com/entry/2022/03/19/224729#P2452R0-2021-October-Library-Evolution-and-Concurrency-Polls-on-Networking-and-Executors",
    "ja_old": "https://onihusube.hatenablog.com/entry/2022/03/19/224729#P2452R0-2021-October-Library-Evolution-and-Concurrency-Polls-on-Networking-and-Executors",
    "tag": ""
  },
  {
    "number": "P2453",
    "title": "2021 October Library Evolution Poll Outcomes",
    "url": "https://wg21.link/P2453",
    "ja": "https://onihusube.hatenablog.com/entry/2022/03/19/224729#P2453R0-2021-October-Library-Evolution-Poll-Outcomes",
    "ja_old": "https://onihusube.hatenablog.com/entry/2022/03/19/224729#P2453R0-2021-October-Library-Evolution-Poll-Outcomes",
    "tag": ""
  },
  {
    "number": "P2454",
    "title": "2021 November Library Evolution Polls",
    "url": "https://wg21.link/P2454",
    "ja": "https://onihusube.hatenablog.com/entry/2021/12/11/220126#P2454R0-2021-November-Library-Evolution-Polls",
    "ja_old": "https://onihusube.hatenablog.com/entry/2021/12/11/220126#P2454R0-2021-November-Library-Evolution-Polls",
    "tag": ""
  },
  {
    "number": "P2455",
    "title": "2021 November Library Evolution Poll Outcomes",
    "url": "https://wg21.link/P2455",
    "ja": "https://onihusube.hatenablog.com/entry/2022/01/10/235544#P2455R0-2021-November-Library-Evolution-Poll-Outcomes",
    "ja_old": "https://onihusube.hatenablog.com/entry/2022/01/10/235544#P2455R0-2021-November-Library-Evolution-Poll-Outcomes",
    "tag": ""
  },
  {
    "number": "P2456",
    "title": "2021 December Library Evolution Polls",
    "url": "https://wg21.link/P2456",
    "ja": "https://onihusube.hatenablog.com/entry/2022/01/10/235544#P2456R0-2021-December-Library-Evolution-Polls",
    "ja_old": "https://onihusube.hatenablog.com/entry/2022/01/10/235544#P2456R0-2021-December-Library-Evolution-Polls",
    "tag": ""
  },
  {
    "number": "P2457",
    "title": "2021 December Library Evolution Poll Outcomes",
    "url": "https://wg21.link/P2457",
    "ja": "https://onihusube.hatenablog.com/entry/2022/02/19/181101#P2457R0-2021-December-Library-Evolution-Poll-Outcomes",
    "ja_old": "https://onihusube.hatenablog.com/entry/2022/02/19/181101#P2457R0-2021-December-Library-Evolution-Poll-Outcomes",
    "tag": ""
  },
  {
    "number": "P2458",
    "title": "2022 January Library Evolution Polls",
    "url": "https://wg21.link/P2458",
    "ja": "https://onihusube.hatenablog.com/entry/2022/03/19/224729#P2458R1-2022-January-Library-Evolution-Polls",
    "ja_old": "https://onihusube.hatenablog.com/entry/2022/02/19/181101#P2458R0-2022-January-Library-Evolution-Polls",
    "tag": ""
  },
  {
    "number": "P2459",
    "title": "2022 January Library Evolution Poll Outcomes",
    "url": "https://wg21.link/P2459",
    "ja": "https://onihusube.hatenablog.com/entry/2022/03/19/224729#P2459R0-2022-January-Library-Evolution-Poll-Outcomes",
    "ja_old": "https://onihusube.hatenablog.com/entry/2022/03/19/224729#P2459R0-2022-January-Library-Evolution-Poll-Outcomes",
    "tag": ""
  },
  {
    "number": "P2460",
    "title": "Relax requirements on  wchar_t to match existing practices",
    "url": "https://wg21.link/P2460",
    "ja": "https://onihusube.hatenablog.com/entry/2022/08/11/193828#P2460R2-Relax-requirements-on-wchar_t-to-match-existing-practices",
    "ja_old": "https://onihusube.hatenablog.com/entry/2022/06/11/191943#P2460R1-Relax-requirements-on-wchar_t-to-match-existing-practices",
    "tag": ""
  },
  {
    "number": "P2461",
    "title": "Closure-based Syntax for Contracts",
    "url": "https://wg21.link/P2461",
    "ja": "https://onihusube.hatenablog.com/entry/2021/12/11/220126#P2461R1-Closure-based-Syntax-for-Contracts",
    "ja_old": "https://onihusube.hatenablog.com/entry/2021/12/11/220126#P2461R1-Closure-based-Syntax-for-Contracts",
    "tag": ""
  },
  {
    "number": "P2462",
    "title": "Core Language Working Group “ready” issues for the October, 2021 meeting",
    "url": "https://wg21.link/P2462",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P2463",
    "title": "Slides for P2444r0 The Asio asynchronous model",
    "url": "https://wg21.link/P2463",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P2464",
    "title": "Ruminations on networking and executors",
    "url": "https://wg21.link/P2464",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P2465",
    "title": "Standard Library Modules std and std.compat",
    "url": "https://wg21.link/P2465",
    "ja": "https://onihusube.hatenablog.com/entry/2022/04/02/175835#P2465R3-Standard-Library-Modules-std-and-stdcompat",
    "ja_old": "https://onihusube.hatenablog.com/entry/2022/03/19/224729#P2465R2-Standard-Library-Modules-std-and-stdcompat",
    "tag": ""
  },
  {
    "number": "P2466",
    "title": "The notes on contract annotations",
    "url": "https://wg21.link/P2466",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P2467",
    "title": "Support exclusive mode for fstreams",
    "url": "https://wg21.link/P2467",
    "ja": "https://onihusube.hatenablog.com/entry/2022/03/19/224729#P2467R1-Support-exclusive-mode-for-fstreams",
    "ja_old": "https://onihusube.hatenablog.com/entry/2021/12/11/220126#P2467R0-Support-exclusive-mode-for-fstreams",
    "tag": ""
  },
  {
    "number": "P2468",
    "title": "The Equality Operator You Are Looking For",
    "url": "https://wg21.link/P2468",
    "ja": "https://onihusube.hatenablog.com/entry/2022/02/19/181101#P2468R2-The-Equality-Operator-You-Are-Looking-For",
    "ja_old": "https://onihusube.hatenablog.com/entry/2022/01/10/235544#P2468R1-The-Equality-Operator-You-Are-Looking-For",
    "tag": ""
  },
  {
    "number": "P2469",
    "title": "Response to P2464: The Networking TS is baked, P2300 Sender/Receiver is not.",
    "url": "https://wg21.link/P2469",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P2470",
    "title": "Slides for presentation of P2300R2: std::execution (sender/receiver)",
    "url": "https://wg21.link/P2470",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P2471",
    "title": "NetTS, ASIO and Sender Library Design Comparison",
    "url": "https://wg21.link/P2471",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P2472",
    "title": "make function_ref more functional",
    "url": "https://wg21.link/P2472",
    "ja": "https://onihusube.hatenablog.com/entry/2022/06/11/191943#P2472R3-make-function_ref-more-functional",
    "ja_old": "https://onihusube.hatenablog.com/entry/2022/03/19/224729#P2472R1-make-function_ref-more-functional",
    "tag": ""
  },
  {
    "number": "P2473",
    "title": "Distributing C++ Module Libraries",
    "url": "https://wg21.link/P2473",
    "ja": "https://onihusube.hatenablog.com/entry/2022/01/10/235544#P2473R1-Distributing-C-Module-Libraries",
    "ja_old": "https://onihusube.hatenablog.com/entry/2022/01/10/235544#P2473R1-Distributing-C-Module-Libraries",
    "tag": ""
  },
  {
    "number": "P2474",
    "title": "views::repeat",
    "url": "https://wg21.link/P2474",
    "ja": "https://onihusube.hatenablog.com/entry/2022/08/11/193828#P2474R2-viewsrepeat",
    "ja_old": "https://onihusube.hatenablog.com/entry/2022/01/10/235544#P2474R0-viewsrepeat",
    "tag": ""
  },
  {
    "number": "P2475",
    "title": "WG21 2021-10 Virtual Meeting Record of Discussion",
    "url": "https://wg21.link/P2475",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P2477",
    "title": "Allow programmers to control coroutine elision",
    "url": "https://wg21.link/P2477",
    "ja": "https://onihusube.hatenablog.com/entry/2022/09/04/141015#P2477R3-Allow-programmers-to-control-coroutine-elision",
    "ja_old": "https://onihusube.hatenablog.com/entry/2021/12/11/220126#P2477R1-Allow-programmer-to-control-and-detect-coroutine-elision-by-static-constexpr-bool-must_elide-and",
    "tag": ""
  },
  {
    "number": "P2478",
    "title": "_Thread_local for better C++ interoperability with C",
    "url": "https://wg21.link/P2478",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P2479",
    "title": "Slides for P2464",
    "url": "https://wg21.link/P2479",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P2480",
    "title": "Response to P2471: \"NetTS, Asio, and Sender library design comparison\" - corrected and expanded",
    "url": "https://wg21.link/P2480",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P2481",
    "title": "Forwarding reference to specific type/template",
    "url": "https://wg21.link/P2481",
    "ja": "https://onihusube.hatenablog.com/entry/2022/08/11/193828#P2481R1-Forwarding-reference-to-specific-typetemplate",
    "ja_old": "https://onihusube.hatenablog.com/entry/2022/08/11/193828#P2481R1-Forwarding-reference-to-specific-typetemplate",
    "tag": ""
  },
  {
    "number": "P2483",
    "title": "Support Non-copyable Types for single_view",
    "url": "https://wg21.link/P2483",
    "ja": "https://onihusube.hatenablog.com/entry/2021/12/11/220126#P2483R0-Support-Non-copyable-Types-for-single_view",
    "ja_old": "https://onihusube.hatenablog.com/entry/2021/12/11/220126#P2483R0-Support-Non-copyable-Types-for-single_view",
    "tag": ""
  },
  {
    "number": "P2484",
    "title": "Extending class types as non-type template parameters",
    "url": "https://wg21.link/P2484",
    "ja": "https://onihusube.hatenablog.com/entry/2021/12/11/220126#P2484R0-Extending-class-types-as-non-type-template-parameters",
    "ja_old": "https://onihusube.hatenablog.com/entry/2021/12/11/220126#P2484R0-Extending-class-types-as-non-type-template-parameters",
    "tag": ""
  },
  {
    "number": "P2485",
    "title": "Do not add value_exists and value_or to C++23",
    "url": "https://wg21.link/P2485",
    "ja": "https://onihusube.hatenablog.com/entry/2021/12/11/220126#P2485R0-Do-not-add-value_exists-and-value_or-to-C23",
    "ja_old": "https://onihusube.hatenablog.com/entry/2021/12/11/220126#P2485R0-Do-not-add-value_exists-and-value_or-to-C23",
    "tag": ""
  },
  {
    "number": "P2486",
    "title": "Structured naming for function object and CPO values",
    "url": "https://wg21.link/P2486",
    "ja": "https://onihusube.hatenablog.com/entry/2022/01/10/235544#P2486R1-Structured-naming-for-function-object-and-CPO-values",
    "ja_old": "https://onihusube.hatenablog.com/entry/2021/12/11/220126#P2486R0-Structured-naming-for-function-object-and-CPO-values",
    "tag": ""
  },
  {
    "number": "P2487",
    "title": "Attribute-like syntax for contract annotations",
    "url": "https://wg21.link/P2487",
    "ja": "https://onihusube.hatenablog.com/entry/2021/12/11/220126#P2487R0-Attribute-like-syntax-for-contract-annotations",
    "ja_old": "https://onihusube.hatenablog.com/entry/2021/12/11/220126#P2487R0-Attribute-like-syntax-for-contract-annotations",
    "tag": ""
  },
  {
    "number": "P2489",
    "title": "Library Evolution Plan for Completing C++23",
    "url": "https://wg21.link/P2489",
    "ja": "https://onihusube.hatenablog.com/entry/2021/12/11/220126#P2489R0-Library-Evolution-Plan-for-Completing-C23",
    "ja_old": "https://onihusube.hatenablog.com/entry/2021/12/11/220126#P2489R0-Library-Evolution-Plan-for-Completing-C23",
    "tag": ""
  },
  {
    "number": "P2490",
    "title": "Zero-overhead exception stacktraces",
    "url": "https://wg21.link/P2490",
    "ja": "https://onihusube.hatenablog.com/entry/2022/07/09/160343#P2490R3-Zero-overhead-exception-stacktraces",
    "ja_old": "https://onihusube.hatenablog.com/entry/2021/12/11/220126#P2490R0-Zero-overhead-exception-stacktraces",
    "tag": ""
  },
  {
    "number": "P2491",
    "title": "Text encodings follow-up",
    "url": "https://wg21.link/P2491",
    "ja": "https://onihusube.hatenablog.com/entry/2021/12/11/220126#P2491R0-Text-encodings-follow-up",
    "ja_old": "https://onihusube.hatenablog.com/entry/2021/12/11/220126#P2491R0-Text-encodings-follow-up",
    "tag": ""
  },
  {
    "number": "P2492",
    "title": "Attending C++ Standards Committee Meetings During a Pandemic",
    "url": "https://wg21.link/P2492",
    "ja": "https://onihusube.hatenablog.com/entry/2021/12/11/220126#P2492R0-Attending-C-Standards-Committee-Meetings-During-a-Pandemic",
    "ja_old": "https://onihusube.hatenablog.com/entry/2021/12/11/220126#P2492R0-Attending-C-Standards-Committee-Meetings-During-a-Pandemic",
    "tag": ""
  },
  {
    "number": "P2493",
    "title": "Missing feature test macros for C++20 core papers",
    "url": "https://wg21.link/P2493",
    "ja": "https://onihusube.hatenablog.com/entry/2021/12/11/220126#P2493R0-Missing-feature-test-macros-for-C20-core-papers",
    "ja_old": "https://onihusube.hatenablog.com/entry/2021/12/11/220126#P2493R0-Missing-feature-test-macros-for-C20-core-papers",
    "tag": ""
  },
  {
    "number": "P2494",
    "title": "Relaxing range adaptors to allow for move only types",
    "url": "https://wg21.link/P2494",
    "ja": "https://onihusube.hatenablog.com/entry/2022/08/11/193828#P2494R2-Relaxing-range-adaptors-to-allow-for-move-only-types",
    "ja_old": "https://onihusube.hatenablog.com/entry/2022/01/10/235544#P2494R0-Relaxing-range-adaptors-to-allow-for-move-only-types",
    "tag": ""
  },
  {
    "number": "P2495",
    "title": "Interfacing stringstreams with string_view",
    "url": "https://wg21.link/P2495",
    "ja": "https://onihusube.hatenablog.com/entry/2023/03/19/184146#P2495R2-Interfacing-stringstreams-with-string_view",
    "ja_old": "https://onihusube.hatenablog.com/entry/2022/03/19/224729#P2495R0-Interfacing-stringstreams-with-string_view",
    "tag": ""
  },
  {
    "number": "P2497",
    "title": "Testing for success or failure of charconv functions",
    "url": "https://wg21.link/P2497",
    "ja": "https://onihusube.hatenablog.com/entry/2023/03/19/184146#P2497R0-Testing-for-success-or-failure-of-charconv-functions",
    "ja_old": "https://onihusube.hatenablog.com/entry/2023/03/19/184146#P2497R0-Testing-for-success-or-failure-of-charconv-functions",
    "tag": ""
  },
  {
    "number": "P2498",
    "title": "Forward compatibility of text_encoding with additional encoding registries",
    "url": "https://wg21.link/P2498",
    "ja": "https://onihusube.hatenablog.com/entry/2022/02/19/181101#P2498R1-Forward-compatibility-of-text_encoding-with-additional-encoding-registries",
    "ja_old": "https://onihusube.hatenablog.com/entry/2022/01/10/235544#P2498R0-Forward-compatibility-of-text_encoding-with-additional-encoding-registries",
    "tag": ""
  },
  {
    "number": "P2499",
    "title": "string_view range constructor should be explicit",
    "url": "https://wg21.link/P2499",
    "ja": "https://onihusube.hatenablog.com/entry/2022/01/10/235544#P2499R0-string_view-range-constructor-should-be-explicit",
    "ja_old": "https://onihusube.hatenablog.com/entry/2022/01/10/235544#P2499R0-string_view-range-constructor-should-be-explicit",
    "tag": ""
  },
  {
    "number": "P2500",
    "title": "C++17 parallel algorithms and P2300",
    "url": "https://wg21.link/P2500",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P2501",
    "title": "Undo the rename of views::move and views::as_const",
    "url": "https://wg21.link/P2501",
    "ja": "https://onihusube.hatenablog.com/entry/2022/01/10/235544#P2501R0-Undo-the-rename-of-viewsmove-and-viewsas_const",
    "ja_old": "https://onihusube.hatenablog.com/entry/2022/01/10/235544#P2501R0-Undo-the-rename-of-viewsmove-and-viewsas_const",
    "tag": ""
  },
  {
    "number": "P2502",
    "title": "std::generator: Synchronous Coroutine Generator for Ranges",
    "url": "https://wg21.link/P2502",
    "ja": "https://onihusube.hatenablog.com/entry/2022/07/09/160343#P2502R2-stdgenerator-Synchronous-Coroutine-Generator-for-Ranges",
    "ja_old": "https://onihusube.hatenablog.com/entry/2022/01/10/235544#P2502R0-stdgenerator-Synchronous-Coroutine-Generator-for-Ranges",
    "tag": ""
  },
  {
    "number": "P2504",
    "title": "Computations as a global solution to concurrency",
    "url": "https://wg21.link/P2504",
    "ja": "https://onihusube.hatenablog.com/entry/2022/01/10/235544#P2504R0-Computations-as-a-global-solution-to-concurrency",
    "ja_old": "https://onihusube.hatenablog.com/entry/2022/01/10/235544#P2504R0-Computations-as-a-global-solution-to-concurrency",
    "tag": ""
  },
  {
    "number": "P2505",
    "title": "Monadic Functions for std::expected",
    "url": "https://wg21.link/P2505",
    "ja": "https://onihusube.hatenablog.com/entry/2022/11/13/233529#P2505R5-Monadic-Functions-for-stdexpected",
    "ja_old": "https://onihusube.hatenablog.com/entry/2022/01/10/235544#P2505R0-Monadic-Functions-for-stdexpected",
    "tag": ""
  },
  {
    "number": "P2506",
    "title": "std::lazy: a coroutine for deferred execution",
    "url": "https://wg21.link/P2506",
    "ja": "https://onihusube.hatenablog.com/entry/2022/03/19/224729#P2506R0-stdlazy-a-coroutine-for-deferred-execution",
    "ja_old": "https://onihusube.hatenablog.com/entry/2022/03/19/224729#P2506R0-stdlazy-a-coroutine-for-deferred-execution",
    "tag": ""
  },
  {
    "number": "P2507",
    "title": "Limit [[assume]] to conditional-expressions",
    "url": "https://wg21.link/P2507",
    "ja": "https://onihusube.hatenablog.com/entry/2022/02/19/181101#P2507R1-Limit-assume-to-conditional-expressions",
    "ja_old": "https://onihusube.hatenablog.com/entry/2022/01/10/235544#P2507R0-Only-assume-conditional-expressions",
    "tag": ""
  },
  {
    "number": "P2508",
    "title": "Exposing std::basic-format-string",
    "url": "https://wg21.link/P2508",
    "ja": "https://onihusube.hatenablog.com/entry/2023/02/12/210302#P2508R2-Exposing-stdbasic-format-string",
    "ja_old": "https://onihusube.hatenablog.com/entry/2022/01/10/235544#P2508R0-Exposing-stdbasic-format-string",
    "tag": ""
  },
  {
    "number": "P2509",
    "title": "A proposal for a type trait to detect value-preserving conversions",
    "url": "https://wg21.link/P2509",
    "ja": "https://onihusube.hatenablog.com/entry/2022/01/10/235544#P2509R0-A-proposal-for-a-type-trait-to-detect-value-preserving-conversions",
    "ja_old": "https://onihusube.hatenablog.com/entry/2022/01/10/235544#P2509R0-A-proposal-for-a-type-trait-to-detect-value-preserving-conversions",
    "tag": ""
  },
  {
    "number": "P2510",
    "title": "Formatting pointers",
    "url": "https://wg21.link/P2510",
    "ja": "https://onihusube.hatenablog.com/entry/2022/06/11/191943#P2510R3-Formatting-pointers",
    "ja_old": "https://onihusube.hatenablog.com/entry/2022/01/10/235544#P2510R0-Formatting-pointers",
    "tag": ""
  },
  {
    "number": "P2511",
    "title": "Beyond operator(): NTTP callables in type-erased call wrappers",
    "url": "https://wg21.link/P2511",
    "ja": "https://onihusube.hatenablog.com/entry/2022/09/04/141015#P2511R2-Beyond-operator-NTTP-callables-in-type-erased-call-wrappers",
    "ja_old": "https://onihusube.hatenablog.com/entry/2022/02/19/181101#P2511R0-Beyond-operator-NTTP-callables-in-type-erased-call-wrappers",
    "tag": ""
  },
  {
    "number": "P2512",
    "title": "SG16: Unicode meeting summaries 2021-06-09 through 2021-12-15",
    "url": "https://wg21.link/P2512",
    "ja": "https://onihusube.hatenablog.com/entry/2022/02/19/181101#P2512R0-SG16-Unicode-meeting-summaries-2021-06-09-through-2021-12-15",
    "ja_old": "https://onihusube.hatenablog.com/entry/2022/02/19/181101#P2512R0-SG16-Unicode-meeting-summaries-2021-06-09-through-2021-12-15",
    "tag": ""
  },
  {
    "number": "P2513",
    "title": "char8_t Compatibility and Portability Fix",
    "url": "https://wg21.link/P2513",
    "ja": "https://onihusube.hatenablog.com/entry/2022/08/11/193828#P2513R4-char8_t-Compatibility-and-Portability-Fix",
    "ja_old": "https://onihusube.hatenablog.com/entry/2022/02/19/181101#P2513R0-char8_t-Compatibility-and-Portability-Fixes",
    "tag": ""
  },
  {
    "number": "P2514",
    "title": "std::breakpoint",
    "url": "https://wg21.link/P2514",
    "ja": "https://onihusube.hatenablog.com/entry/2022/02/19/181101#P2514R0-stdbreakpoint",
    "ja_old": "https://onihusube.hatenablog.com/entry/2022/02/19/181101#P2514R0-stdbreakpoint",
    "tag": ""
  },
  {
    "number": "P2515",
    "title": "std::is_debugger_present",
    "url": "https://wg21.link/P2515",
    "ja": "https://onihusube.hatenablog.com/entry/2022/02/19/181101#P2515R0-stdis_debugger_present",
    "ja_old": "https://onihusube.hatenablog.com/entry/2022/02/19/181101#P2515R0-stdis_debugger_present",
    "tag": ""
  },
  {
    "number": "P2516",
    "title": "string_view is implicitly convertible from what?",
    "url": "https://wg21.link/P2516",
    "ja": "https://onihusube.hatenablog.com/entry/2022/02/19/181101#P2516R0-string_view-is-implicitly-convertible-from-what",
    "ja_old": "https://onihusube.hatenablog.com/entry/2022/02/19/181101#P2516R0-string_view-is-implicitly-convertible-from-what",
    "tag": ""
  },
  {
    "number": "P2517",
    "title": "Add a conditional noexcept specification to std::apply",
    "url": "https://wg21.link/P2517",
    "ja": "https://onihusube.hatenablog.com/entry/2022/09/04/141015#P2517R1-Add-a-conditional-noexcept-specification-to-stdapply",
    "ja_old": "https://onihusube.hatenablog.com/entry/2022/02/19/181101#P2517R0-Add-a-conditional-noexcept-specification-to-stdapply",
    "tag": ""
  },
  {
    "number": "P2520",
    "title": "move_iterator should be a random access iterator",
    "url": "https://wg21.link/P2520",
    "ja": "https://onihusube.hatenablog.com/entry/2022/02/19/181101#P2520R0-move_iteratorT-should-be-a-random-access-iterator",
    "ja_old": "https://onihusube.hatenablog.com/entry/2022/02/19/181101#P2520R0-move_iteratorT-should-be-a-random-access-iterator",
    "tag": ""
  },
  {
    "number": "P2521",
    "title": "Contract support -- Record of SG21 consensus",
    "url": "https://wg21.link/P2521",
    "ja": "https://onihusube.hatenablog.com/entry/2023/03/19/184146#P2521R3-Contract-support----Record-of-SG21-consensus",
    "ja_old": "https://onihusube.hatenablog.com/entry/2022/02/19/181101#P2521R0-Contract-support----Working-Paper",
    "tag": ""
  },
  {
    "number": "P2523",
    "title": "Request for re-inclusion of std::hive proposal in C++23",
    "url": "https://wg21.link/P2523",
    "ja": "https://onihusube.hatenablog.com/entry/2022/02/19/181101#P2523R0-Request-for-re-inclusion-of-stdhive-proposal-in-C23",
    "ja_old": "https://onihusube.hatenablog.com/entry/2022/02/19/181101#P2523R0-Request-for-re-inclusion-of-stdhive-proposal-in-C23",
    "tag": ""
  },
  {
    "number": "P2524",
    "title": "SG14: Low Latency/Games/Embedded/Finance/Simulation 2020/12/09-2022/01/12",
    "url": "https://wg21.link/P2524",
    "ja": "https://onihusube.hatenablog.com/entry/2022/02/19/181101#P2524R0-SG14-Low-LatencyGamesEmbeddedFinanceSimulation-20201209-20220112",
    "ja_old": "https://onihusube.hatenablog.com/entry/2022/02/19/181101#P2524R0-SG14-Low-LatencyGamesEmbeddedFinanceSimulation-20201209-20220112",
    "tag": ""
  },
  {
    "number": "P2525",
    "title": "SG19: Machine Learning Meeting Minutes 2020/12/10-2022/01/13",
    "url": "https://wg21.link/P2525",
    "ja": "https://onihusube.hatenablog.com/entry/2022/02/19/181101#P2525R0-SG19-Machine-Learning-Meeting-Minutes-20201210-20220113",
    "ja_old": "https://onihusube.hatenablog.com/entry/2022/02/19/181101#P2525R0-SG19-Machine-Learning-Meeting-Minutes-20201210-20220113",
    "tag": ""
  },
  {
    "number": "P2527",
    "title": "std::variant_alternative_index and std::tuple_element_index",
    "url": "https://wg21.link/P2527",
    "ja": "https://onihusube.hatenablog.com/entry/2023/03/19/184146#P2527R2-stdvariant_alternative_index-and-stdtuple_element_index",
    "ja_old": "https://onihusube.hatenablog.com/entry/2022/02/19/181101#P2527R0-stdvariant_alternative_index-and-stdvariant_alternative_index_v",
    "tag": ""
  },
  {
    "number": "P2528",
    "title": "C/C++ Identifier Security using Unicode Standard Annex 39",
    "url": "https://wg21.link/P2528",
    "ja": "https://onihusube.hatenablog.com/entry/2022/03/19/224729#P2528R0-CC-Identifier-Security-using-Unicode-Standard-Annex-39",
    "ja_old": "https://onihusube.hatenablog.com/entry/2022/03/19/224729#P2528R0-CC-Identifier-Security-using-Unicode-Standard-Annex-39",
    "tag": ""
  },
  {
    "number": "P2529",
    "title": "generator should have T&& reference_type",
    "url": "https://wg21.link/P2529",
    "ja": "https://onihusube.hatenablog.com/entry/2022/03/19/224729#P2529R0-generator-should-have-T-reference_type",
    "ja_old": "https://onihusube.hatenablog.com/entry/2022/03/19/224729#P2529R0-generator-should-have-T-reference_type",
    "tag": ""
  },
  {
    "number": "P2530",
    "title": "Hazard Pointers for C++26",
    "url": "https://wg21.link/P2530",
    "ja": "https://onihusube.hatenablog.com/entry/2023/02/12/210302#P2530R2-Why-Hazard-Pointers-should-be-in-C26",
    "ja_old": "https://onihusube.hatenablog.com/entry/2022/03/19/224729#P2530R0-Why-Hazard-Pointers-should-be-in-C26",
    "tag": ""
  },
  {
    "number": "P2531",
    "title": "C++ Standard Library Issues to be moved in Virtual Plenary, Feb. 2022",
    "url": "https://wg21.link/P2531",
    "ja": "https://onihusube.hatenablog.com/entry/2022/03/19/224729#P2531R0-C-Standard-Library-Issues-to-be-moved-in-Virtual-Plenary-Feb-2022",
    "ja_old": "https://onihusube.hatenablog.com/entry/2022/03/19/224729#P2531R0-C-Standard-Library-Issues-to-be-moved-in-Virtual-Plenary-Feb-2022",
    "tag": ""
  },
  {
    "number": "P2532",
    "title": "Removing exception_ptr from the Receiver Concepts",
    "url": "https://wg21.link/P2532",
    "ja": "https://onihusube.hatenablog.com/entry/2022/03/19/224729#P2532R0-Removing-exception_ptr-from-the-Receiver-Concepts",
    "ja_old": "https://onihusube.hatenablog.com/entry/2022/03/19/224729#P2532R0-Removing-exception_ptr-from-the-Receiver-Concepts",
    "tag": ""
  },
  {
    "number": "P2533",
    "title": "Core Language Working Group \"ready\" Issues for the February, 2022 meeting",
    "url": "https://wg21.link/P2533",
    "ja": "https://onihusube.hatenablog.com/entry/2022/03/19/224729#P2533R0-Core-Language-Working-Group-ready-Issues-for-the-February-2022-meeting",
    "ja_old": "https://onihusube.hatenablog.com/entry/2022/03/19/224729#P2533R0-Core-Language-Working-Group-ready-Issues-for-the-February-2022-meeting",
    "tag": ""
  },
  {
    "number": "P2534",
    "title": "Slides: function_ref in the wild (P0792R7 presentation)",
    "url": "https://wg21.link/P2534",
    "ja": "https://onihusube.hatenablog.com/entry/2022/03/19/224729#P2534R0-Slides-function_ref-in-the-wild-P0792R7-presentation",
    "ja_old": "https://onihusube.hatenablog.com/entry/2022/03/19/224729#P2534R0-Slides-function_ref-in-the-wild-P0792R7-presentation",
    "tag": ""
  },
  {
    "number": "P2535",
    "title": "Message fences",
    "url": "https://wg21.link/P2535",
    "ja": "https://onihusube.hatenablog.com/entry/2022/03/19/224729#P2535R0-Message-fences",
    "ja_old": "https://onihusube.hatenablog.com/entry/2022/03/19/224729#P2535R0-Message-fences",
    "tag": ""
  },
  {
    "number": "P2536",
    "title": "Distributing C++ Module Libraries with dependencies json files.",
    "url": "https://wg21.link/P2536",
    "ja": "https://onihusube.hatenablog.com/entry/2022/03/19/224729#P2536R0-Distributing-C-Module-Libraries-with-dependencies-json-files",
    "ja_old": "https://onihusube.hatenablog.com/entry/2022/03/19/224729#P2536R0-Distributing-C-Module-Libraries-with-dependencies-json-files",
    "tag": ""
  },
  {
    "number": "P2537",
    "title": "Relax va_start Requirements to Match C",
    "url": "https://wg21.link/P2537",
    "ja": "https://onihusube.hatenablog.com/entry/2023/02/12/210302#P2537R2-Relax-va_start-Requirements-to-Match-C",
    "ja_old": "https://onihusube.hatenablog.com/entry/2022/03/19/224729#P2537R0-Relax-va_start-Requirements-to-Match-C",
    "tag": ""
  },
  {
    "number": "P2538",
    "title": "ADL-proof std::projected",
    "url": "https://wg21.link/P2538",
    "ja": "https://onihusube.hatenablog.com/entry/2022/05/08/195618#P2538R1-ADL-proof-stdprojected",
    "ja_old": "https://onihusube.hatenablog.com/entry/2022/03/19/224729#P2538R0-ADL-proof-stdprojected",
    "tag": ""
  },
  {
    "number": "P2539",
    "title": "Should the output of std::print to a terminal be synchronized with the underlying stream?",
    "url": "https://wg21.link/P2539",
    "ja": "https://onihusube.hatenablog.com/entry/2022/11/13/233529#P2539R3-Should-the-output-of-stdprint-to-a-terminal-be-synchronized-with-the-underlying-stream",
    "ja_old": "https://onihusube.hatenablog.com/entry/2022/04/02/175835#P2539R0-Should-the-output-of-stdprint-to-a-terminal-be-synchronized-with-the-underlying-stream",
    "tag": ""
  },
  {
    "number": "P2540",
    "title": "Empty Product for certain Views",
    "url": "https://wg21.link/P2540",
    "ja": "https://onihusube.hatenablog.com/entry/2022/04/02/175835#P2540R1-Empty-Product-for-certain-Views",
    "ja_old": "https://onihusube.hatenablog.com/entry/2022/03/19/224729#P2540R0-Empty-Product-for-certain-Views",
    "tag": ""
  },
  {
    "number": "P2541",
    "title": "Consider renaming remove_quals",
    "url": "https://wg21.link/P2541",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P2542",
    "title": "views::concat",
    "url": "https://wg21.link/P2542",
    "ja": "https://onihusube.hatenablog.com/entry/2022/06/11/191943#P2542R2-viewsconcat",
    "ja_old": "https://onihusube.hatenablog.com/entry/2022/03/19/224729#P2542R0-viewsconcat",
    "tag": ""
  },
  {
    "number": "P2544",
    "title": "C++ exceptions are becoming more and more problematic",
    "url": "https://wg21.link/P2544",
    "ja": "https://onihusube.hatenablog.com/entry/2022/03/19/224729#P2544R0-C-exceptions-are-becoming-more-and-more-problematic",
    "ja_old": "https://onihusube.hatenablog.com/entry/2022/03/19/224729#P2544R0-C-exceptions-are-becoming-more-and-more-problematic",
    "tag": ""
  },
  {
    "number": "P2545",
    "title": "Read-Copy Update (RCU)",
    "url": "https://wg21.link/P2545",
    "ja": "https://onihusube.hatenablog.com/entry/2023/03/19/184146#P2545R3-Why-RCU-Should-be-in-C26",
    "ja_old": "https://onihusube.hatenablog.com/entry/2022/03/19/224729#P2545R0-Why-RCU-Should-be-in-C26",
    "tag": ""
  },
  {
    "number": "P2546",
    "title": "Debugging Support",
    "url": "https://wg21.link/P2546",
    "ja": "https://onihusube.hatenablog.com/entry/2022/11/13/233529#P2546R2-Debugging-Support",
    "ja_old": "https://onihusube.hatenablog.com/entry/2022/03/19/224729#P2546R0-Debugging-Support",
    "tag": ""
  },
  {
    "number": "P2547",
    "title": "Language support for customisable functions",
    "url": "https://wg21.link/P2547",
    "ja": "https://onihusube.hatenablog.com/entry/2022/08/11/193828#P2547R1-Language-support-for-customisable-functions",
    "ja_old": "https://onihusube.hatenablog.com/entry/2022/03/19/224729#P2547R0-Language-support-for-customisable-functions",
    "tag": ""
  },
  {
    "number": "P2548",
    "title": "copyable_function",
    "url": "https://wg21.link/P2548",
    "ja": "https://onihusube.hatenablog.com/entry/2022/11/13/233529#P2548R1-copyable_function",
    "ja_old": "https://onihusube.hatenablog.com/entry/2022/08/11/193828#P2548R0-copyable_function",
    "tag": ""
  },
  {
    "number": "P2549",
    "title": "std::unexpected should have error() as member accessor",
    "url": "https://wg21.link/P2549",
    "ja": "https://onihusube.hatenablog.com/entry/2022/08/11/193828#P2549R1-stdunexpected-should-have-error-as-member-accessor",
    "ja_old": "https://onihusube.hatenablog.com/entry/2022/03/19/224729#P2549R0-stdunexpected-should-have-error-as-member-accessor",
    "tag": ""
  },
  {
    "number": "P2550",
    "title": "ranges::copy should say output_iterator somewhere",
    "url": "https://wg21.link/P2550",
    "ja": "https://onihusube.hatenablog.com/entry/2022/03/19/224729#P2550R0-rangescopy-should-say-output_iterator-somewhere",
    "ja_old": "https://onihusube.hatenablog.com/entry/2022/03/19/224729#P2550R0-rangescopy-should-say-output_iterator-somewhere",
    "tag": ""
  },
  {
    "number": "P2551",
    "title": "Clarify intent of P1841 numeric traits",
    "url": "https://wg21.link/P2551",
    "ja": "https://onihusube.hatenablog.com/entry/2022/07/09/160343#P2551R2-Clarify-intent-of-P1841-numeric-traits",
    "ja_old": "https://onihusube.hatenablog.com/entry/2022/03/19/224729#P2551R0-Clarify-intent-of-P1841-numeric-traits",
    "tag": ""
  },
  {
    "number": "P2552",
    "title": "On the ignorability of standard attributes",
    "url": "https://wg21.link/P2552",
    "ja": "https://onihusube.hatenablog.com/entry/2022/03/19/224729#P2552R0-On-the-ignorability-of-standard-attributes",
    "ja_old": "https://onihusube.hatenablog.com/entry/2022/03/19/224729#P2552R0-On-the-ignorability-of-standard-attributes",
    "tag": ""
  },
  {
    "number": "P2553",
    "title": "Make mdspan size_type controllable",
    "url": "https://wg21.link/P2553",
    "ja": "https://onihusube.hatenablog.com/entry/2022/04/02/175835#P2553R1-Make-mdspan-size_type-controllable",
    "ja_old": "https://onihusube.hatenablog.com/entry/2022/03/19/224729#P2553R0-Make-mdspan-size_type-controllable",
    "tag": ""
  },
  {
    "number": "P2554",
    "title": "C-Array Interoperability of MDSpan",
    "url": "https://wg21.link/P2554",
    "ja": "https://onihusube.hatenablog.com/entry/2022/03/19/224729#P2554R0-C-Array-Interoperability-of-MDSpan",
    "ja_old": "https://onihusube.hatenablog.com/entry/2022/03/19/224729#P2554R0-C-Array-Interoperability-of-MDSpan",
    "tag": ""
  },
  {
    "number": "P2555",
    "title": "Naming improvements for std::execution",
    "url": "https://wg21.link/P2555",
    "ja": "https://onihusube.hatenablog.com/entry/2022/04/02/175835#P2555R1-Naming-improvements-for-stdexecution",
    "ja_old": "https://onihusube.hatenablog.com/entry/2022/03/19/224729#P2555R0-Naming-improvements-for-stdexecution",
    "tag": ""
  },
  {
    "number": "P2557",
    "title": "WG21 2022-02 Virtual Meeting Record of Discussion",
    "url": "https://wg21.link/P2557",
    "ja": "https://onihusube.hatenablog.com/entry/2022/03/19/224729#P2557R0-WG21-2022-02-Virtual-Meeting-Record-of-Discussion",
    "ja_old": "https://onihusube.hatenablog.com/entry/2022/03/19/224729#P2557R0-WG21-2022-02-Virtual-Meeting-Record-of-Discussion",
    "tag": ""
  },
  {
    "number": "P2558",
    "title": "Add @, $, and ` to the basic character set",
    "url": "https://wg21.link/P2558",
    "ja": "https://onihusube.hatenablog.com/entry/2023/03/19/184146#P2558R2-Add---and--to-the-basic-character-set",
    "ja_old": "https://onihusube.hatenablog.com/entry/2022/04/02/175835#P2558R0-Add---and--to-the-basic-character-set",
    "tag": ""
  },
  {
    "number": "P2559",
    "title": "Plan for Concurrency Technical Specification Version 2",
    "url": "https://wg21.link/P2559",
    "ja": "https://onihusube.hatenablog.com/entry/2022/05/08/195618#P2559R0-Plan-for-Concurrency-Technical-Specification-Version-2",
    "ja_old": "https://onihusube.hatenablog.com/entry/2022/05/08/195618#P2559R0-Plan-for-Concurrency-Technical-Specification-Version-2",
    "tag": ""
  },
  {
    "number": "P2560",
    "title": "Comparing value- and type-based reflection",
    "url": "https://wg21.link/P2560",
    "ja": "https://onihusube.hatenablog.com/entry/2022/04/02/175835#P2560R0-Comparing-value--and-type-based-reflection",
    "ja_old": "https://onihusube.hatenablog.com/entry/2022/04/02/175835#P2560R0-Comparing-value--and-type-based-reflection",
    "tag": ""
  },
  {
    "number": "P2561",
    "title": "An error propagation operator",
    "url": "https://wg21.link/P2561",
    "ja": "https://onihusube.hatenablog.com/entry/2022/11/13/233529#P2561R1-An-error-propagation-operator",
    "ja_old": "https://onihusube.hatenablog.com/entry/2022/08/11/193828#P2561R0-operator",
    "tag": ""
  },
  {
    "number": "P2562",
    "title": "constexpr Stable Sorting",
    "url": "https://wg21.link/P2562",
    "ja": "https://onihusube.hatenablog.com/entry/2022/07/09/160343#P2562R1-constexpr-Stable-Sorting",
    "ja_old": "https://onihusube.hatenablog.com/entry/2022/04/02/175835#P2562R0-constexpr-Stable-Sorting",
    "tag": ""
  },
  {
    "number": "P2564",
    "title": "consteval needs to propagate up",
    "url": "https://wg21.link/P2564",
    "ja": "https://onihusube.hatenablog.com/entry/2022/04/02/175835#P2564R0-consteval-needs-to-propagate-up",
    "ja_old": "https://onihusube.hatenablog.com/entry/2022/04/02/175835#P2564R0-consteval-needs-to-propagate-up",
    "tag": ""
  },
  {
    "number": "P2565",
    "title": "Supporting User-Defined Attributes",
    "url": "https://wg21.link/P2565",
    "ja": "https://onihusube.hatenablog.com/entry/2022/04/02/175835#P2565R0-Supporting-User-Defined-Attributes",
    "ja_old": "https://onihusube.hatenablog.com/entry/2022/04/02/175835#P2565R0-Supporting-User-Defined-Attributes",
    "tag": ""
  },
  {
    "number": "P2568",
    "title": "Proposal of std::map::at_ptr",
    "url": "https://wg21.link/P2568",
    "ja": "https://onihusube.hatenablog.com/entry/2022/04/02/175835#P2568R0-Proposal-of-stdmapat_ptr",
    "ja_old": "https://onihusube.hatenablog.com/entry/2022/04/02/175835#P2568R0-Proposal-of-stdmapat_ptr",
    "tag": ""
  },
  {
    "number": "P2569",
    "title": "*_HAS_SUBNORM==0 implies what?",
    "url": "https://wg21.link/P2569",
    "ja": "https://onihusube.hatenablog.com/entry/2022/04/02/175835#P2569R0-_HAS_SUBNORM0-implies-what",
    "ja_old": "https://onihusube.hatenablog.com/entry/2022/04/02/175835#P2569R0-_HAS_SUBNORM0-implies-what",
    "tag": ""
  },
  {
    "number": "P2570",
    "title": "Contract predicates that are not predicates",
    "url": "https://wg21.link/P2570",
    "ja": "https://onihusube.hatenablog.com/entry/2023/02/12/210302#P2570R2-Contract-predicates-that-are-not-predicates",
    "ja_old": "https://onihusube.hatenablog.com/entry/2022/07/09/160343#P2570R0-On-side-effects-in-contract-annotations",
    "tag": ""
  },
  {
    "number": "P2572",
    "title": "std::format() fill character allowances",
    "url": "https://wg21.link/P2572",
    "ja": "https://onihusube.hatenablog.com/entry/2023/03/19/184146#P2572R1-stdformat-fill-character-allowances",
    "ja_old": "https://onihusube.hatenablog.com/entry/2022/07/09/160343#P2572R0-stdformat-fill-character-allowances",
    "tag": ""
  },
  {
    "number": "P2573",
    "title": "= delete(\"should have a reason\");",
    "url": "https://wg21.link/P2573",
    "ja": "https://onihusube.hatenablog.com/entry/2022/05/08/195618#P2573R0--deleteshould-have-a-reason",
    "ja_old": "https://onihusube.hatenablog.com/entry/2022/05/08/195618#P2573R0--deleteshould-have-a-reason",
    "tag": ""
  },
  {
    "number": "P2574",
    "title": "2022-05 Library Evolution Polls",
    "url": "https://wg21.link/P2574",
    "ja": "https://onihusube.hatenablog.com/entry/2022/05/08/195618#P2574R0-2022-05-Library-Evolution-Polls",
    "ja_old": "https://onihusube.hatenablog.com/entry/2022/05/08/195618#P2574R0-2022-05-Library-Evolution-Polls",
    "tag": ""
  },
  {
    "number": "P2575",
    "title": "2022-05 Library Evolution Poll Outcomes",
    "url": "https://wg21.link/P2575",
    "ja": "https://onihusube.hatenablog.com/entry/2022/07/09/160343#P2575R0-2022-05-Library-Evolution-Poll-Outcomes",
    "ja_old": "https://onihusube.hatenablog.com/entry/2022/07/09/160343#P2575R0-2022-05-Library-Evolution-Poll-Outcomes",
    "tag": ""
  },
  {
    "number": "P2576",
    "title": "The constexpr specifier for object definitions",
    "url": "https://wg21.link/P2576",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P2577",
    "title": "C++ Modules Discovery in Prebuilt Library Releases",
    "url": "https://wg21.link/P2577",
    "ja": "https://onihusube.hatenablog.com/entry/2022/06/11/191943#P2577R2-C-Modules-Discovery-in-Prebuilt-Library-Releases",
    "ja_old": "https://onihusube.hatenablog.com/entry/2022/05/08/195618#P2577R0-C-Modules-Discovery-in-Prebuilt-Library-Releases",
    "tag": ""
  },
  {
    "number": "P2579",
    "title": "Mitigation strategies for P2036 “Changing scope for lambda trailing-return-type”",
    "url": "https://wg21.link/P2579",
    "ja": "https://onihusube.hatenablog.com/entry/2022/08/11/193828#P2579R0-Mitigation-strategies-for-P2036-Changing-scope-for-lambda-trailing-return-type",
    "ja_old": "https://onihusube.hatenablog.com/entry/2022/08/11/193828#P2579R0-Mitigation-strategies-for-P2036-Changing-scope-for-lambda-trailing-return-type",
    "tag": ""
  },
  {
    "number": "P2580",
    "title": "Tuple protocol for C-style arrays T[N]",
    "url": "https://wg21.link/P2580",
    "ja": "https://onihusube.hatenablog.com/entry/2022/06/11/191943#P2580R0-Tuple-protocol-for-C-style-arrays-TN",
    "ja_old": "https://onihusube.hatenablog.com/entry/2022/06/11/191943#P2580R0-Tuple-protocol-for-C-style-arrays-TN",
    "tag": ""
  },
  {
    "number": "P2581",
    "title": "Specifying the Interoperability of Built Module Interface Files",
    "url": "https://wg21.link/P2581",
    "ja": "https://onihusube.hatenablog.com/entry/2022/11/13/233529#P2581R2-Specifying-the-Interoperability-of-Built-Module-Interface-Files",
    "ja_old": "https://onihusube.hatenablog.com/entry/2022/06/11/191943#P2581R0-Specifying-the-Interoperability-of-Binary-Module-Interface-Files",
    "tag": ""
  },
  {
    "number": "P2582",
    "title": "Wording for class template argument deduction from inherited constructors",
    "url": "https://wg21.link/P2582",
    "ja": "https://onihusube.hatenablog.com/entry/2022/07/09/160343#P2582R1-Wording-for-class-template-argument-deduction-from-inherited-constructors",
    "ja_old": "https://onihusube.hatenablog.com/entry/2022/06/11/191943#P2582R0-Wording-for-class-template-argument-deduction-from-inherited-constructors",
    "tag": ""
  },
  {
    "number": "P2584",
    "title": "A More Composable from_chars",
    "url": "https://wg21.link/P2584",
    "ja": "https://onihusube.hatenablog.com/entry/2022/06/11/191943#P2584R0-A-More-Composable-from_chars",
    "ja_old": "https://onihusube.hatenablog.com/entry/2022/06/11/191943#P2584R0-A-More-Composable-from_chars",
    "tag": ""
  },
  {
    "number": "P2585",
    "title": "Improving default container formatting",
    "url": "https://wg21.link/P2585",
    "ja": "https://onihusube.hatenablog.com/entry/2022/08/11/193828#P2585R1-Improving-default-container-formatting",
    "ja_old": "https://onihusube.hatenablog.com/entry/2022/06/11/191943#P2585R0-Improving-default-container-formatting",
    "tag": ""
  },
  {
    "number": "P2586",
    "title": "Standard Secure Networking",
    "url": "https://wg21.link/P2586",
    "ja": "https://onihusube.hatenablog.com/entry/2022/10/09/021557#P2586R0-Standard-Secure-Networking",
    "ja_old": "https://onihusube.hatenablog.com/entry/2022/10/09/021557#P2586R0-Standard-Secure-Networking",
    "tag": ""
  },
  {
    "number": "P2587",
    "title": "to_string or not to_string",
    "url": "https://wg21.link/P2587",
    "ja": "https://onihusube.hatenablog.com/entry/2022/10/09/021557#P2587R3-to_string-or-not-to_string",
    "ja_old": "https://onihusube.hatenablog.com/entry/2022/06/11/191943#P2587R0-to_string-or-not-to_string",
    "tag": ""
  },
  {
    "number": "P2588",
    "title": "Relax std::barrier phase completion step guarantees",
    "url": "https://wg21.link/P2588",
    "ja": "https://onihusube.hatenablog.com/entry/2023/03/19/184146#P2588R3-Relax-stdbarrier-phase-completion-step-guarantees",
    "ja_old": "https://onihusube.hatenablog.com/entry/2022/06/11/191943#P2588R0-Relax-stdbarrier-phase-completion-step-guarantees",
    "tag": ""
  },
  {
    "number": "P2589",
    "title": "static operator[]",
    "url": "https://wg21.link/P2589",
    "ja": "https://onihusube.hatenablog.com/entry/2022/06/11/191943#P2589R0-static-operator",
    "ja_old": "https://onihusube.hatenablog.com/entry/2022/06/11/191943#P2589R0-static-operator",
    "tag": ""
  },
  {
    "number": "P2590",
    "title": "Explicit lifetime management",
    "url": "https://wg21.link/P2590",
    "ja": "https://onihusube.hatenablog.com/entry/2022/08/11/193828#P2590R2-Explicit-lifetime-management",
    "ja_old": "https://onihusube.hatenablog.com/entry/2022/06/11/191943#P2590R0-Explicit-lifetime-management",
    "tag": ""
  },
  {
    "number": "P2591",
    "title": "Concatenation of strings and string views",
    "url": "https://wg21.link/P2591",
    "ja": "https://onihusube.hatenablog.com/entry/2023/03/19/184146#P2591R3-Concatenation-of-strings-and-string-views",
    "ja_old": "https://onihusube.hatenablog.com/entry/2022/06/11/191943#P2591R0-Concatenation-of-strings-and-string-views",
    "tag": ""
  },
  {
    "number": "P2592",
    "title": "Hashing support for std::chrono value classes",
    "url": "https://wg21.link/P2592",
    "ja": "https://onihusube.hatenablog.com/entry/2023/03/19/184146#P2592R3-Hashing-support-for-stdchrono-value-classes",
    "ja_old": "https://onihusube.hatenablog.com/entry/2022/06/11/191943#P2592R0-Hashing-support-for-stdchrono-value-classes",
    "tag": ""
  },
  {
    "number": "P2593",
    "title": "Allowing static_assert(false)",
    "url": "https://wg21.link/P2593",
    "ja": "https://onihusube.hatenablog.com/entry/2023/03/19/184146#P2593R1-Allowing-static_assertfalse",
    "ja_old": "https://onihusube.hatenablog.com/entry/2022/06/11/191943#P2593R0-Allowing-static_assertfalse",
    "tag": ""
  },
  {
    "number": "P2594",
    "title": "Slides: Allow programmer to control coroutine elision (P2477R3 Presentation))",
    "url": "https://wg21.link/P2594",
    "ja": "https://onihusube.hatenablog.com/entry/2023/03/19/184146#P2594R1-Slides-Allow-programmer-to-control-coroutine-elision-P2477R3-Presentation",
    "ja_old": "https://onihusube.hatenablog.com/entry/2022/07/09/160343#P2594R0-Slides-Allow-programmer-to-control-and-detect-coroutine-elision-P2477R2-Presentation",
    "tag": ""
  },
  {
    "number": "P2596",
    "title": "Improve std::hive::reshape",
    "url": "https://wg21.link/P2596",
    "ja": "https://onihusube.hatenablog.com/entry/2022/07/09/160343#P2596R0-Improve-stdhivereshape",
    "ja_old": "https://onihusube.hatenablog.com/entry/2022/07/09/160343#P2596R0-Improve-stdhivereshape",
    "tag": ""
  },
  {
    "number": "P2598",
    "title": "“Changing scope for lambda trailing-return-type” (P2036) should not be a DR",
    "url": "https://wg21.link/P2598",
    "ja": "https://onihusube.hatenablog.com/entry/2022/07/09/160343#P2598R0-Changing-scope-for-lambda-trailing-return-type-P2036-should-not-be-a-DR",
    "ja_old": "https://onihusube.hatenablog.com/entry/2022/07/09/160343#P2598R0-Changing-scope-for-lambda-trailing-return-type-P2036-should-not-be-a-DR",
    "tag": ""
  },
  {
    "number": "P2599",
    "title": "index _type & size_type in mdspan",
    "url": "https://wg21.link/P2599",
    "ja": "https://onihusube.hatenablog.com/entry/2022/07/09/160343#P2599R2-index_type--size_type-in-mdspan",
    "ja_old": "https://onihusube.hatenablog.com/entry/2022/07/09/160343#P2599R0-mdspansize_type-should-be-index_type",
    "tag": ""
  },
  {
    "number": "P2600",
    "title": "A minimal ADL restriction to avoid ill-formed template instantiation",
    "url": "https://wg21.link/P2600",
    "ja": "https://onihusube.hatenablog.com/entry/2022/07/09/160343#P2600R0-A-minimal-ADL-restriction-to-avoid-ill-formed-template-instantiation",
    "ja_old": "https://onihusube.hatenablog.com/entry/2022/07/09/160343#P2600R0-A-minimal-ADL-restriction-to-avoid-ill-formed-template-instantiation",
    "tag": ""
  },
  {
    "number": "P2601",
    "title": "Make redundant empty angle brackets optional",
    "url": "https://wg21.link/P2601",
    "ja": "https://onihusube.hatenablog.com/entry/2022/08/11/193828#P2601R1-Make-redundant-empty-angle-brackets-optional",
    "ja_old": "https://onihusube.hatenablog.com/entry/2022/07/09/160343#P2601R0-To-make-redundant-empty-angle-brackets-optional-for-class-template-argument-lists",
    "tag": ""
  },
  {
    "number": "P2602",
    "title": "Poison Pills are Too Toxic",
    "url": "https://wg21.link/P2602",
    "ja": "https://onihusube.hatenablog.com/entry/2022/08/11/193828#P2602R1-Poison-Pills-are-Too-Toxic",
    "ja_old": "https://onihusube.hatenablog.com/entry/2022/07/09/160343#P2602R0-Poison-Pills-are-Too-Toxic",
    "tag": ""
  },
  {
    "number": "P2603",
    "title": "member function pointer to function pointer",
    "url": "https://wg21.link/P2603",
    "ja": "https://onihusube.hatenablog.com/entry/2022/10/09/021557#P2603R1-member-function-pointer-to-function-pointer",
    "ja_old": "https://onihusube.hatenablog.com/entry/2022/07/09/160343#P2603R0-member-function-pointer-to-function-pointer",
    "tag": ""
  },
  {
    "number": "P2604",
    "title": "MDSPAN: rename pointer and contiguous",
    "url": "https://wg21.link/P2604",
    "ja": "https://onihusube.hatenablog.com/entry/2022/07/09/160343#P2604R0-MDSPAN-rename-pointer-and-contiguous",
    "ja_old": "https://onihusube.hatenablog.com/entry/2022/07/09/160343#P2604R0-MDSPAN-rename-pointer-and-contiguous",
    "tag": ""
  },
  {
    "number": "P2605",
    "title": "SG16: Unicode meeting summaries 2022-01-12 through 2022-06-08",
    "url": "https://wg21.link/P2605",
    "ja": "https://onihusube.hatenablog.com/entry/2022/07/09/160343#P2605R0-SG16-Unicode-meeting-summaries-2022-01-12-through-2022-06-08",
    "ja_old": "https://onihusube.hatenablog.com/entry/2022/07/09/160343#P2605R0-SG16-Unicode-meeting-summaries-2022-01-12-through-2022-06-08",
    "tag": ""
  },
  {
    "number": "P2607",
    "title": "Let alignas specify minimum alignment",
    "url": "https://wg21.link/P2607",
    "ja": "https://onihusube.hatenablog.com/entry/2022/07/09/160343#P2607R0-Let-alignas-specify-minimum-alignment",
    "ja_old": "https://onihusube.hatenablog.com/entry/2022/07/09/160343#P2607R0-Let-alignas-specify-minimum-alignment",
    "tag": ""
  },
  {
    "number": "P2608",
    "title": "Allow multiple init-statements",
    "url": "https://wg21.link/P2608",
    "ja": "https://onihusube.hatenablog.com/entry/2022/07/09/160343#P2608R0-Allow-multiple-init-statements",
    "ja_old": "https://onihusube.hatenablog.com/entry/2022/07/09/160343#P2608R0-Allow-multiple-init-statements",
    "tag": ""
  },
  {
    "number": "P2609",
    "title": "Relaxing Ranges Just A Smidge",
    "url": "https://wg21.link/P2609",
    "ja": "https://onihusube.hatenablog.com/entry/2023/03/19/184146#P2609R3-Relaxing-Ranges-Just-A-Smidge",
    "ja_old": "https://onihusube.hatenablog.com/entry/2022/07/09/160343#P2609R0-Relaxing-Ranges-Just-A-Smidge",
    "tag": ""
  },
  {
    "number": "P2610",
    "title": "2022-07 Library Evolution Polls",
    "url": "https://wg21.link/P2610",
    "ja": "https://onihusube.hatenablog.com/entry/2022/08/11/193828#P2610R0-2022-07-Library-Evolution-Polls",
    "ja_old": "https://onihusube.hatenablog.com/entry/2022/08/11/193828#P2610R0-2022-07-Library-Evolution-Polls",
    "tag": ""
  },
  {
    "number": "P2611",
    "title": "2022-07 Library Evolution Poll Outcomes",
    "url": "https://wg21.link/P2611",
    "ja": "https://onihusube.hatenablog.com/entry/2022/09/04/141015#P2611R0-2022-07-Library-Evolution-Poll-Outcomes",
    "ja_old": "https://onihusube.hatenablog.com/entry/2022/09/04/141015#P2611R0-2022-07-Library-Evolution-Poll-Outcomes",
    "tag": ""
  },
  {
    "number": "P2613",
    "title": "Add the missing `empty` to `mdspan`",
    "url": "https://wg21.link/P2613",
    "ja": "https://onihusube.hatenablog.com/entry/2022/08/11/193828#P2613R1-Add-the-missing-empty-to-mdspan",
    "ja_old": "https://onihusube.hatenablog.com/entry/2022/07/09/160343#P2613R0-Add-the-missing-empty-to-mdspan",
    "tag": ""
  },
  {
    "number": "P2614",
    "title": "Deprecate numeric_limits::has_denorm",
    "url": "https://wg21.link/P2614",
    "ja": "https://onihusube.hatenablog.com/entry/2022/11/13/233529#P2614R1-Deprecate-numeric_limitshas_denorm",
    "ja_old": "https://onihusube.hatenablog.com/entry/2022/08/11/193828#P2614R0-Deprecate-numeric_limitshas_denorm",
    "tag": ""
  },
  {
    "number": "P2615",
    "title": "Meaningful exports",
    "url": "https://wg21.link/P2615",
    "ja": "https://onihusube.hatenablog.com/entry/2022/08/11/193828#P2615R0-Meaningful-exports",
    "ja_old": "https://onihusube.hatenablog.com/entry/2022/08/11/193828#P2615R0-Meaningful-exports",
    "tag": ""
  },
  {
    "number": "P2616",
    "title": "Making std::atomic notification/wait operations usable in more situations",
    "url": "https://wg21.link/P2616",
    "ja": "https://onihusube.hatenablog.com/entry/2023/03/19/184146#P2616R4-Making-stdatomic-notificationwait-operations-usable-in-more-situations",
    "ja_old": "https://onihusube.hatenablog.com/entry/2022/08/11/193828#P2616R0-Making-stdatomic-notificationwait-operations-usable-in-more-situations",
    "tag": ""
  },
  {
    "number": "P2617",
    "title": "Responses to NB comments on DTS 12907 \"Extensions to C++ for Transactional Memory Version 2\"",
    "url": "https://wg21.link/P2617",
    "ja": "https://onihusube.hatenablog.com/entry/2022/08/11/193828#P2617R0-Responses-to-NB-comments-on-DTS-12907-Extensions-to-C-for-Transactional-Memory-Version-2",
    "ja_old": "https://onihusube.hatenablog.com/entry/2022/08/11/193828#P2617R0-Responses-to-NB-comments-on-DTS-12907-Extensions-to-C-for-Transactional-Memory-Version-2",
    "tag": ""
  },
  {
    "number": "P2618",
    "title": "C++ Standard Library Issues to be moved in Virtual Plenary, Jul. 2022",
    "url": "https://wg21.link/P2618",
    "ja": "https://onihusube.hatenablog.com/entry/2022/08/11/193828#P2618R0-C-Standard-Library-Issues-to-be-moved-in-Virtual-Plenary-Jul-2022",
    "ja_old": "https://onihusube.hatenablog.com/entry/2022/08/11/193828#P2618R0-C-Standard-Library-Issues-to-be-moved-in-Virtual-Plenary-Jul-2022",
    "tag": ""
  },
  {
    "number": "P2620",
    "title": "Improve the wording for Universal Character Names in identifiers",
    "url": "https://wg21.link/P2620",
    "ja": "https://onihusube.hatenablog.com/entry/2022/10/09/021557#P2620R2-Improve-the-wording-for-Universal-Character-Names-in-identifiers",
    "ja_old": "https://onihusube.hatenablog.com/entry/2022/08/11/193828#P2620R0-Lifting-artificial-restriction-on-universal-character-names",
    "tag": ""
  },
  {
    "number": "P2621",
    "title": "UB? In my Lexer?",
    "url": "https://wg21.link/P2621",
    "ja": "https://onihusube.hatenablog.com/entry/2023/03/19/184146#P2621R2-UB-In-my-Lexer",
    "ja_old": "https://onihusube.hatenablog.com/entry/2022/08/11/193828#P2621R0-UB-In-my-Lexer",
    "tag": ""
  },
  {
    "number": "P2622",
    "title": "Core Language Working Group \"ready\" Issues for the July, 2022 meeting",
    "url": "https://wg21.link/P2622",
    "ja": "https://onihusube.hatenablog.com/entry/2022/08/11/193828#P2622R0-Core-Language-Working-Group-ready-Issues-for-the-July-2022-meeting",
    "ja_old": "https://onihusube.hatenablog.com/entry/2022/08/11/193828#P2622R0-Core-Language-Working-Group-ready-Issues-for-the-July-2022-meeting",
    "tag": ""
  },
  {
    "number": "P2623",
    "title": "implicit constant initialization",
    "url": "https://wg21.link/P2623",
    "ja": "https://onihusube.hatenablog.com/entry/2022/10/09/021557#P2623R2-implicit-constant-initialization",
    "ja_old": "https://onihusube.hatenablog.com/entry/2022/08/11/193828#P2623R0-implicit-constant-initialization",
    "tag": ""
  },
  {
    "number": "P2624",
    "title": "Make operations on bools more portable",
    "url": "https://wg21.link/P2624",
    "ja": "https://onihusube.hatenablog.com/entry/2022/08/11/193828#P2624R0-Make-operations-on-bools-more-portable",
    "ja_old": "https://onihusube.hatenablog.com/entry/2022/08/11/193828#P2624R0-Make-operations-on-bools-more-portable",
    "tag": ""
  },
  {
    "number": "P2625",
    "title": "Slides: Life without operator() (P2511R1 presentation)",
    "url": "https://wg21.link/P2625",
    "ja": "https://onihusube.hatenablog.com/entry/2022/09/04/141015#P2625R0-Slides-Life-without-operator-P2511R1-presentation",
    "ja_old": "https://onihusube.hatenablog.com/entry/2022/09/04/141015#P2625R0-Slides-Life-without-operator-P2511R1-presentation",
    "tag": ""
  },
  {
    "number": "P2626",
    "title": "charN_t incremental adoption: Casting pointers of UTF character types",
    "url": "https://wg21.link/P2626",
    "ja": "https://onihusube.hatenablog.com/entry/2022/09/04/141015#P2626R0-charN_t-incremental-adoption-Casting-pointers-of-UTF-character-types",
    "ja_old": "https://onihusube.hatenablog.com/entry/2022/09/04/141015#P2626R0-charN_t-incremental-adoption-Casting-pointers-of-UTF-character-types",
    "tag": ""
  },
  {
    "number": "P2627",
    "title": "WG21 2022-07 Virtual Meeting Record of Discussion",
    "url": "https://wg21.link/P2627",
    "ja": "https://onihusube.hatenablog.com/entry/2022/09/04/141015#P2627R0-WG21-2022-07-Virtual-Meeting-Record-of-Discussion",
    "ja_old": "https://onihusube.hatenablog.com/entry/2022/09/04/141015#P2627R0-WG21-2022-07-Virtual-Meeting-Record-of-Discussion",
    "tag": ""
  },
  {
    "number": "P2628",
    "title": "Extend barrier APIs with memory_order",
    "url": "https://wg21.link/P2628",
    "ja": "https://onihusube.hatenablog.com/entry/2022/09/04/141015#P2628R0-Extend-barrier-APIs-with-memory_order",
    "ja_old": "https://onihusube.hatenablog.com/entry/2022/09/04/141015#P2628R0-Extend-barrier-APIs-with-memory_order",
    "tag": ""
  },
  {
    "number": "P2629",
    "title": "barrier token-less split arrive/wait",
    "url": "https://wg21.link/P2629",
    "ja": "https://onihusube.hatenablog.com/entry/2022/09/04/141015#P2629R0-barrier-token-less-split-arrivewait",
    "ja_old": "https://onihusube.hatenablog.com/entry/2022/09/04/141015#P2629R0-barrier-token-less-split-arrivewait",
    "tag": ""
  },
  {
    "number": "P2630",
    "title": "Submdspan",
    "url": "https://wg21.link/P2630",
    "ja": "https://onihusube.hatenablog.com/entry/2023/02/12/210302#P2630R2-Submdspan",
    "ja_old": "https://onihusube.hatenablog.com/entry/2022/09/04/141015#P2630R0-Submdspan",
    "tag": ""
  },
  {
    "number": "P2631",
    "title": "Publish TS Library Fundamentals v3 Now!",
    "url": "https://wg21.link/P2631",
    "ja": "https://onihusube.hatenablog.com/entry/2022/10/09/021557#P2631R0-Publish-TS-Library-Fundamentals-v3-Now",
    "ja_old": "https://onihusube.hatenablog.com/entry/2022/10/09/021557#P2631R0-Publish-TS-Library-Fundamentals-v3-Now",
    "tag": ""
  },
  {
    "number": "P2632",
    "title": "A plan for better template meta programming facilities in C++26",
    "url": "https://wg21.link/P2632",
    "ja": "https://onihusube.hatenablog.com/entry/2022/11/13/233529#P2632R0-A-plan-for-better-template-meta-programming-facilities-in-C26",
    "ja_old": "https://onihusube.hatenablog.com/entry/2022/11/13/233529#P2632R0-A-plan-for-better-template-meta-programming-facilities-in-C26",
    "tag": ""
  },
  {
    "number": "P2633",
    "title": "thread_local_inherit: Enhancing thread-local storage",
    "url": "https://wg21.link/P2633",
    "ja": "https://onihusube.hatenablog.com/entry/2022/09/04/141015#P2633R0-thread_local_inherit-Enhancing-thread-local-storage",
    "ja_old": "https://onihusube.hatenablog.com/entry/2022/09/04/141015#P2633R0-thread_local_inherit-Enhancing-thread-local-storage",
    "tag": ""
  },
  {
    "number": "P2634",
    "title": "Allow qualifiers in constructor declarations",
    "url": "https://wg21.link/P2634",
    "ja": "https://onihusube.hatenablog.com/entry/2022/09/04/141015#P2634R0-Allow-qualifiers-in-constructor-declarations",
    "ja_old": "https://onihusube.hatenablog.com/entry/2022/09/04/141015#P2634R0-Allow-qualifiers-in-constructor-declarations",
    "tag": ""
  },
  {
    "number": "P2635",
    "title": "Enhancing the break statement",
    "url": "https://wg21.link/P2635",
    "ja": "https://onihusube.hatenablog.com/entry/2022/09/04/141015#P2635R0-Enhancing-the-break-statement",
    "ja_old": "https://onihusube.hatenablog.com/entry/2022/09/04/141015#P2635R0-Enhancing-the-break-statement",
    "tag": ""
  },
  {
    "number": "P2636",
    "title": "References to ranges should always be viewable",
    "url": "https://wg21.link/P2636",
    "ja": "https://onihusube.hatenablog.com/entry/2023/02/12/210302#P2636R2-References-to-ranges-should-always-be-viewable",
    "ja_old": "https://onihusube.hatenablog.com/entry/2022/10/09/021557#P2636R0-References-to-ranges-should-always-be-viewable",
    "tag": ""
  },
  {
    "number": "P2637",
    "title": "Member visit",
    "url": "https://wg21.link/P2637",
    "ja": "https://onihusube.hatenablog.com/entry/2022/11/13/233529#P2637R1-Member-visit",
    "ja_old": "https://onihusube.hatenablog.com/entry/2022/10/09/021557#P2637R0-Member-visit-and-apply",
    "tag": ""
  },
  {
    "number": "P2638",
    "title": "Intel's response to P1915R0 for std::simd parallelism in TS 2",
    "url": "https://wg21.link/P2638",
    "ja": "https://onihusube.hatenablog.com/entry/2022/10/09/021557#P2638R0-Intels-response-to-P1915R0-for-stdsimd-parallelism-in-TS-2",
    "ja_old": "https://onihusube.hatenablog.com/entry/2022/10/09/021557#P2638R0-Intels-response-to-P1915R0-for-stdsimd-parallelism-in-TS-2",
    "tag": ""
  },
  {
    "number": "P2639",
    "title": "Static Allocations",
    "url": "https://wg21.link/P2639",
    "ja": "https://onihusube.hatenablog.com/entry/2022/10/09/021557#P2639R0-Static-Allocations",
    "ja_old": "https://onihusube.hatenablog.com/entry/2022/10/09/021557#P2639R0-Static-Allocations",
    "tag": ""
  },
  {
    "number": "P2640",
    "title": "Modules: Inner-scope Namespace Entities: Exported or Not?",
    "url": "https://wg21.link/P2640",
    "ja": "https://onihusube.hatenablog.com/entry/2022/11/13/233529#P2640R1-Modules-Inner-scope-Namespace-Entities-Exported-or-Not",
    "ja_old": "https://onihusube.hatenablog.com/entry/2022/10/09/021557#P2640R0-Modules-Inner-scope-Namespace-Entities-Exported-or-Not",
    "tag": ""
  },
  {
    "number": "P2641",
    "title": "Checking if a union alternative is active",
    "url": "https://wg21.link/P2641",
    "ja": "https://onihusube.hatenablog.com/entry/2023/03/19/184146#P2641R2-Checking-if-a-union-alternative-is-active",
    "ja_old": "https://onihusube.hatenablog.com/entry/2022/10/09/021557#P2641R0-Checking-if-a-union-alternative-is-active",
    "tag": ""
  },
  {
    "number": "P2642",
    "title": "Padded mdspan layouts",
    "url": "https://wg21.link/P2642",
    "ja": "https://onihusube.hatenablog.com/entry/2023/02/12/210302#P2642R2-Padded-mdspan-layouts",
    "ja_old": "https://onihusube.hatenablog.com/entry/2022/10/09/021557#P2642R0-Padded-mdspan-layouts",
    "tag": ""
  },
  {
    "number": "P2643",
    "title": "Improving C++ concurrency features",
    "url": "https://wg21.link/P2643",
    "ja": "https://onihusube.hatenablog.com/entry/2022/10/09/021557#P2643R0-Improving-C-concurrency-features",
    "ja_old": "https://onihusube.hatenablog.com/entry/2022/10/09/021557#P2643R0-Improving-C-concurrency-features",
    "tag": ""
  },
  {
    "number": "P2644",
    "title": "Final Fix of Broken Range based for Loop Rev 1",
    "url": "https://wg21.link/P2644",
    "ja": "https://onihusube.hatenablog.com/entry/2022/11/13/233529#P2644R0-Get-Fix-of-Broken-Range-based-for-Loop-Finally-Done",
    "ja_old": "https://onihusube.hatenablog.com/entry/2022/11/13/233529#P2644R0-Get-Fix-of-Broken-Range-based-for-Loop-Finally-Done",
    "tag": ""
  },
  {
    "number": "P2646",
    "title": "Explicit Assumption Syntax Can Reduce Run Time",
    "url": "https://wg21.link/P2646",
    "ja": "https://onihusube.hatenablog.com/entry/2022/11/13/233529#P2646R0-Explicit-Assumption-Syntax-Can-Reduce-Run-Time",
    "ja_old": "https://onihusube.hatenablog.com/entry/2022/11/13/233529#P2646R0-Explicit-Assumption-Syntax-Can-Reduce-Run-Time",
    "tag": ""
  },
  {
    "number": "P2647",
    "title": "Permitting static constexpr variables in constexpr functions",
    "url": "https://wg21.link/P2647",
    "ja": "https://onihusube.hatenablog.com/entry/2022/11/13/233529#P2647R0-Permitting-static-constexpr-variables-in-constexpr-functions",
    "ja_old": "https://onihusube.hatenablog.com/entry/2022/11/13/233529#P2647R0-Permitting-static-constexpr-variables-in-constexpr-functions",
    "tag": ""
  },
  {
    "number": "P2648",
    "title": "2022-10 Library Evolution Polls",
    "url": "https://wg21.link/P2648",
    "ja": "https://onihusube.hatenablog.com/entry/2022/11/13/233529#P2648R0-2022-10-Library-Evolution-Polls",
    "ja_old": "https://onihusube.hatenablog.com/entry/2022/11/13/233529#P2648R0-2022-10-Library-Evolution-Polls",
    "tag": ""
  },
  {
    "number": "P2649",
    "title": "2022-10 Library Evolution Poll Outcomes",
    "url": "https://wg21.link/P2649",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P2650",
    "title": "2022-11 Library Evolution Polls",
    "url": "https://wg21.link/P2650",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P2652",
    "title": "Disallow user specialization of allocator_traits",
    "url": "https://wg21.link/P2652",
    "ja": "https://onihusube.hatenablog.com/entry/2023/03/19/184146#P2652R2-Disallow-user-specialization-of-allocator_traits",
    "ja_old": "https://onihusube.hatenablog.com/entry/2022/11/13/233529#P2652R0-Disallow-user-specialization-of-allocator_traits",
    "tag": ""
  },
  {
    "number": "P2653",
    "title": "Update Annex E based on Unicode 15.0 UAX 31",
    "url": "https://wg21.link/P2653",
    "ja": "https://onihusube.hatenablog.com/entry/2022/11/13/233529#P2653R0-Update-Annex-E-based-on-Unicode-150-UAX-31",
    "ja_old": "https://onihusube.hatenablog.com/entry/2022/11/13/233529#P2653R0-Update-Annex-E-based-on-Unicode-150-UAX-31",
    "tag": ""
  },
  {
    "number": "P2655",
    "title": "common_reference_t of reference_wrapper Should Be a Reference Type",
    "url": "https://wg21.link/P2655",
    "ja": "https://onihusube.hatenablog.com/entry/2023/03/19/184146#P2655R3-common_reference_t-of-reference_wrapper-Should-Be-a-Reference-Type",
    "ja_old": "https://onihusube.hatenablog.com/entry/2022/11/13/233529#P2655R0-common_reference_t-of-reference_wrapper-Should-Be-a-Reference-Type",
    "tag": ""
  },
  {
    "number": "P2656",
    "title": "C++ Ecosystem International Standard",
    "url": "https://wg21.link/P2656",
    "ja": "https://onihusube.hatenablog.com/entry/2023/03/19/184146#P2656R2-C-Ecosystem-International-Standard",
    "ja_old": "https://onihusube.hatenablog.com/entry/2022/11/13/233529#P2656R0-C-Ecosystem-International-Standard",
    "tag": ""
  },
  {
    "number": "P2657",
    "title": "C++ is the next C++",
    "url": "https://wg21.link/P2657",
    "ja": "https://onihusube.hatenablog.com/entry/2022/11/13/233529#P2657R0-C-is-the-next-C",
    "ja_old": "https://onihusube.hatenablog.com/entry/2022/11/13/233529#P2657R0-C-is-the-next-C",
    "tag": ""
  },
  {
    "number": "P2658",
    "title": "temporary storage class specifiers",
    "url": "https://wg21.link/P2658",
    "ja": "https://onihusube.hatenablog.com/entry/2022/11/13/233529#P2658R0-temporary-storage-class-specifiers",
    "ja_old": "https://onihusube.hatenablog.com/entry/2022/11/13/233529#P2658R0-temporary-storage-class-specifiers",
    "tag": ""
  },
  {
    "number": "P2659",
    "title": "A Proposal to Publish a Technical Specification for Contracts",
    "url": "https://wg21.link/P2659",
    "ja": "https://onihusube.hatenablog.com/entry/2023/02/12/210302#P2659R2-A-Proposal-to-Publish-a-Technical-Specification-for-Contracts",
    "ja_old": "https://onihusube.hatenablog.com/entry/2022/11/13/233529#P2659R0-A-Proposal-to-Publish-a-Technical-Specification-for-Contracts",
    "tag": ""
  },
  {
    "number": "P2660",
    "title": "Proposed Contracts TS",
    "url": "https://wg21.link/P2660",
    "ja": "https://onihusube.hatenablog.com/entry/2022/11/13/233529#P2660R0-Proposed-Contracts-TS",
    "ja_old": "https://onihusube.hatenablog.com/entry/2022/11/13/233529#P2660R0-Proposed-Contracts-TS",
    "tag": ""
  },
  {
    "number": "P2661",
    "title": "Miscellaneous amendments to the Contracts TS",
    "url": "https://wg21.link/P2661",
    "ja": "https://onihusube.hatenablog.com/entry/2022/11/13/233529#P2661R0-Miscellaneous-amendments-to-the-Contracts-TS",
    "ja_old": "https://onihusube.hatenablog.com/entry/2022/11/13/233529#P2661R0-Miscellaneous-amendments-to-the-Contracts-TS",
    "tag": ""
  },
  {
    "number": "P2662",
    "title": "Pack Indexing",
    "url": "https://wg21.link/P2662",
    "ja": "https://onihusube.hatenablog.com/entry/2022/11/13/233529#P2662R0-Pack-Indexing",
    "ja_old": "https://onihusube.hatenablog.com/entry/2022/11/13/233529#P2662R0-Pack-Indexing",
    "tag": ""
  },
  {
    "number": "P2663",
    "title": "Proposal to support interleaved complex values in std::simd",
    "url": "https://wg21.link/P2663",
    "ja": "https://onihusube.hatenablog.com/entry/2023/03/19/184146#P2663R1-Proposal-to-support-interleaved-complex-values-in-stdsimd",
    "ja_old": "https://onihusube.hatenablog.com/entry/2022/11/13/233529#P2663R0-Proposal-to-support-interleaved-complex-values-in-stdsimd",
    "tag": ""
  },
  {
    "number": "P2664",
    "title": "Proposal to extend std::simd with permutation API",
    "url": "https://wg21.link/P2664",
    "ja": "https://onihusube.hatenablog.com/entry/2023/03/19/184146#P2664R1-Proposal-to-extend-stdsimd-with-permutation-API",
    "ja_old": "https://onihusube.hatenablog.com/entry/2023/03/19/184146#P2664R1-Proposal-to-extend-stdsimd-with-permutation-API",
    "tag": ""
  },
  {
    "number": "P2665",
    "title": "Allow calling overload sets containing T, constT&",
    "url": "https://wg21.link/P2665",
    "ja": "https://onihusube.hatenablog.com/entry/2022/11/13/233529#P2665R0-Allow-calling-overload-sets-containing-T-constT",
    "ja_old": "https://onihusube.hatenablog.com/entry/2022/11/13/233529#P2665R0-Allow-calling-overload-sets-containing-T-constT",
    "tag": ""
  },
  {
    "number": "P2666",
    "title": "Last use optimization",
    "url": "https://wg21.link/P2666",
    "ja": "https://onihusube.hatenablog.com/entry/2022/11/13/233529#P2666R0-Last-use-optimization",
    "ja_old": "https://onihusube.hatenablog.com/entry/2022/11/13/233529#P2666R0-Last-use-optimization",
    "tag": ""
  },
  {
    "number": "P2667",
    "title": "Support for static and SBO vectors by allocators",
    "url": "https://wg21.link/P2667",
    "ja": "https://onihusube.hatenablog.com/entry/2022/11/13/233529#P2667R0-Support-for-static-and-SBO-vectors-by-allocators",
    "ja_old": "https://onihusube.hatenablog.com/entry/2022/11/13/233529#P2667R0-Support-for-static-and-SBO-vectors-by-allocators",
    "tag": ""
  },
  {
    "number": "P2668",
    "title": "Role based parameter passing",
    "url": "https://wg21.link/P2668",
    "ja": "https://onihusube.hatenablog.com/entry/2022/11/13/233529#P2668R0-Role-based-parameter-passing",
    "ja_old": "https://onihusube.hatenablog.com/entry/2022/11/13/233529#P2668R0-Role-based-parameter-passing",
    "tag": ""
  },
  {
    "number": "P2669",
    "title": "Deprecate changing kind of names in class template specializations",
    "url": "https://wg21.link/P2669",
    "ja": "https://onihusube.hatenablog.com/entry/2022/11/13/233529#P2669R0-Deprecate-changing-kind-of-names-in-class-template-specializations",
    "ja_old": "https://onihusube.hatenablog.com/entry/2022/11/13/233529#P2669R0-Deprecate-changing-kind-of-names-in-class-template-specializations",
    "tag": ""
  },
  {
    "number": "P2670",
    "title": "Non-transient constexpr allocation",
    "url": "https://wg21.link/P2670",
    "ja": "https://onihusube.hatenablog.com/entry/2023/03/19/184146#P2670R1-Non-transient-constexpr-allocation",
    "ja_old": "https://onihusube.hatenablog.com/entry/2022/11/13/233529#P2670R0-Non-transient-constexpr-allocation",
    "tag": ""
  },
  {
    "number": "P2671",
    "title": "Syntax choices for generalized pack declaration and usage",
    "url": "https://wg21.link/P2671",
    "ja": "https://onihusube.hatenablog.com/entry/2022/11/13/233529#P2671R0-Syntax-choices-for-generalized-pack-declaration-and-usage",
    "ja_old": "https://onihusube.hatenablog.com/entry/2022/11/13/233529#P2671R0-Syntax-choices-for-generalized-pack-declaration-and-usage",
    "tag": ""
  },
  {
    "number": "P2672",
    "title": "Exploring the Design Space for a Pipeline Operator",
    "url": "https://wg21.link/P2672",
    "ja": "https://onihusube.hatenablog.com/entry/2022/11/13/233529#P2672R0-Exploring-the-Design-Space-for-a-Pipeline-Operator",
    "ja_old": "https://onihusube.hatenablog.com/entry/2022/11/13/233529#P2672R0-Exploring-the-Design-Space-for-a-Pipeline-Operator",
    "tag": ""
  },
  {
    "number": "P2673",
    "title": "Common Description Format for C++ Libraries and Packages",
    "url": "https://wg21.link/P2673",
    "ja": "https://onihusube.hatenablog.com/entry/2022/11/13/233529#P2673R0-Common-Description-Format-for-C-Libraries-and-Packages",
    "ja_old": "https://onihusube.hatenablog.com/entry/2022/11/13/233529#P2673R0-Common-Description-Format-for-C-Libraries-and-Packages",
    "tag": ""
  },
  {
    "number": "P2674",
    "title": "A trait for implicit lifetime types",
    "url": "https://wg21.link/P2674",
    "ja": "https://onihusube.hatenablog.com/entry/2022/11/13/233529#P2674R0-A-trait-for-implicit-lifetime-types",
    "ja_old": "https://onihusube.hatenablog.com/entry/2022/11/13/233529#P2674R0-A-trait-for-implicit-lifetime-types",
    "tag": ""
  },
  {
    "number": "P2675",
    "title": "LWG3780: The Paper (format's width estimation is too approximate and not forward compatible)",
    "url": "https://wg21.link/P2675",
    "ja": "https://onihusube.hatenablog.com/entry/2023/02/12/210302#P2675R1-LWG3780-The-Paper-formats-width-estimation-is-too-approximate-and-not-forward-compatible",
    "ja_old": "https://onihusube.hatenablog.com/entry/2022/11/13/233529#P2675R0-LWG3780-The-Paper-formats-width-estimation-is-too-approximate-and-not-forward-compatible",
    "tag": ""
  },
  {
    "number": "P2676",
    "title": "The Val Object Model",
    "url": "https://wg21.link/P2676",
    "ja": "https://onihusube.hatenablog.com/entry/2022/11/13/233529#P2676R0-The-Val-Object-Model",
    "ja_old": "https://onihusube.hatenablog.com/entry/2022/11/13/233529#P2676R0-The-Val-Object-Model",
    "tag": ""
  },
  {
    "number": "P2677",
    "title": "Reconsidering concepts in-place syntax",
    "url": "https://wg21.link/P2677",
    "ja": "https://onihusube.hatenablog.com/entry/2023/02/12/210302#P2677R2-Reconsidering-concepts-in-place-syntax",
    "ja_old": "https://onihusube.hatenablog.com/entry/2022/11/13/233529#P2677R0-Reconsidering-concepts-in-place-syntax",
    "tag": ""
  },
  {
    "number": "P2678",
    "title": "SG16: Unicode meeting summaries 2022-06-22 through 2022-09-28",
    "url": "https://wg21.link/P2678",
    "ja": "https://onihusube.hatenablog.com/entry/2022/11/13/233529#P2678R0-SG16-Unicode-meeting-summaries-2022-06-22-through-2022-09-28",
    "ja_old": "https://onihusube.hatenablog.com/entry/2022/11/13/233529#P2678R0-SG16-Unicode-meeting-summaries-2022-06-22-through-2022-09-28",
    "tag": ""
  },
  {
    "number": "P2679",
    "title": "Fixing std::start_lifetime_as and std::start_lifetime_as_array",
    "url": "https://wg21.link/P2679",
    "ja": "https://onihusube.hatenablog.com/entry/2023/03/19/184146#P2679R2-Fixing-stdstart_lifetime_as-and-stdstart_lifetime_as_array",
    "ja_old": "https://onihusube.hatenablog.com/entry/2022/11/13/233529#P2679R0-Fixing-stdstart_lifetime_as-for-arrays",
    "tag": ""
  },
  {
    "number": "P2680",
    "title": "Contracts for C++: Prioritizing Safety",
    "url": "https://wg21.link/P2680",
    "ja": "https://onihusube.hatenablog.com/entry/2023/02/12/210302#P2680R1-Contracts-for-C-Prioritizing-Safety",
    "ja_old": "https://onihusube.hatenablog.com/entry/2022/11/13/233529#P2680R0-Contracts-for-C-Prioritizing-Safety",
    "tag": ""
  },
  {
    "number": "P2681",
    "title": "More Basic Statistics",
    "url": "https://wg21.link/P2681",
    "ja": "https://onihusube.hatenablog.com/entry/2023/03/19/184146#P2681R1-More-Basic-Statistics",
    "ja_old": "https://onihusube.hatenablog.com/entry/2023/03/19/184146#P2681R1-More-Basic-Statistics",
    "tag": ""
  },
  {
    "number": "P2682",
    "title": "Transactional Memory TS2 Editor's Report",
    "url": "https://wg21.link/P2682",
    "ja": "https://onihusube.hatenablog.com/entry/2022/11/13/233529#P2682R0-Transactional-Memory-TS2-Editors-Report",
    "ja_old": "https://onihusube.hatenablog.com/entry/2022/11/13/233529#P2682R0-Transactional-Memory-TS2-Editors-Report",
    "tag": ""
  },
  {
    "number": "P2683",
    "title": "SG14: Low Latency/Games/Embedded/Finance/Simulation virtual meeting minutes 2022/02/09-2022/10/12",
    "url": "https://wg21.link/P2683",
    "ja": "https://onihusube.hatenablog.com/entry/2022/11/13/233529#P2683R0-SG14-Low-LatencyGamesEmbeddedFinanceSimulation-virtual-meeting-minutes-20220209-20221012",
    "ja_old": "https://onihusube.hatenablog.com/entry/2022/11/13/233529#P2683R0-SG14-Low-LatencyGamesEmbeddedFinanceSimulation-virtual-meeting-minutes-20220209-20221012",
    "tag": ""
  },
  {
    "number": "P2684",
    "title": "SG19: Machine Learning Virtual Meeting Minutes 2022/02/10-2022/10/13",
    "url": "https://wg21.link/P2684",
    "ja": "https://onihusube.hatenablog.com/entry/2022/11/13/233529#P2684R0-SG19-Machine-Learning-Virtual-Meeting-Minutes-20220210-20221013",
    "ja_old": "https://onihusube.hatenablog.com/entry/2022/11/13/233529#P2684R0-SG19-Machine-Learning-Virtual-Meeting-Minutes-20220210-20221013",
    "tag": ""
  },
  {
    "number": "P2685",
    "title": "Language Support For Scoped Allocators",
    "url": "https://wg21.link/P2685",
    "ja": "https://onihusube.hatenablog.com/entry/2022/11/13/233529#P2685R0-Language-Support-For-Scoped-Allocators",
    "ja_old": "https://onihusube.hatenablog.com/entry/2022/11/13/233529#P2685R0-Language-Support-For-Scoped-Allocators",
    "tag": ""
  },
  {
    "number": "P2686",
    "title": "Updated wording and implementation experience for P1481 (constexpr structured bindings)",
    "url": "https://wg21.link/P2686",
    "ja": "https://onihusube.hatenablog.com/entry/2022/11/13/233529#P2686R0-Updated-wording-and-implementation-experience-for-P1481-constexpr-structured-bindings",
    "ja_old": "https://onihusube.hatenablog.com/entry/2022/11/13/233529#P2686R0-Updated-wording-and-implementation-experience-for-P1481-constexpr-structured-bindings",
    "tag": ""
  },
  {
    "number": "P2687",
    "title": "Design Alternatives for Type-and-Resource Safe C++",
    "url": "https://wg21.link/P2687",
    "ja": "https://onihusube.hatenablog.com/entry/2022/11/13/233529#P2687R0-Design-Alternatives-for-Type-and-Resource-Safe-C",
    "ja_old": "https://onihusube.hatenablog.com/entry/2022/11/13/233529#P2687R0-Design-Alternatives-for-Type-and-Resource-Safe-C",
    "tag": ""
  },
  {
    "number": "P2688",
    "title": "Pattern Matching Discussion for Kona 2022",
    "url": "https://wg21.link/P2688",
    "ja": "https://onihusube.hatenablog.com/entry/2022/11/13/233529#P2688R0-Pattern-Matching-Discussion-for-Kona-2022",
    "ja_old": "https://onihusube.hatenablog.com/entry/2022/11/13/233529#P2688R0-Pattern-Matching-Discussion-for-Kona-2022",
    "tag": ""
  },
  {
    "number": "P2689",
    "title": "atomic_accessor",
    "url": "https://wg21.link/P2689",
    "ja": "https://onihusube.hatenablog.com/entry/2023/02/12/210302#P2689R1-atomic_accessor",
    "ja_old": "https://onihusube.hatenablog.com/entry/2022/11/13/233529#P2689R0-atomic_accessor",
    "tag": ""
  },
  {
    "number": "P2690",
    "title": "Presentation for C++17 parallel algorithms and P2300",
    "url": "https://wg21.link/P2690",
    "ja": "https://onihusube.hatenablog.com/entry/2022/11/13/233529#P2690R0-C17-parallel-algorithms-and-P2300",
    "ja_old": "https://onihusube.hatenablog.com/entry/2022/11/13/233529#P2690R0-C17-parallel-algorithms-and-P2300",
    "tag": ""
  },
  {
    "number": "P2691",
    "title": "Allow referencing inline functions with internal linkage from outside their defining header unit",
    "url": "https://wg21.link/P2691",
    "ja": "https://onihusube.hatenablog.com/entry/2022/11/13/233529#P2691R0-Allow-referencing-inline-functions-with-internal-linkage-from-outside-their-defining-header-unit",
    "ja_old": "https://onihusube.hatenablog.com/entry/2022/11/13/233529#P2691R0-Allow-referencing-inline-functions-with-internal-linkage-from-outside-their-defining-header-unit",
    "tag": ""
  },
  {
    "number": "P2692",
    "title": "Generic Programming is just Programming",
    "url": "https://wg21.link/P2692",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P2693",
    "title": "Formatting thread::id and stacktrace",
    "url": "https://wg21.link/P2693",
    "ja": "https://onihusube.hatenablog.com/entry/2023/03/19/184146#P2693R1-Formatting-threadid-and-stacktrace",
    "ja_old": "https://onihusube.hatenablog.com/entry/2023/03/19/184146#P2693R1-Formatting-threadid-and-stacktrace",
    "tag": ""
  },
  {
    "number": "P2695",
    "title": "A proposed plan for contracts in C++",
    "url": "https://wg21.link/P2695",
    "ja": "https://onihusube.hatenablog.com/entry/2023/03/19/184146#P2695R1-A-proposed-plan-for-contracts-in-C",
    "ja_old": "https://onihusube.hatenablog.com/entry/2023/03/19/184146#P2695R1-A-proposed-plan-for-contracts-in-C",
    "tag": ""
  },
  {
    "number": "P2696",
    "title": "Introduce Cpp17Swappable as additional convenience requirements",
    "url": "https://wg21.link/P2696",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P2697",
    "title": "Interfacing bitset with string_view",
    "url": "https://wg21.link/P2697",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P2698",
    "title": "Unconditional termination is a serious problem",
    "url": "https://wg21.link/P2698",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P2700",
    "title": "Questions on P2680 \"Contracts for C++: Prioritizing Safety\"",
    "url": "https://wg21.link/P2700",
    "ja": "https://onihusube.hatenablog.com/entry/2023/02/12/210302#P2700R1-Questions-on-P2680-Contracts-for-C-Prioritizing-Safety",
    "ja_old": "https://onihusube.hatenablog.com/entry/2023/02/12/210302#P2700R1-Questions-on-P2680-Contracts-for-C-Prioritizing-Safety",
    "tag": ""
  },
  {
    "number": "P2701",
    "title": "Translating Linker Input Files to Module Metadata Files",
    "url": "https://wg21.link/P2701",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P2702",
    "title": "Specifying Importable Headers",
    "url": "https://wg21.link/P2702",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P2703",
    "title": "C++ Standard Library Ready Issues to be moved in Kona, Nov. 2022",
    "url": "https://wg21.link/P2703",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P2704",
    "title": "C++ Standard Library Immediate Issues to be moved in Kona, Nov. 2022",
    "url": "https://wg21.link/P2704",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P2705",
    "title": "C++ Library Fundamentals TS Issues to be moved in Kona, Nov. 2022",
    "url": "https://wg21.link/P2705",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P2706",
    "title": "Drafting for US 26-061: Redundant specification for defaulted functions",
    "url": "https://wg21.link/P2706",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P2708",
    "title": "No Future Fundamentals TSes",
    "url": "https://wg21.link/P2708",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P2709",
    "title": "Core Language Working Group “ready” Issues for the November, 2022 meeting",
    "url": "https://wg21.link/P2709",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P2710",
    "title": "Core Language Working Group NB comment resolutions for the November, 2022 meeting",
    "url": "https://wg21.link/P2710",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P2711",
    "title": "Making multi-param constructors of views explicit",
    "url": "https://wg21.link/P2711",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P2712",
    "title": "Classification of Contract-Checking Predicates",
    "url": "https://wg21.link/P2712",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P2713",
    "title": "Escaping improvements in std::format",
    "url": "https://wg21.link/P2713",
    "ja": "https://onihusube.hatenablog.com/entry/2023/02/12/210302#P2713R1-Escaping-improvements-in-stdformat",
    "ja_old": "https://onihusube.hatenablog.com/entry/2023/02/12/210302#P2713R0-Escaping-improvements-in-stdformat",
    "tag": ""
  },
  {
    "number": "P2714",
    "title": "Bind front and back to NTTP callables",
    "url": "https://wg21.link/P2714",
    "ja": "https://onihusube.hatenablog.com/entry/2023/02/12/210302#P2714R0-Bind-front-and-back-to-NTTP-callables",
    "ja_old": "https://onihusube.hatenablog.com/entry/2023/02/12/210302#P2714R0-Bind-front-and-back-to-NTTP-callables",
    "tag": ""
  },
  {
    "number": "P2717",
    "title": "Tool Introspection",
    "url": "https://wg21.link/P2717",
    "ja": "https://onihusube.hatenablog.com/entry/2023/02/12/210302#P2717R0-Tool-Introspection",
    "ja_old": "https://onihusube.hatenablog.com/entry/2023/02/12/210302#P2717R0-Tool-Introspection",
    "tag": ""
  },
  {
    "number": "P2718",
    "title": "Wording for P2644R1 Fix for Range-based for Loop",
    "url": "https://wg21.link/P2718",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P2722",
    "title": "Slides: Beyond operator() (P2511R2 presentation)",
    "url": "https://wg21.link/P2722",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P2723",
    "title": "Zero-initialize objects of automatic storage duration",
    "url": "https://wg21.link/P2723",
    "ja": "https://onihusube.hatenablog.com/entry/2023/02/12/210302#P2723R1-Zero-initialize-objects-of-automatic-storage-duration",
    "ja_old": "https://onihusube.hatenablog.com/entry/2023/02/12/210302#P2723R1-Zero-initialize-objects-of-automatic-storage-duration",
    "tag": ""
  },
  {
    "number": "P2724",
    "title": "constant dangling",
    "url": "https://wg21.link/P2724",
    "ja": "https://onihusube.hatenablog.com/entry/2023/03/19/184146#P2724R1-constant-dangling",
    "ja_old": "https://onihusube.hatenablog.com/entry/2023/02/12/210302#P2724R0-constant-dangling",
    "tag": ""
  },
  {
    "number": "P2725",
    "title": "std::integral_constant Literals",
    "url": "https://wg21.link/P2725",
    "ja": "https://onihusube.hatenablog.com/entry/2023/02/12/210302#P2725R1-stdintegral_constant-Literals",
    "ja_old": "https://onihusube.hatenablog.com/entry/2023/02/12/210302#P2725R1-stdintegral_constant-Literals",
    "tag": ""
  },
  {
    "number": "P2726",
    "title": "Better std::tuple Indexing",
    "url": "https://wg21.link/P2726",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P2727",
    "title": "std::iterator_interface",
    "url": "https://wg21.link/P2727",
    "ja": "https://onihusube.hatenablog.com/entry/2023/03/19/184146#P2727R1-stditerator_interface",
    "ja_old": "https://onihusube.hatenablog.com/entry/2023/03/19/184146#P2727R1-stditerator_interface",
    "tag": ""
  },
  {
    "number": "P2728",
    "title": "Unicode in the Library, Part 1: UTF Transcoding",
    "url": "https://wg21.link/P2728",
    "ja": "https://onihusube.hatenablog.com/entry/2023/02/12/210302#P2728R0-Unicode-in-the-Library-Part-1-UTF-Transcoding",
    "ja_old": "https://onihusube.hatenablog.com/entry/2023/02/12/210302#P2728R0-Unicode-in-the-Library-Part-1-UTF-Transcoding",
    "tag": ""
  },
  {
    "number": "P2729",
    "title": "Unicode in the Library, Part 2: Normalization",
    "url": "https://wg21.link/P2729",
    "ja": "https://onihusube.hatenablog.com/entry/2023/02/12/210302#P2729R0-Unicode-in-the-Library-Part-2-Normalization",
    "ja_old": "https://onihusube.hatenablog.com/entry/2023/02/12/210302#P2729R0-Unicode-in-the-Library-Part-2-Normalization",
    "tag": ""
  },
  {
    "number": "P2730",
    "title": "variable scope",
    "url": "https://wg21.link/P2730",
    "ja": "https://onihusube.hatenablog.com/entry/2023/03/19/184146#P2730R1-variable-scope",
    "ja_old": "https://onihusube.hatenablog.com/entry/2023/02/12/210302#P2730R0-variable-scope",
    "tag": ""
  },
  {
    "number": "P2732",
    "title": "WG21 November 2022 Kona meeting Record of Discussion",
    "url": "https://wg21.link/P2732",
    "ja": "https://onihusube.hatenablog.com/entry/2023/02/12/210302#P2732R0-WG21-November-2022-Kona-meeting-Record-of-Discussion",
    "ja_old": "https://onihusube.hatenablog.com/entry/2023/02/12/210302#P2732R0-WG21-November-2022-Kona-meeting-Record-of-Discussion",
    "tag": ""
  },
  {
    "number": "P2733",
    "title": "Fix handling of empty specifiers in std::format",
    "url": "https://wg21.link/P2733",
    "ja": "https://onihusube.hatenablog.com/entry/2023/03/19/184146#P2733R3-Fix-handling-of-empty-specifiers-in-stdformat",
    "ja_old": "https://onihusube.hatenablog.com/entry/2023/02/12/210302#P2733R0-Fix-handling-of-empty-specifiers-in-stdformat",
    "tag": ""
  },
  {
    "number": "P2734",
    "title": "Adding the new 2022 SI prefixes",
    "url": "https://wg21.link/P2734",
    "ja": "https://onihusube.hatenablog.com/entry/2023/02/12/210302#P2734R0-Adding-the-new-2022-SI-prefixes",
    "ja_old": "https://onihusube.hatenablog.com/entry/2023/02/12/210302#P2734R0-Adding-the-new-2022-SI-prefixes",
    "tag": ""
  },
  {
    "number": "P2735",
    "title": "C xor C++ Programming",
    "url": "https://wg21.link/P2735",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P2736",
    "title": "Referencing the Unicode Standard",
    "url": "https://wg21.link/P2736",
    "ja": "https://onihusube.hatenablog.com/entry/2023/03/19/184146#P2736R2-Referencing-the-Unicode-Standard",
    "ja_old": "https://onihusube.hatenablog.com/entry/2023/02/12/210302#P2736R0-Referencing-the-Unicode-Standard",
    "tag": ""
  },
  {
    "number": "P2737",
    "title": "Proposal of Condition-centric Contracts Syntax",
    "url": "https://wg21.link/P2737",
    "ja": "https://onihusube.hatenablog.com/entry/2023/02/12/210302#P2737R0-Proposal-of-Condition-centric-Contracts-Syntax",
    "ja_old": "https://onihusube.hatenablog.com/entry/2023/02/12/210302#P2737R0-Proposal-of-Condition-centric-Contracts-Syntax",
    "tag": ""
  },
  {
    "number": "P2738",
    "title": "constexpr cast from void*: towards constexpr type-erasure",
    "url": "https://wg21.link/P2738",
    "ja": "https://onihusube.hatenablog.com/entry/2023/03/19/184146#P2738R1-constexpr-cast-from-void-towards-constexpr-type-erasure",
    "ja_old": "https://onihusube.hatenablog.com/entry/2023/02/12/210302#P2738R0-constexpr-cast-from-void-towards-constexpr-type-erasure",
    "tag": ""
  },
  {
    "number": "P2739",
    "title": "A call to action: Think seriously about \"safety\" then do something sensible about it",
    "url": "https://wg21.link/P2739",
    "ja": "https://onihusube.hatenablog.com/entry/2023/02/12/210302#P2739R0-A-call-to-action-Think-seriously-about-safety-then-do-something-sensible-about-it",
    "ja_old": "https://onihusube.hatenablog.com/entry/2023/02/12/210302#P2739R0-A-call-to-action-Think-seriously-about-safety-then-do-something-sensible-about-it",
    "tag": ""
  },
  {
    "number": "P2740",
    "title": "Simpler implicit dangling resolution",
    "url": "https://wg21.link/P2740",
    "ja": "https://onihusube.hatenablog.com/entry/2023/03/19/184146#P2740R2-Simpler-implicit-dangling-resolution",
    "ja_old": "https://onihusube.hatenablog.com/entry/2023/02/12/210302#P2740R0-Simpler-implicit-dangling-resolution",
    "tag": ""
  },
  {
    "number": "P2741",
    "title": "user-generated static_assert messages",
    "url": "https://wg21.link/P2741",
    "ja": "https://onihusube.hatenablog.com/entry/2023/03/19/184146#P2741R1-user-generated-static_assert-messages",
    "ja_old": "https://onihusube.hatenablog.com/entry/2023/02/12/210302#P2741R0-user-generated-static_assert-messages",
    "tag": ""
  },
  {
    "number": "P2742",
    "title": "indirect dangling identification",
    "url": "https://wg21.link/P2742",
    "ja": "https://onihusube.hatenablog.com/entry/2023/03/19/184146#P2742R2-indirect-dangling-identification",
    "ja_old": "https://onihusube.hatenablog.com/entry/2023/02/12/210302#P2742R0-indirect-dangling-identification",
    "tag": ""
  },
  {
    "number": "P2743",
    "title": "Contracts for C++: Prioritizing Safety - Presentation slides of P2680R0",
    "url": "https://wg21.link/P2743",
    "ja": "https://onihusube.hatenablog.com/entry/2023/02/12/210302#P2743R0-Contracts-for-C-Prioritizing-Safety---Presentation-slides-of-P2680R0",
    "ja_old": "https://onihusube.hatenablog.com/entry/2023/02/12/210302#P2743R0-Contracts-for-C-Prioritizing-Safety---Presentation-slides-of-P2680R0",
    "tag": ""
  },
  {
    "number": "P2746",
    "title": "Deprecate and Replace Fenv Rounding Modes",
    "url": "https://wg21.link/P2746",
    "ja": "https://onihusube.hatenablog.com/entry/2023/02/12/210302#P2746R0-Deprecate-and-Replace-Fenv-Rounding-Modes",
    "ja_old": "https://onihusube.hatenablog.com/entry/2023/02/12/210302#P2746R0-Deprecate-and-Replace-Fenv-Rounding-Modes",
    "tag": ""
  },
  {
    "number": "P2747",
    "title": "Limited support for constexpr void*",
    "url": "https://wg21.link/P2747",
    "ja": "https://onihusube.hatenablog.com/entry/2023/02/12/210302#P2747R0-Limited-support-for-constexpr-void",
    "ja_old": "https://onihusube.hatenablog.com/entry/2023/02/12/210302#P2747R0-Limited-support-for-constexpr-void",
    "tag": ""
  },
  {
    "number": "P2748",
    "title": "Disallow Binding a Returned glvalue to a Temporary",
    "url": "https://wg21.link/P2748",
    "ja": "https://onihusube.hatenablog.com/entry/2023/02/12/210302#P2748R0-Disallow-Binding-a-Returned-glvalue-to-a-Temporary",
    "ja_old": "https://onihusube.hatenablog.com/entry/2023/02/12/210302#P2748R0-Disallow-Binding-a-Returned-glvalue-to-a-Temporary",
    "tag": ""
  },
  {
    "number": "P2749",
    "title": "Down with \"character\"",
    "url": "https://wg21.link/P2749",
    "ja": "https://onihusube.hatenablog.com/entry/2023/03/19/184146#P2749R0-Down-with-character",
    "ja_old": "https://onihusube.hatenablog.com/entry/2023/03/19/184146#P2749R0-Down-with-character",
    "tag": ""
  },
  {
    "number": "P2750",
    "title": "C Dangling Reduction",
    "url": "https://wg21.link/P2750",
    "ja": "https://onihusube.hatenablog.com/entry/2023/03/19/184146#P2750R2-C-Dangling-Reduction",
    "ja_old": "https://onihusube.hatenablog.com/entry/2023/02/12/210302#P2750R0-C-Dangling-Reduction",
    "tag": ""
  },
  {
    "number": "P2751",
    "title": "Evaluation of Checked Contracts",
    "url": "https://wg21.link/P2751",
    "ja": "https://onihusube.hatenablog.com/entry/2023/03/19/184146#P2751R1-Evaluation-of-Checked-Contracts",
    "ja_old": "https://onihusube.hatenablog.com/entry/2023/02/12/210302#P2751R0-Evaluation-of-Checked-Contracts",
    "tag": ""
  },
  {
    "number": "P2752",
    "title": "Static storage for braced initializers",
    "url": "https://wg21.link/P2752",
    "ja": "https://onihusube.hatenablog.com/entry/2023/02/12/210302#P2752R0-Static-storage-for-braced-initializers",
    "ja_old": "https://onihusube.hatenablog.com/entry/2023/02/12/210302#P2752R0-Static-storage-for-braced-initializers",
    "tag": ""
  },
  {
    "number": "P2754",
    "title": "Deconstructing Avoiding Uninitialized Reads of Auto Variables",
    "url": "https://wg21.link/P2754",
    "ja": "https://onihusube.hatenablog.com/entry/2023/03/19/184146#P2754R0-Deconstructing-Avoiding-Uninitialized-Reads-of-Auto-Variables",
    "ja_old": "https://onihusube.hatenablog.com/entry/2023/03/19/184146#P2754R0-Deconstructing-Avoiding-Uninitialized-Reads-of-Auto-Variables",
    "tag": ""
  },
  {
    "number": "P2756",
    "title": "Proposal of Simple Contract Side Effect Semantics",
    "url": "https://wg21.link/P2756",
    "ja": "https://onihusube.hatenablog.com/entry/2023/02/12/210302#P2756R0-Proposal-of-Simple-Contract-Side-Effect-Semantics",
    "ja_old": "https://onihusube.hatenablog.com/entry/2023/02/12/210302#P2756R0-Proposal-of-Simple-Contract-Side-Effect-Semantics",
    "tag": ""
  },
  {
    "number": "P2757",
    "title": "Type checking format args",
    "url": "https://wg21.link/P2757",
    "ja": "https://onihusube.hatenablog.com/entry/2023/02/12/210302#P2757R0-Type-checking-format-args",
    "ja_old": "https://onihusube.hatenablog.com/entry/2023/02/12/210302#P2757R0-Type-checking-format-args",
    "tag": ""
  },
  {
    "number": "P2758",
    "title": "Emitting messages at compile time",
    "url": "https://wg21.link/P2758",
    "ja": "https://onihusube.hatenablog.com/entry/2023/02/12/210302#P2758R0-Emitting-messages-at-compile-time",
    "ja_old": "https://onihusube.hatenablog.com/entry/2023/02/12/210302#P2758R0-Emitting-messages-at-compile-time",
    "tag": ""
  },
  {
    "number": "P2759",
    "title": "DG Opinion on Safety for ISO C++",
    "url": "https://wg21.link/P2759",
    "ja": "https://onihusube.hatenablog.com/entry/2023/03/19/184146#P2759R1-DG-Opinion-on-Safety-for-ISO-C",
    "ja_old": "https://onihusube.hatenablog.com/entry/2023/02/12/210302#P2759R0-DG-Opinion-on-Safety-for-ISO-C",
    "tag": ""
  },
  {
    "number": "P2762",
    "title": "Sender/Receiver Interface For Networking",
    "url": "https://wg21.link/P2762",
    "ja": "https://onihusube.hatenablog.com/entry/2023/02/12/210302#P2762R0-SenderReceiver-Interface-For-Networking",
    "ja_old": "https://onihusube.hatenablog.com/entry/2023/02/12/210302#P2762R0-SenderReceiver-Interface-For-Networking",
    "tag": ""
  },
  {
    "number": "P2763",
    "title": "`layout_stride` static extents default constructor fix",
    "url": "https://wg21.link/P2763",
    "ja": "https://onihusube.hatenablog.com/entry/2023/03/19/184146#P2763R1-layout_stride-static-extents-default-constructor-fix",
    "ja_old": "https://onihusube.hatenablog.com/entry/2023/02/12/210302#P2763R0-layout_stride-static-extents-default-constructor-fix",
    "tag": ""
  },
  {
    "number": "P2764",
    "title": "SG14: Low Latency/Games/Embedded/Finance/Simulation virtual meeting minutes 2023/01/11",
    "url": "https://wg21.link/P2764",
    "ja": "https://onihusube.hatenablog.com/entry/2023/02/12/210302#P2764R0-SG14-Low-LatencyGamesEmbeddedFinanceSimulation-virtual-meeting-minutes-20230111",
    "ja_old": "https://onihusube.hatenablog.com/entry/2023/02/12/210302#P2764R0-SG14-Low-LatencyGamesEmbeddedFinanceSimulation-virtual-meeting-minutes-20230111",
    "tag": ""
  },
  {
    "number": "P2765",
    "title": "SG19: Machine Learning Virtual Meeting Minutes 2022/12/08-2023/01/12",
    "url": "https://wg21.link/P2765",
    "ja": "https://onihusube.hatenablog.com/entry/2023/02/12/210302#P2765R0-SG19-Machine-Learning-Virtual-Meeting-Minutes-20221208-20230112",
    "ja_old": "https://onihusube.hatenablog.com/entry/2023/02/12/210302#P2765R0-SG19-Machine-Learning-Virtual-Meeting-Minutes-20221208-20230112",
    "tag": ""
  },
  {
    "number": "P2766",
    "title": "SG16: Unicode meeting summaries 2022-10-12 through 2022-12-14",
    "url": "https://wg21.link/P2766",
    "ja": "https://onihusube.hatenablog.com/entry/2023/02/12/210302#P2766R0-SG16-Unicode-meeting-summaries-2022-10-12-through-2022-12-14",
    "ja_old": "https://onihusube.hatenablog.com/entry/2023/02/12/210302#P2766R0-SG16-Unicode-meeting-summaries-2022-10-12-through-2022-12-14",
    "tag": ""
  },
  {
    "number": "P2769",
    "title": "get_element customization point object",
    "url": "https://wg21.link/P2769",
    "ja": "https://onihusube.hatenablog.com/entry/2023/02/12/210302#P2769R0-get_element-customization-point-object",
    "ja_old": "https://onihusube.hatenablog.com/entry/2023/02/12/210302#P2769R0-get_element-customization-point-object",
    "tag": ""
  },
  {
    "number": "P2770",
    "title": "Stashing stashing iterators for proper flattening",
    "url": "https://wg21.link/P2770",
    "ja": "https://onihusube.hatenablog.com/entry/2023/03/19/184146#P2770R0-Stashing-stashing-iterators-for-proper-flattening",
    "ja_old": "https://onihusube.hatenablog.com/entry/2023/03/19/184146#P2770R0-Stashing-stashing-iterators-for-proper-flattening",
    "tag": ""
  },
  {
    "number": "P2771",
    "title": "Towards memory safety in C++",
    "url": "https://wg21.link/P2771",
    "ja": "https://onihusube.hatenablog.com/entry/2023/03/19/184146#P2771R0-Towards-memory-safety-in-C",
    "ja_old": "https://onihusube.hatenablog.com/entry/2023/03/19/184146#P2771R0-Towards-memory-safety-in-C",
    "tag": ""
  },
  {
    "number": "P2772",
    "title": "std::integral_constant literals do not suffice - constexpr_t?",
    "url": "https://wg21.link/P2772",
    "ja": "https://onihusube.hatenablog.com/entry/2023/03/19/184146#P2772R0-stdintegral_constant-literals-do-not-suffice---constexpr_t",
    "ja_old": "https://onihusube.hatenablog.com/entry/2023/03/19/184146#P2772R0-stdintegral_constant-literals-do-not-suffice---constexpr_t",
    "tag": ""
  },
  {
    "number": "P2773",
    "title": "Considerations for Unicode algorithms",
    "url": "https://wg21.link/P2773",
    "ja": "https://onihusube.hatenablog.com/entry/2023/03/19/184146#P2773R0-Considerations-for-Unicode-algorithms",
    "ja_old": "https://onihusube.hatenablog.com/entry/2023/03/19/184146#P2773R0-Considerations-for-Unicode-algorithms",
    "tag": ""
  },
  {
    "number": "P2779",
    "title": "Make basic_string_view's range construction conditionally explicit",
    "url": "https://wg21.link/P2779",
    "ja": "https://onihusube.hatenablog.com/entry/2023/03/19/184146#P2779R0-Make-basic_string_views-range-construction-conditionally-explicit",
    "ja_old": "https://onihusube.hatenablog.com/entry/2023/03/19/184146#P2779R0-Make-basic_string_views-range-construction-conditionally-explicit",
    "tag": ""
  },
  {
    "number": "P2780",
    "title": "Caller-side precondition checking, and Eval_and_throw",
    "url": "https://wg21.link/P2780",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P2782",
    "title": "A proposal for a type trait to detect if value initialization can be achieved by zero-filling",
    "url": "https://wg21.link/P2782",
    "ja": "https://onihusube.hatenablog.com/entry/2023/03/19/184146#P2782R0-A-proposal-for-a-type-trait-to-detect-if-value-initialization-can-be-achieved-by-zero-filling",
    "ja_old": "https://onihusube.hatenablog.com/entry/2023/03/19/184146#P2782R0-A-proposal-for-a-type-trait-to-detect-if-value-initialization-can-be-achieved-by-zero-filling",
    "tag": ""
  },
  {
    "number": "P2784",
    "title": "Not halting the program after detected contract violation",
    "url": "https://wg21.link/P2784",
    "ja": "https://onihusube.hatenablog.com/entry/2023/03/19/184146#P2784R0-Not-halting-the-program-after-detected-contract-violation",
    "ja_old": "https://onihusube.hatenablog.com/entry/2023/03/19/184146#P2784R0-Not-halting-the-program-after-detected-contract-violation",
    "tag": ""
  },
  {
    "number": "P2786",
    "title": "Trivial relocatability options",
    "url": "https://wg21.link/P2786",
    "ja": "https://onihusube.hatenablog.com/entry/2023/03/19/184146#P2786R0-Trivial-relocatability-options",
    "ja_old": "https://onihusube.hatenablog.com/entry/2023/03/19/184146#P2786R0-Trivial-relocatability-options",
    "tag": ""
  },
  {
    "number": "P2787",
    "title": "pmr::generator - Promise Types are not Values",
    "url": "https://wg21.link/P2787",
    "ja": "https://onihusube.hatenablog.com/entry/2023/03/19/184146#P2787R1-pmrgenerator---Promise-Types-are-not-Values",
    "ja_old": "https://onihusube.hatenablog.com/entry/2023/03/19/184146#P2787R0-pmrgenerator---Promise-Types-are-not-Values",
    "tag": ""
  },
  {
    "number": "P2788",
    "title": "Linkage for modular constants",
    "url": "https://wg21.link/P2788",
    "ja": "https://onihusube.hatenablog.com/entry/2023/03/19/184146#P2788R0-Linkage-for-modular-constants",
    "ja_old": "https://onihusube.hatenablog.com/entry/2023/03/19/184146#P2788R0-Linkage-for-modular-constants",
    "tag": ""
  },
  {
    "number": "P2789",
    "title": "C++ Standard Library Ready Issues to be moved in Issaquah, Feb. 2023",
    "url": "https://wg21.link/P2789",
    "ja": "https://onihusube.hatenablog.com/entry/2023/03/19/184146#P2789R0-C-Standard-Library-Ready-Issues-to-be-moved-in-Issaquah-Feb-2023",
    "ja_old": "https://onihusube.hatenablog.com/entry/2023/03/19/184146#P2789R0-C-Standard-Library-Ready-Issues-to-be-moved-in-Issaquah-Feb-2023",
    "tag": ""
  },
  {
    "number": "P2790",
    "title": "C++ Standard Library Immediate Issues to be moved in Issaquah, Feb. 2023",
    "url": "https://wg21.link/P2790",
    "ja": "https://onihusube.hatenablog.com/entry/2023/03/19/184146#P2790R0-C-Standard-Library-Immediate-Issues-to-be-moved-in-Issaquah-Feb-2023",
    "ja_old": "https://onihusube.hatenablog.com/entry/2023/03/19/184146#P2790R0-C-Standard-Library-Immediate-Issues-to-be-moved-in-Issaquah-Feb-2023",
    "tag": ""
  },
  {
    "number": "P2791",
    "title": "mandate concepts for new features",
    "url": "https://wg21.link/P2791",
    "ja": "https://onihusube.hatenablog.com/entry/2023/03/19/184146#P2791R0-mandate-concepts-for-new-features",
    "ja_old": "https://onihusube.hatenablog.com/entry/2023/03/19/184146#P2791R0-mandate-concepts-for-new-features",
    "tag": ""
  },
  {
    "number": "P2796",
    "title": "Core Language Working Group \"ready\" Issues for the February, 2023 meeting",
    "url": "https://wg21.link/P2796",
    "ja": "https://onihusube.hatenablog.com/entry/2023/03/19/184146#P2796R0-Core-Language-Working-Group-ready-Issues-for-the-February-2023-meeting",
    "ja_old": "https://onihusube.hatenablog.com/entry/2023/03/19/184146#P2796R0-Core-Language-Working-Group-ready-Issues-for-the-February-2023-meeting",
    "tag": ""
  },
  {
    "number": "P2797",
    "title": "Proposed resolution for CWG2692 Static and explicit object member functions with the same par",
    "url": "https://wg21.link/P2797",
    "ja": "https://onihusube.hatenablog.com/entry/2023/03/19/184146#P2797R0-Proposed-resolution-for-CWG2692-Static-and-explicit-object-member-functions-with-the-same-par",
    "ja_old": "https://onihusube.hatenablog.com/entry/2023/03/19/184146#P2797R0-Proposed-resolution-for-CWG2692-Static-and-explicit-object-member-functions-with-the-same-par",
    "tag": ""
  },
  {
    "number": "P2798",
    "title": "Fix layout mappings all static extent default constructor",
    "url": "https://wg21.link/P2798",
    "ja": "https://onihusube.hatenablog.com/entry/2023/03/19/184146#P2798R0-Fix-layout-mappings-all-static-extent-default-constructor",
    "ja_old": "https://onihusube.hatenablog.com/entry/2023/03/19/184146#P2798R0-Fix-layout-mappings-all-static-extent-default-constructor",
    "tag": ""
  },
  {
    "number": "P2799",
    "title": "Closed ranges may be a problem; breaking counted_iterator is not the solution",
    "url": "https://wg21.link/P2799",
    "ja": "https://onihusube.hatenablog.com/entry/2023/03/19/184146#P2799R0-Closed-ranges-may-be-a-problem-breaking-counted_iterator-is-not-the-solution",
    "ja_old": "https://onihusube.hatenablog.com/entry/2023/03/19/184146#P2799R0-Closed-ranges-may-be-a-problem-breaking-counted_iterator-is-not-the-solution",
    "tag": ""
  },
  {
    "number": "P2802",
    "title": "Presentation of P1385R7 to LEWG at Issaquah 2023",
    "url": "https://wg21.link/P2802",
    "ja": "https://onihusube.hatenablog.com/entry/2023/03/19/184146#P2802R0-Presentation-of-P1385R7-to-LEWG-at-Issaquah-2023",
    "ja_old": "https://onihusube.hatenablog.com/entry/2023/03/19/184146#P2802R0-Presentation-of-P1385R7-to-LEWG-at-Issaquah-2023",
    "tag": ""
  },
  {
    "number": "P2803",
    "title": "std::simd Intro slides",
    "url": "https://wg21.link/P2803",
    "ja": "https://onihusube.hatenablog.com/entry/2023/03/19/184146#P2803R0-stdsimd-Intro-slides",
    "ja_old": "https://onihusube.hatenablog.com/entry/2023/03/19/184146#P2803R0-stdsimd-Intro-slides",
    "tag": ""
  },
  {
    "number": "P2805",
    "title": "fiber_context: fibers without scheduler - LEWG slides",
    "url": "https://wg21.link/P2805",
    "ja": "https://onihusube.hatenablog.com/entry/2023/03/19/184146#P2805R0-fiber_context-fibers-without-scheduler---LEWG-slides",
    "ja_old": "https://onihusube.hatenablog.com/entry/2023/03/19/184146#P2805R0-fiber_context-fibers-without-scheduler---LEWG-slides",
    "tag": ""
  },
  {
    "number": "P2806",
    "title": "do expressions",
    "url": "https://wg21.link/P2806",
    "ja": "https://onihusube.hatenablog.com/entry/2023/03/19/184146#P2806R0-do-expressions",
    "ja_old": "https://onihusube.hatenablog.com/entry/2023/03/19/184146#P2806R0-do-expressions",
    "tag": ""
  },
  {
    "number": "P2807",
    "title": "Issaquah Slides for Intel response to std::simd",
    "url": "https://wg21.link/P2807",
    "ja": "https://onihusube.hatenablog.com/entry/2023/03/19/184146#P2807R0-Issaquah-Slides-for-Intel-response-to-stdsimd",
    "ja_old": "https://onihusube.hatenablog.com/entry/2023/03/19/184146#P2807R0-Issaquah-Slides-for-Intel-response-to-stdsimd",
    "tag": ""
  },
  {
    "number": "P2808",
    "title": "Internal linkage in the global module",
    "url": "https://wg21.link/P2808",
    "ja": "https://onihusube.hatenablog.com/entry/2023/03/19/184146#P2808R0-Internal-linkage-in-the-global-module",
    "ja_old": "https://onihusube.hatenablog.com/entry/2023/03/19/184146#P2808R0-Internal-linkage-in-the-global-module",
    "tag": ""
  },
  {
    "number": "P2809",
    "title": "Trivial infinite loops are not Undefined Behavior",
    "url": "https://wg21.link/P2809",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P2810",
    "title": "is_debugger_present is_replaceable",
    "url": "https://wg21.link/P2810",
    "ja": "https://onihusube.hatenablog.com/entry/2023/03/19/184146#P2810R0-is_debugger_present-is_replaceable",
    "ja_old": "https://onihusube.hatenablog.com/entry/2023/03/19/184146#P2810R0-is_debugger_present-is_replaceable",
    "tag": ""
  },
  {
    "number": "P2811",
    "title": "Contract Violation Handlers",
    "url": "https://wg21.link/P2811",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P2812",
    "title": "P1673R11 LEWG presentation",
    "url": "https://wg21.link/P2812",
    "ja": "https://onihusube.hatenablog.com/entry/2023/03/19/184146#P2812R0-P1673R11-LEWG-presentation",
    "ja_old": "https://onihusube.hatenablog.com/entry/2023/03/19/184146#P2812R0-P1673R11-LEWG-presentation",
    "tag": ""
  },
  {
    "number": "P2815",
    "title": "Slides for presentation on P2188R1",
    "url": "https://wg21.link/P2815",
    "ja": "https://onihusube.hatenablog.com/entry/2023/03/19/184146#P2815R0-Slides-for-presentation-on-P2188R1",
    "ja_old": "https://onihusube.hatenablog.com/entry/2023/03/19/184146#P2815R0-Slides-for-presentation-on-P2188R1",
    "tag": ""
  },
  {
    "number": "P2816",
    "title": "Safety Profiles: Type-and-resource Safe programming in ISO Standard C++",
    "url": "https://wg21.link/P2816",
    "ja": "https://onihusube.hatenablog.com/entry/2023/03/19/184146#P2816R0-Safety-Profiles-Type-and-resource-Safe-programming-in-ISO-Standard-C",
    "ja_old": "https://onihusube.hatenablog.com/entry/2023/03/19/184146#P2816R0-Safety-Profiles-Type-and-resource-Safe-programming-in-ISO-Standard-C",
    "tag": ""
  },
  {
    "number": "P2817",
    "title": "The idea behind the contracts MVP",
    "url": "https://wg21.link/P2817",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P2818",
    "title": "Uniform Call Syntax for explicit-object member functions",
    "url": "https://wg21.link/P2818",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P2819",
    "title": "Add tuple protocol to complex",
    "url": "https://wg21.link/P2819",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P2821",
    "title": "span.at()",
    "url": "https://wg21.link/P2821",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P2824",
    "title": "WG21 February 2023 Issaquah meeting Record of Discussion",
    "url": "https://wg21.link/P2824",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P2825",
    "title": "calltarget(unevaluated-call-expression)",
    "url": "https://wg21.link/P2825",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P2826",
    "title": "Replacement functions",
    "url": "https://wg21.link/P2826",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P2827",
    "title": "Floating-point overflow and underflow in from_chars (LWG 3081)",
    "url": "https://wg21.link/P2827",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P2828",
    "title": "Copy elision for direct-initialization with a conversion function (Core issue 2327)",
    "url": "https://wg21.link/P2828",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P2830",
    "title": "constexpr type comparison",
    "url": "https://wg21.link/P2830",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P2833",
    "title": "Freestanding Library: inout expected span",
    "url": "https://wg21.link/P2833",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P2836",
    "title": "std::const_iterator often produces an unexpected type",
    "url": "https://wg21.link/P2836",
    "ja": "",
    "ja_old": "",
    "tag": ""
  },
  {
    "number": "P2838",
    "title": "Unconditional contract violation handling of any kind is a serious problem",
    "url": "https://wg21.link/P2838",
    "ja": "",
    "ja_old": "",
    "tag": ""
  }
]
